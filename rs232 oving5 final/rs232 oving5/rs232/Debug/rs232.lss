
rs232.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ca  00800100  00003064  000030f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003064  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000052  008001ca  008001ca  000031c2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000031c2  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000338  00000000  00000000  0000321e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002a64  00000000  00000000  00003556  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000117f  00000000  00000000  00005fba  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000f27  00000000  00000000  00007139  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000808  00000000  00000000  00008060  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000008e5  00000000  00000000  00008868  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001a26  00000000  00000000  0000914d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002d8  00000000  00000000  0000ab73  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
		}
	}
}

void pong_update_highscore()
{
       0:	0c 94 38 0e 	jmp	0x1c70	; 0x1c70 <__ctors_end>
       4:	0c 94 13 13 	jmp	0x2626	; 0x2626 <__vector_1>
       8:	0c 94 46 13 	jmp	0x268c	; 0x268c <__vector_2>
       c:	0c 94 55 13 	jmp	0x26aa	; 0x26aa <__vector_3>
	uint16_t temp = 0;
	uint16_t temp2 = 0;
	for(int i = 0; i<3; i++)
	{
		if(time > highscore[i])
      10:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      14:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      18:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      1c:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
		{
			temp = highscore[i];
			highscore[i] = time;
      20:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      24:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      28:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
	}
}

void pong_update_highscore()
{
	uint16_t temp = 0;
      2c:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
	uint16_t temp2 = 0;
	for(int i = 0; i<3; i++)
	{
		if(time > highscore[i])
      30:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      34:	0c 94 af 12 	jmp	0x255e	; 0x255e <__vector_13>
      38:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      3c:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      40:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
		{
			temp = highscore[i];
			highscore[i] = time;
      44:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
	uint16_t temp2 = 0;
	for(int i = 0; i<3; i++)
	{
		if(time > highscore[i])
		{
			temp = highscore[i];
      48:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
			highscore[i] = time;
		}else if(temp != 0)
      4c:	0c 94 9a 13 	jmp	0x2734	; 0x2734 <__vector_19>
		{
			temp2 = highscore[i];
			highscore[i] = temp;
      50:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
			temp = temp2;
      54:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>

void pong_update_highscore()
{
	uint16_t temp = 0;
	uint16_t temp2 = 0;
	for(int i = 0; i<3; i++)
      58:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      5c:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
			temp2 = highscore[i];
			highscore[i] = temp;
			temp = temp2;
		}
	}
}
      60:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      64:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      68:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>
      6c:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__bad_interrupt>

00000070 <GO_f4>:
	...
      f8:	00 c0 f0 f0 3c 0c 0c 0c 0c 3c 3c f0 00 00 00 00     ....<....<<.....
     108:	c0 fc fc fc c0 00 00 00 00 fc fc fc c0 c0 00 00     ................
     118:	00 00 00 c0 fc fc fc 00 00 00 fc fc 0c 0c 0c 0c     ................
     128:	0c 0c 0c 00 00 00 00 00 00 00 00 c0 c0 f0 3c 0c     ..............<.
     138:	0c 0c 3c 3c f0 c0 00 00 3c fc c0 c0 00 00 c0 c0     ..<<....<.......
     148:	fc 3c 00 00 fc fc fc 0c 0c 0c 0c 0c 0c 00 00 00     .<..............
     158:	fc fc fc 0c 0c 0c 0c 0c fc fc f0 00 00 00 00 00     ................
	...
     178:	00 ff ff ff 00 00 30 30 30 f0 f0 f0 00 00 00 f0     ......000.......
     188:	ff 03 03 03 ff f0 f0 00 00 ff ff ff 3f 3f fc c0     ............??..
     198:	c0 c0 fc 3f ff ff ff 00 00 00 ff ff 0c 0c 0c 0c     ...?............
     1a8:	0c 0c 00 00 00 00 00 00 00 00 00 ff ff ff 00 00     ................
     1b8:	00 00 00 00 ff ff 00 00 00 0f ff ff c0 c0 ff ff     ................
     1c8:	0f 00 00 00 ff ff ff 0c 0c 0c 0c 0c 00 00 00 00     ................
     1d8:	ff ff ff 30 30 30 30 30 ff ff cf 00 00 00 00 00     ...00000........
	...
     1f8:	00 03 0f 0f 3c 30 30 30 30 0f 0f 3f 00 3c 3c 3f     ....<0000..?.<<?
     208:	03 03 03 03 03 3f 3f 3c 00 3f 3f 3f 00 00 03 3f     .....??<.???...?
     218:	3f 3f 03 00 3f 3f 3f 00 00 00 3f 3f 30 30 30 30     ??..???...??0000
     228:	30 30 30 00 00 00 00 00 00 00 00 03 03 0f 3c 30     000...........<0
     238:	30 30 3c 3c 0f 03 00 00 00 00 03 03 3f 3f 03 03     00<<........??..
     248:	00 00 00 00 3f 3f 3f 30 30 30 30 30 30 00 00 00     ....???000000...
     258:	3f 3f 3f 00 00 00 00 00 0f 0f 3f 30 00 00 00 00     ???.......?0....
	...
     274:	80 80 80 80 80 80 80 80 00 00 00 00 00 00 00 00     ................
	...
     2a4:	00 00 80 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     2e4:	80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     2f4:	00 00 00 ff ff 00 00 00 00 fc fc 0c 04 0c 3c f0     ..............<.
     304:	c0 c0 f0 3c 0c 00 00 00 00 00 c8 ec 34 14 fc f8     ...<........4...
     314:	00 00 f8 fc 04 04 fc fc 00 00 c8 ec 34 14 fc f8     ............4...
     324:	00 00 fd fd 00 00 fc fc 04 04 fc f8 00 00 00 00     ................
	...
     364:	ff ff ff 00 80 00 00 00 00 00 00 00 00 00 00 00     ................
     374:	00 00 00 01 01 00 00 00 00 01 01 00 00 00 08 0c     ................
     384:	07 03 00 00 00 00 00 00 00 00 00 01 01 01 01 01     ................
     394:	00 00 04 0d 09 09 0f 07 00 00 00 01 01 01 01 01     ................
     3a4:	00 00 01 01 00 00 01 01 00 00 01 01 00 00 00 00     ................
	...
     3e4:	e3 e3 e3 63 80 00 00 08 1c 08 00 00 00 00 00 00     ...c............
	...
     464:	3f 3f 3f 00 00 00 00 00 00 00 00 00                 ???.........

00000470 <GO_f3>:
	...
     4f8:	00 c0 f0 f0 3c 0c 0c 0c 0c 3c 3c f0 00 00 00 00     ....<....<<.....
     508:	c0 fc fc fc c0 00 00 00 00 fc fc fc c0 c0 00 00     ................
     518:	00 00 00 c0 fc fc fc 00 00 00 fc fc 0c 0c 0c 0c     ................
     528:	0c 0c 0c 00 00 00 00 00 00 00 00 c0 c0 f0 3c 0c     ..............<.
     538:	0c 0c 3c 3c f0 c0 00 00 3c fc c0 c0 00 00 c0 c0     ..<<....<.......
     548:	fc 3c 00 00 fc fc fc 0c 0c 0c 0c 0c 0c 00 00 00     .<..............
     558:	fc fc fc 0c 0c 0c 0c 0c fc fc f0 00 00 00 00 00     ................
	...
     578:	00 ff ff ff 00 00 30 30 30 f0 f0 f0 00 00 00 f0     ......000.......
     588:	ff 03 03 03 ff f0 f0 00 00 ff ff ff 3f 3f fc c0     ............??..
     598:	c0 c0 fc 3f ff ff ff 00 00 00 ff ff 0c 0c 0c 0c     ...?............
     5a8:	0c 0c 00 00 00 00 00 00 00 00 00 ff ff ff 00 00     ................
     5b8:	00 00 00 00 ff ff 00 00 00 0f ff ff c0 c0 ff ff     ................
     5c8:	0f 00 00 00 ff ff ff 0c 0c 0c 0c 0c 00 00 00 00     ................
     5d8:	ff ff ff 30 30 30 30 30 ff ff cf 00 00 00 00 00     ...00000........
	...
     5f8:	00 03 0f 0f 3c 30 30 30 30 0f 0f 3f 00 3c 3c 3f     ....<0000..?.<<?
     608:	03 03 03 03 03 3f 3f 3c 00 3f 3f 3f 00 00 03 3f     .....??<.???...?
     618:	3f 3f 03 00 3f 3f 3f 00 00 00 3f 3f 30 30 30 30     ??..???...??0000
     628:	30 30 30 00 00 00 00 00 00 00 00 03 03 0f 3c 30     000...........<0
     638:	30 30 3c 3c 0f 03 00 00 00 00 03 03 3f 3f 03 03     00<<........??..
     648:	00 00 00 00 3f 3f 3f 30 30 30 30 30 30 00 00 00     ....???000000...
     658:	3f 3f 3f 00 00 00 00 00 0f 0f 3f 30 00 00 00 00     ???.......?0....
	...
     674:	80 80 80 80 80 80 80 80 00 00 00 00 00 00 00 00     ................
	...
     6a4:	00 00 80 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     6e4:	80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     6f4:	00 00 00 ff ff 00 00 00 00 fc fc 0c 04 0c 3c f0     ..............<.
     704:	c0 c0 f0 3c 0c 00 00 00 00 00 c8 ec 34 14 fc f8     ...<........4...
     714:	00 00 f8 fc 04 04 fc fc 00 00 c8 ec 34 14 fc f8     ............4...
     724:	00 00 fd fd 00 00 fc fc 04 04 fc f8 00 00 00 00     ................
	...
     764:	ff ff ff 00 80 00 00 00 00 00 00 00 00 00 00 00     ................
     774:	00 00 00 01 01 00 00 00 00 01 01 00 00 00 08 0c     ................
     784:	07 03 00 00 00 00 00 00 00 00 00 01 01 01 01 01     ................
     794:	00 00 04 0d 09 09 0f 07 00 00 00 01 01 01 01 01     ................
     7a4:	00 00 01 01 00 00 01 01 00 00 01 01 00 00 00 00     ................
	...
     7e4:	e3 e3 e3 6b 9c 08 00 00 00 00 00 00 00 00 00 00     ...k............
	...
     864:	3f 3f 3f 00 00 00 00 00 00 00 00 00                 ???.........

00000870 <GO_f2>:
	...
     8f8:	00 c0 f0 f0 3c 0c 0c 0c 0c 3c 3c f0 00 00 00 00     ....<....<<.....
     908:	c0 fc fc fc c0 00 00 00 00 fc fc fc c0 c0 00 00     ................
     918:	00 00 00 c0 fc fc fc 00 00 00 fc fc 0c 0c 0c 0c     ................
     928:	0c 0c 0c 00 00 00 00 00 00 00 00 c0 c0 f0 3c 0c     ..............<.
     938:	0c 0c 3c 3c f0 c0 00 00 3c fc c0 c0 00 00 c0 c0     ..<<....<.......
     948:	fc 3c 00 00 fc fc fc 0c 0c 0c 0c 0c 0c 00 00 00     .<..............
     958:	fc fc fc 0c 0c 0c 0c 0c fc fc f0 00 00 00 00 00     ................
	...
     978:	00 ff ff ff 00 00 30 30 30 f0 f0 f0 00 00 00 f0     ......000.......
     988:	ff 03 03 03 ff f0 f0 00 00 ff ff ff 3f 3f fc c0     ............??..
     998:	c0 c0 fc 3f ff ff ff 00 00 00 ff ff 0c 0c 0c 0c     ...?............
     9a8:	0c 0c 00 00 00 00 00 00 00 00 00 ff ff ff 00 00     ................
     9b8:	00 00 00 00 ff ff 00 00 00 0f ff ff c0 c0 ff ff     ................
     9c8:	0f 00 00 00 ff ff ff 0c 0c 0c 0c 0c 00 00 00 00     ................
     9d8:	ff ff ff 30 30 30 30 30 ff ff cf 00 00 00 00 00     ...00000........
	...
     9f8:	00 03 0f 0f 3c 30 30 30 30 0f 0f 3f 00 3c 3c 3f     ....<0000..?.<<?
     a08:	03 03 03 03 03 3f 3f 3c 00 3f 3f 3f 00 00 03 3f     .....??<.???...?
     a18:	3f 3f 03 00 3f 3f 3f 00 00 00 3f 3f 30 30 30 30     ??..???...??0000
     a28:	30 30 30 00 00 00 00 00 00 00 00 03 03 0f 3c 30     000...........<0
     a38:	30 30 3c 3c 0f 03 00 00 00 00 03 03 3f 3f 03 03     00<<........??..
     a48:	00 00 00 00 3f 3f 3f 30 30 30 30 30 30 00 00 00     ....???000000...
     a58:	3f 3f 3f 00 00 00 00 00 0f 0f 3f 30 00 00 00 00     ???.......?0....
	...
     a74:	80 80 80 80 80 80 80 80 00 00 00 00 00 00 00 00     ................
	...
     aa4:	00 00 80 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     ae4:	80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     af4:	00 00 00 ff ff 00 00 00 00 fc fc 0c 04 0c 3c f0     ..............<.
     b04:	c0 c0 f0 3c 0c 00 00 00 00 00 c8 ec 34 14 fc f8     ...<........4...
     b14:	00 00 f8 fc 04 04 fc fc 00 00 c8 ec 34 14 fc f8     ............4...
     b24:	00 00 fd fd 00 00 fc fc 04 04 fc f8 00 00 00 00     ................
	...
     b64:	ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     b74:	00 00 00 01 01 00 00 00 00 01 01 00 00 00 08 0c     ................
     b84:	07 03 00 00 00 00 00 00 00 00 00 01 01 01 01 01     ................
     b94:	00 00 04 0d 09 09 0f 07 00 00 00 01 01 01 01 01     ................
     ba4:	00 00 01 01 00 00 01 01 00 00 01 01 00 00 00 00     ................
	...
     be0:	08 1c 08 00 ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     c64:	3f 3f 3f 00 00 00 00 00 00 00 00 00                 ???.........

00000c70 <GO_f1>:
	...
     cf8:	00 c0 f0 f0 3c 0c 0c 0c 0c 3c 3c f0 00 00 00 00     ....<....<<.....
     d08:	c0 fc fc fc c0 00 00 00 00 fc fc fc c0 c0 00 00     ................
     d18:	00 00 00 c0 fc fc fc 00 00 00 fc fc 0c 0c 0c 0c     ................
     d28:	0c 0c 0c 00 00 00 00 00 00 00 00 c0 c0 f0 3c 0c     ..............<.
     d38:	0c 0c 3c 3c f0 c0 00 00 3c fc c0 c0 00 00 c0 c0     ..<<....<.......
     d48:	fc 3c 00 00 fc fc fc 0c 0c 0c 0c 0c 0c 00 00 00     .<..............
     d58:	fc fc fc 0c 0c 0c 0c 0c fc fc f0 00 00 00 00 00     ................
	...
     d78:	00 ff ff ff 00 00 30 30 30 f0 f0 f0 00 00 00 f0     ......000.......
     d88:	ff 03 03 03 ff f0 f0 00 00 ff ff ff 3f 3f fc c0     ............??..
     d98:	c0 c0 fc 3f ff ff ff 00 00 00 ff ff 0c 0c 0c 0c     ...?............
     da8:	0c 0c 00 00 00 00 00 00 00 00 00 ff ff ff 00 00     ................
     db8:	00 00 00 00 ff ff 00 00 00 0f ff ff c0 c0 ff ff     ................
     dc8:	0f 00 00 00 ff ff ff 0c 0c 0c 0c 0c 00 00 00 00     ................
     dd8:	ff ff ff 30 30 30 30 30 ff ff cf 00 00 00 00 00     ...00000........
	...
     df8:	00 03 0f 0f 3c 30 30 30 30 0f 0f 3f 00 3c 3c 3f     ....<0000..?.<<?
     e08:	03 03 03 03 03 3f 3f 3c 00 3f 3f 3f 00 00 03 3f     .....??<.???...?
     e18:	3f 3f 03 00 3f 3f 3f 00 00 00 3f 3f 30 30 30 30     ??..???...??0000
     e28:	30 30 30 00 00 00 00 00 00 00 00 03 03 0f 3c 30     000...........<0
     e38:	30 30 3c 3c 0f 03 00 00 00 00 03 03 3f 3f 03 03     00<<........??..
     e48:	00 00 00 00 3f 3f 3f 30 30 30 30 30 30 00 00 00     ....???000000...
     e58:	3f 3f 3f 00 00 00 00 00 0f 0f 3f 30 00 00 00 00     ???.......?0....
	...
     e74:	80 80 80 80 80 80 80 80 00 00 00 00 00 00 00 00     ................
	...
     ea4:	00 00 80 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     ee4:	80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ef4:	00 00 00 ff ff 00 00 00 00 fc fc 0c 04 0c 3c f0     ..............<.
     f04:	c0 c0 f0 3c 0c 00 00 00 00 00 c8 ec 34 14 fc f8     ...<........4...
     f14:	00 00 f8 fc 04 04 fc fc 00 00 c8 ec 34 14 fc f8     ............4...
     f24:	00 00 fd fd 00 00 fc fc 04 04 fc f8 00 00 00 00     ................
	...
     f64:	ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     f74:	00 00 00 01 01 00 00 00 00 01 01 00 00 00 08 0c     ................
     f84:	07 03 00 00 00 00 00 00 00 00 00 01 01 01 01 01     ................
     f94:	00 00 04 0d 09 09 0f 07 00 00 00 01 01 01 01 01     ................
     fa4:	00 00 01 01 00 00 01 01 00 00 01 01 00 00 00 00     ................
	...
     fdc:	08 1c 08 00 00 00 00 00 ff ff ff 00 00 00 00 00     ................
	...
    1064:	3f 3f 3f 00 00 00 00 00 00 00 00 00                 ???.........

00001070 <HS_f3>:
	...
    1120:	c0 f0 f0 f0 f0 f0 00 e0 f0 f0 d0 f0 f0 70 b0 b0     .............p..
    1130:	b0 b0 30 10 d0 f0 f0 70 10 c0 f0 f0 70 10 c0 f0     ..0....p....p...
    1140:	f0 70 10 00 00 00 00 00 00 00 00 00 00 00 00 00     .p..............
	...
    119c:	00 00 08 0e 0f 0f 01 01 0f 0f 0f 0f 0f 0e 0f 0f     ................
    11ac:	0d 0d 0d 0d 0c 04 00 02 0f 0f 0f 0c 0e 0f 0f 0d     ................
    11bc:	0c 0e 0f 0f 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    11f4:	00 80 e0 fc ff 3f 2f 31 30 b0 f0 fe ff 3f 07 85     .....?/10....?..
    1204:	82 c3 fb ff ff 9f 83 83 03 03 31 fc fe ff 8f c7     ..........1.....
    1214:	a7 f7 f7 f7 77 93 e1 fc ff 3f 2f 31 30 b0 f0 fe     ....w....?/10...
    1224:	ff 3f 07 9d be bf bf b7 b7 b7 f7 f7 e7 03 01 31     .?.............1
    1234:	fc fe ff cf 87 83 83 83 83 03 03 f1 fc fe fe 8f     ................
    1244:	87 87 83 c7 e7 ff ff 3e 80 e0 fc ff 3f 6f f3 f3     .......>....?o..
    1254:	f3 b3 3f 3f 1f 8e e0 fc ff bf af b3 b3 b3 93 93     ..??............
    1264:	03 03 61 fc 7f 3f 0f 01 00 00 00 00 00 00 00 00     ..a..?..........
    1274:	00 03 03 03 01 00 00 00 02 03 03 03 02 02 03 03     ................
    1284:	03 03 03 03 03 03 03 00 00 00 00 00 01 03 03 03     ................
    1294:	03 03 03 03 00 03 03 03 01 00 00 00 02 03 03 03     ................
    12a4:	c0 c2 c3 c3 83 83 83 03 03 03 03 03 01 00 00 00     ................
    12b4:	00 01 03 83 03 03 03 03 01 00 00 00 01 03 03 03     ................
    12c4:	03 03 03 03 01 01 00 00 03 03 03 01 00 00 00 01     ................
    12d4:	03 03 03 02 02 03 03 03 03 03 03 03 03 03 03 01     ................
    12e4:	00 03 03 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1308:	00 40 40 60 60 60 e0 e0 c0 c0 80 80 00 80 c0 c0     .@@```..........
    1318:	80 00 10 18 18 1c 3c 3c 3e 7c 7c fc fc 79 3f bf     ......<<>||..y?.
    1328:	9f 9f cf cf 8f 9e 1c 10 00 00 0c 8e 8e cf ff ff     ................
    1338:	ff ff fe fc fc 08 00 c0 f0 fc fc fe fe ff ff ff     ................
    1348:	ff fe fe fc fc f8 c0 00 00 00 00 00 00 00 00 00     ................
	...
    1390:	03 07 07 07 07 07 03 03 01 40 70 38 3c 1e 3e 3e     .........@p8<.>>
    13a0:	7c 7c f8 f8 f9 f1 f0 f0 f0 e1 c3 43 47 07 0f 0f     ||.........CG...
    13b0:	0f 8f 8f 8f cf c7 e3 e3 f3 73 73 23 03 00 00 03     .........ss#....
    13c0:	0a 2f 55 2f db 6f bf 5f ff bf 5f 7f 3f 1f 07 00     ./U/.o._.._.?...
	...
    1420:	00 00 00 01 01 03 03 01 01 01 00 00 00 00 03 03     ................
    1430:	07 07 07 07 07 07 07 03 00 00 00 00 00 00 00 00     ................
	...

00001470 <HS_f2>:
	...
    1520:	c0 f0 f0 f0 f0 f0 00 e0 f0 f0 d0 f0 f0 70 b0 b0     .............p..
    1530:	b0 b0 30 10 d0 f0 f0 70 10 c0 f0 f0 70 10 c0 f0     ..0....p....p...
    1540:	f0 70 10 00 00 00 00 00 00 00 00 00 00 00 00 00     .p..............
	...
    159c:	00 00 08 0e 0f 0f 01 01 0f 0f 0f 0f 0f 0e 0f 0f     ................
    15ac:	0d 0d 0d 0d 0c 04 00 02 0f 0f 0f 0c 0e 0f 0f 0d     ................
    15bc:	0c 0e 0f 0f 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    15f4:	00 80 e0 fc ff 3f 2f 31 30 b0 f0 fe ff 3f 07 85     .....?/10....?..
    1604:	82 c3 fb ff ff 9f 83 83 03 03 31 fc fe ff 8f c7     ..........1.....
    1614:	a7 f7 f7 f7 77 93 e1 fc ff 3f 2f 31 30 b0 f0 fe     ....w....?/10...
    1624:	ff 3f 07 9d be bf bf b7 b7 b7 f7 f7 e7 03 01 31     .?.............1
    1634:	fc fe ff cf 87 83 83 83 83 03 03 f1 fc fe fe 8f     ................
    1644:	87 87 83 c7 e7 ff ff 3e 80 e0 fc ff 3f 6f f3 f3     .......>....?o..
    1654:	f3 b3 3f 3f 1f 8e e0 fc ff bf af b3 b3 b3 93 93     ..??............
    1664:	03 03 61 fc 7f 3f 0f 01 00 00 00 00 00 00 00 00     ..a..?..........
    1674:	00 03 03 03 01 00 00 00 02 03 03 03 02 02 03 03     ................
    1684:	03 03 03 03 03 03 03 00 00 00 00 00 01 03 03 03     ................
    1694:	03 03 03 03 00 03 03 03 01 00 00 00 02 03 03 03     ................
    16a4:	00 02 03 03 03 03 03 03 03 83 83 83 81 00 00 00     ................
    16b4:	00 01 03 03 03 03 03 03 01 00 00 00 01 03 03 03     ................
    16c4:	03 03 03 03 01 01 00 00 03 03 03 01 00 00 00 01     ................
    16d4:	03 03 03 02 02 03 03 03 03 03 03 03 03 03 03 01     ................
    16e4:	00 03 03 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    171c:	80 c0 e0 c0 00 00 04 0c 0e 0e 1e 1e 3c 3c 78 f8     ............<<x.
    172c:	f8 7f 7f 0f 8f 87 86 04 0c 08 48 40 c0 cc ec c4     ..........H@....
    173c:	c0 00 00 c0 f0 fc fc fe 1e ff ff ff ff fe fe fc     ................
    174c:	fc f8 c0 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1798:	00 01 03 03 03 01 01 00 00 00 00 02 07 07 07 0e     ................
    17a8:	1e 5c dc dc f8 f8 f8 f8 f0 61 21 23 03 87 86 86     .\.......a!#....
    17b8:	c6 c7 c7 e7 63 10 00 03 0a 2f 55 2f da 6f bf 5f     ....c..../U/.o._
    17c8:	ff bf 5f 7f 3f 1f 07 00 00 00 00 00 00 00 00 00     .._.?...........
	...
    182c:	01 01 00 00 00 00 00 00 00 01 01 03 03 03 01 00     ................
	...

00001870 <HS_f1>:
	...
    1920:	c0 f0 f0 f0 f0 f0 00 e0 f0 f0 d0 f0 f0 70 b0 b0     .............p..
    1930:	b0 b0 30 10 d0 f0 f0 70 10 c0 f0 f0 70 10 c0 f0     ..0....p....p...
    1940:	f0 70 10 00 00 00 00 00 00 00 00 00 00 00 00 00     .p..............
	...
    199c:	00 00 08 0e 0f 0f 01 01 0f 0f 0f 0f 0f 0e 0f 0f     ................
    19ac:	0d 0d 0d 0d 0c 04 00 02 0f 0f 0f 0c 0e 0f 0f 0d     ................
    19bc:	0c 0e 0f 0f 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19f4:	00 80 e0 fc ff 3f 2f 31 30 b0 f0 fe ff 3f 07 85     .....?/10....?..
    1a04:	82 c3 fb ff ff 9f 83 83 03 03 31 fc fe ff 8f c7     ..........1.....
    1a14:	a7 f7 f7 f7 77 93 e1 fc ff 3f 2f 31 30 b0 f0 fe     ....w....?/10...
    1a24:	ff 3f 07 9d be bf bf b7 b7 b7 f7 f7 e7 03 01 31     .?.............1
    1a34:	fc fe ff cf 87 83 83 83 83 03 03 f1 fc fe fe 8f     ................
    1a44:	87 87 83 c7 e7 ff ff 3e 80 e0 fc ff 3f 6f f3 f3     .......>....?o..
    1a54:	f3 b3 3f 3f 1f 8e e0 fc ff bf af b3 b3 b3 93 93     ..??............
    1a64:	03 03 61 fc 7f 3f 0f 01 00 00 00 00 00 00 00 00     ..a..?..........
    1a74:	00 03 03 03 01 00 00 00 02 03 03 03 02 02 03 03     ................
    1a84:	03 03 03 03 03 03 03 00 00 00 00 00 01 03 03 03     ................
    1a94:	03 03 03 03 00 03 03 03 01 00 00 00 02 03 03 83     ................
    1aa4:	80 c2 c3 83 83 83 03 03 03 03 c3 c3 e1 e0 e0 e0     ................
    1ab4:	e0 e1 e3 c3 03 03 03 03 01 00 00 00 01 03 03 03     ................
    1ac4:	03 03 03 03 01 01 00 00 03 03 03 01 00 00 00 01     ................
    1ad4:	03 03 03 02 02 03 03 03 03 03 03 03 03 03 03 01     ................
    1ae4:	00 03 03 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1b10:	c0 e0 e0 e0 e0 e0 c0 c0 80 02 0e 1c 3c 78 7c 7c     ............<x||
    1b20:	3e 3e 1f 1f 9f 8f 0f 0f 0f 87 c3 c2 62 60 70 30     >>..........b`p0
    1b30:	30 31 71 71 f3 e3 c7 c7 cf ce ce c4 c0 00 00 c0     01qq............
    1b40:	f0 fc fc fe fe ff ff ff ff fe fe fc fc f8 c0 00     ................
	...
    1b8c:	00 02 03 03 03 03 01 01 00 01 03 03 01 00 08 18     ................
    1b9c:	18 38 3c 3c 3c 1e 1e 0f 0f 0f ff ff f8 f8 70 30     .8<<<.........p0
    1bac:	10 18 08 08 00 00 30 70 70 f3 ff ff ff ff 7f 3f     ......0pp......?
    1bbc:	3f 10 00 03 0a 2f 55 2f db 6f bf 5f ff bf 5f 7f     ?..../U/.o._.._.
    1bcc:	3f 1f 07 00 00 00 00 00 00 00 00 00 00 00 00 00     ?...............
	...
    1c24:	00 01 01 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1c34:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00001c70 <__ctors_end>:
    1c70:	11 24       	eor	r1, r1
    1c72:	1f be       	out	0x3f, r1	; 63
    1c74:	cf ef       	ldi	r28, 0xFF	; 255
    1c76:	d4 e0       	ldi	r29, 0x04	; 4
    1c78:	de bf       	out	0x3e, r29	; 62
    1c7a:	cd bf       	out	0x3d, r28	; 61

00001c7c <__do_copy_data>:
    1c7c:	11 e0       	ldi	r17, 0x01	; 1
    1c7e:	a0 e0       	ldi	r26, 0x00	; 0
    1c80:	b1 e0       	ldi	r27, 0x01	; 1
    1c82:	e4 e6       	ldi	r30, 0x64	; 100
    1c84:	f0 e3       	ldi	r31, 0x30	; 48
    1c86:	02 c0       	rjmp	.+4      	; 0x1c8c <__do_copy_data+0x10>
    1c88:	05 90       	lpm	r0, Z+
    1c8a:	0d 92       	st	X+, r0
    1c8c:	aa 3c       	cpi	r26, 0xCA	; 202
    1c8e:	b1 07       	cpc	r27, r17
    1c90:	d9 f7       	brne	.-10     	; 0x1c88 <__do_copy_data+0xc>

00001c92 <__do_clear_bss>:
    1c92:	22 e0       	ldi	r18, 0x02	; 2
    1c94:	aa ec       	ldi	r26, 0xCA	; 202
    1c96:	b1 e0       	ldi	r27, 0x01	; 1
    1c98:	01 c0       	rjmp	.+2      	; 0x1c9c <.do_clear_bss_start>

00001c9a <.do_clear_bss_loop>:
    1c9a:	1d 92       	st	X+, r1

00001c9c <.do_clear_bss_start>:
    1c9c:	ac 31       	cpi	r26, 0x1C	; 28
    1c9e:	b2 07       	cpc	r27, r18
    1ca0:	e1 f7       	brne	.-8      	; 0x1c9a <.do_clear_bss_loop>
    1ca2:	0e 94 31 12 	call	0x2462	; 0x2462 <main>
    1ca6:	0c 94 30 18 	jmp	0x3060	; 0x3060 <_exit>

00001caa <__bad_interrupt>:
    1caa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001cae <ADC_busy>:
    1cae:	80 91 ca 01 	lds	r24, 0x01CA
    1cb2:	08 95       	ret

00001cb4 <ADC_init>:
    1cb4:	8b b7       	in	r24, 0x3b	; 59
    1cb6:	80 64       	ori	r24, 0x40	; 64
    1cb8:	8b bf       	out	0x3b, r24	; 59
    1cba:	85 b7       	in	r24, 0x35	; 53
    1cbc:	82 60       	ori	r24, 0x02	; 2
    1cbe:	85 bf       	out	0x35, r24	; 53
    1cc0:	85 b7       	in	r24, 0x35	; 53
    1cc2:	8e 7f       	andi	r24, 0xFE	; 254
    1cc4:	85 bf       	out	0x35, r24	; 53
    1cc6:	78 94       	sei
    1cc8:	8d e0       	ldi	r24, 0x0D	; 13
    1cca:	91 e0       	ldi	r25, 0x01	; 1
    1ccc:	0e 94 31 15 	call	0x2a62	; 0x2a62 <puts>
    1cd0:	08 95       	ret

00001cd2 <ADC_read>:
    1cd2:	cf 93       	push	r28
    1cd4:	c8 2f       	mov	r28, r24
    1cd6:	8f ef       	ldi	r24, 0xFF	; 255
    1cd8:	8c 0f       	add	r24, r28
    1cda:	84 30       	cpi	r24, 0x04	; 4
    1cdc:	68 f0       	brcs	.+26     	; 0x1cf8 <ADC_read+0x26>
    1cde:	1f 92       	push	r1
    1ce0:	cf 93       	push	r28
    1ce2:	8e e1       	ldi	r24, 0x1E	; 30
    1ce4:	91 e0       	ldi	r25, 0x01	; 1
    1ce6:	9f 93       	push	r25
    1ce8:	8f 93       	push	r24
    1cea:	0e 94 1d 15 	call	0x2a3a	; 0x2a3a <printf>
    1cee:	0f 90       	pop	r0
    1cf0:	0f 90       	pop	r0
    1cf2:	0f 90       	pop	r0
    1cf4:	0f 90       	pop	r0
    1cf6:	0a c0       	rjmp	.+20     	; 0x1d0c <ADC_read+0x3a>
    1cf8:	81 e0       	ldi	r24, 0x01	; 1
    1cfa:	90 e0       	ldi	r25, 0x00	; 0
    1cfc:	0e 94 57 0e 	call	0x1cae	; 0x1cae <ADC_busy>
    1d00:	83 e0       	ldi	r24, 0x03	; 3
    1d02:	8c 0f       	add	r24, r28
    1d04:	80 93 00 14 	sts	0x1400, r24
    1d08:	c0 93 06 01 	sts	0x0106, r28
    1d0c:	cf 91       	pop	r28
    1d0e:	08 95       	ret

00001d10 <CAN_init>:
    1d10:	0e 94 44 10 	call	0x2088	; 0x2088 <MCP2515_reset>
    1d14:	4f ef       	ldi	r20, 0xFF	; 255
    1d16:	63 e0       	ldi	r22, 0x03	; 3
    1d18:	8b e2       	ldi	r24, 0x2B	; 43
    1d1a:	0e 94 2a 10 	call	0x2054	; 0x2054 <MCP2515_bit_modify>
    1d1e:	4f ef       	ldi	r20, 0xFF	; 255
    1d20:	64 e6       	ldi	r22, 0x64	; 100
    1d22:	80 e6       	ldi	r24, 0x60	; 96
    1d24:	0e 94 2a 10 	call	0x2054	; 0x2054 <MCP2515_bit_modify>
    1d28:	4f ef       	ldi	r20, 0xFF	; 255
    1d2a:	60 e6       	ldi	r22, 0x60	; 96
    1d2c:	80 e7       	ldi	r24, 0x70	; 112
    1d2e:	0e 94 2a 10 	call	0x2054	; 0x2054 <MCP2515_bit_modify>
    1d32:	43 e0       	ldi	r20, 0x03	; 3
    1d34:	63 ee       	ldi	r22, 0xE3	; 227
    1d36:	8f e0       	ldi	r24, 0x0F	; 15
    1d38:	0e 94 2a 10 	call	0x2054	; 0x2054 <MCP2515_bit_modify>
    1d3c:	8f e3       	ldi	r24, 0x3F	; 63
    1d3e:	91 e0       	ldi	r25, 0x01	; 1
    1d40:	0e 94 31 15 	call	0x2a62	; 0x2a62 <puts>
    1d44:	08 95       	ret

00001d46 <CAN_send>:
    1d46:	cf 92       	push	r12
    1d48:	df 92       	push	r13
    1d4a:	ef 92       	push	r14
    1d4c:	ff 92       	push	r15
    1d4e:	0f 93       	push	r16
    1d50:	1f 93       	push	r17
    1d52:	cf 93       	push	r28
    1d54:	df 93       	push	r29
    1d56:	cd b7       	in	r28, 0x3d	; 61
    1d58:	de b7       	in	r29, 0x3e	; 62
    1d5a:	2e 97       	sbiw	r28, 0x0e	; 14
    1d5c:	0f b6       	in	r0, 0x3f	; 63
    1d5e:	f8 94       	cli
    1d60:	de bf       	out	0x3e, r29	; 62
    1d62:	0f be       	out	0x3f, r0	; 63
    1d64:	cd bf       	out	0x3d, r28	; 61
    1d66:	ca 82       	std	Y+2, r12	; 0x02
    1d68:	db 82       	std	Y+3, r13	; 0x03
    1d6a:	ec 82       	std	Y+4, r14	; 0x04
    1d6c:	fd 82       	std	Y+5, r15	; 0x05
    1d6e:	0e 83       	std	Y+6, r16	; 0x06
    1d70:	1f 83       	std	Y+7, r17	; 0x07
    1d72:	28 87       	std	Y+8, r18	; 0x08
    1d74:	39 87       	std	Y+9, r19	; 0x09
    1d76:	4a 87       	std	Y+10, r20	; 0x0a
    1d78:	5b 87       	std	Y+11, r21	; 0x0b
    1d7a:	6c 87       	std	Y+12, r22	; 0x0c
    1d7c:	7d 87       	std	Y+13, r23	; 0x0d
    1d7e:	8e 87       	std	Y+14, r24	; 0x0e
    1d80:	ea 80       	ldd	r14, Y+2	; 0x02
    1d82:	fb 80       	ldd	r15, Y+3	; 0x03
    1d84:	6e 2d       	mov	r22, r14
    1d86:	62 95       	swap	r22
    1d88:	66 0f       	add	r22, r22
    1d8a:	60 7e       	andi	r22, 0xE0	; 224
    1d8c:	82 e3       	ldi	r24, 0x32	; 50
    1d8e:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <MCP2515_write>
    1d92:	82 e3       	ldi	r24, 0x32	; 50
    1d94:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <MCP2515_read>
    1d98:	89 83       	std	Y+1, r24	; 0x01
    1d9a:	b7 01       	movw	r22, r14
    1d9c:	76 95       	lsr	r23
    1d9e:	67 95       	ror	r22
    1da0:	76 95       	lsr	r23
    1da2:	67 95       	ror	r22
    1da4:	76 95       	lsr	r23
    1da6:	67 95       	ror	r22
    1da8:	81 e3       	ldi	r24, 0x31	; 49
    1daa:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <MCP2515_write>
    1dae:	81 e3       	ldi	r24, 0x31	; 49
    1db0:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <MCP2515_read>
    1db4:	89 83       	std	Y+1, r24	; 0x01
    1db6:	60 2f       	mov	r22, r16
    1db8:	6f 70       	andi	r22, 0x0F	; 15
    1dba:	85 e3       	ldi	r24, 0x35	; 53
    1dbc:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <MCP2515_write>
    1dc0:	85 e3       	ldi	r24, 0x35	; 53
    1dc2:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <MCP2515_read>
    1dc6:	89 83       	std	Y+1, r24	; 0x01
    1dc8:	00 23       	and	r16, r16
    1dca:	79 f0       	breq	.+30     	; 0x1dea <CAN_send+0xa4>
    1dcc:	7e 01       	movw	r14, r28
    1dce:	87 e0       	ldi	r24, 0x07	; 7
    1dd0:	e8 0e       	add	r14, r24
    1dd2:	f1 1c       	adc	r15, r1
    1dd4:	0a 5c       	subi	r16, 0xCA	; 202
    1dd6:	16 e3       	ldi	r17, 0x36	; 54
    1dd8:	f7 01       	movw	r30, r14
    1dda:	61 91       	ld	r22, Z+
    1ddc:	7f 01       	movw	r14, r30
    1dde:	81 2f       	mov	r24, r17
    1de0:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <MCP2515_write>
    1de4:	1f 5f       	subi	r17, 0xFF	; 255
    1de6:	10 13       	cpse	r17, r16
    1de8:	f7 cf       	rjmp	.-18     	; 0x1dd8 <CAN_send+0x92>
    1dea:	85 e3       	ldi	r24, 0x35	; 53
    1dec:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <MCP2515_read>
    1df0:	89 83       	std	Y+1, r24	; 0x01
    1df2:	80 e0       	ldi	r24, 0x00	; 0
    1df4:	0e 94 16 10 	call	0x202c	; 0x202c <MCP2515_RTS>
    1df8:	2e 96       	adiw	r28, 0x0e	; 14
    1dfa:	0f b6       	in	r0, 0x3f	; 63
    1dfc:	f8 94       	cli
    1dfe:	de bf       	out	0x3e, r29	; 62
    1e00:	0f be       	out	0x3f, r0	; 63
    1e02:	cd bf       	out	0x3d, r28	; 61
    1e04:	df 91       	pop	r29
    1e06:	cf 91       	pop	r28
    1e08:	1f 91       	pop	r17
    1e0a:	0f 91       	pop	r16
    1e0c:	ff 90       	pop	r15
    1e0e:	ef 90       	pop	r14
    1e10:	df 90       	pop	r13
    1e12:	cf 90       	pop	r12
    1e14:	08 95       	ret

00001e16 <CAN_receive>:
    1e16:	1f 93       	push	r17
    1e18:	cf 93       	push	r28
    1e1a:	df 93       	push	r29
    1e1c:	ec 01       	movw	r28, r24
    1e1e:	8c e2       	ldi	r24, 0x2C	; 44
    1e20:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <MCP2515_read>
    1e24:	80 fd       	sbrc	r24, 0
    1e26:	0f c0       	rjmp	.+30     	; 0x1e46 <CAN_receive+0x30>
    1e28:	81 fd       	sbrc	r24, 1
    1e2a:	0f c0       	rjmp	.+30     	; 0x1e4a <CAN_receive+0x34>
    1e2c:	1f 92       	push	r1
    1e2e:	8f 93       	push	r24
    1e30:	80 e5       	ldi	r24, 0x50	; 80
    1e32:	91 e0       	ldi	r25, 0x01	; 1
    1e34:	9f 93       	push	r25
    1e36:	8f 93       	push	r24
    1e38:	0e 94 1d 15 	call	0x2a3a	; 0x2a3a <printf>
    1e3c:	0f 90       	pop	r0
    1e3e:	0f 90       	pop	r0
    1e40:	0f 90       	pop	r0
    1e42:	0f 90       	pop	r0
    1e44:	03 c0       	rjmp	.+6      	; 0x1e4c <CAN_receive+0x36>
    1e46:	10 e0       	ldi	r17, 0x00	; 0
    1e48:	01 c0       	rjmp	.+2      	; 0x1e4c <CAN_receive+0x36>
    1e4a:	11 e0       	ldi	r17, 0x01	; 1
    1e4c:	61 2f       	mov	r22, r17
    1e4e:	ce 01       	movw	r24, r28
    1e50:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <MCP2515_RX_read>
    1e54:	ce 01       	movw	r24, r28
    1e56:	df 91       	pop	r29
    1e58:	cf 91       	pop	r28
    1e5a:	1f 91       	pop	r17
    1e5c:	08 95       	ret

00001e5e <joy_button_init>:



void joy_button_init()
{
	set_bit(GICR, INT1);
    1e5e:	8b b7       	in	r24, 0x3b	; 59
    1e60:	80 68       	ori	r24, 0x80	; 128
    1e62:	8b bf       	out	0x3b, r24	; 59
	set_bit(MCUCR, ISC11);
    1e64:	85 b7       	in	r24, 0x35	; 53
    1e66:	88 60       	ori	r24, 0x08	; 8
    1e68:	85 bf       	out	0x35, r24	; 53
	clear_bit(MCUCR, ISC10);
    1e6a:	85 b7       	in	r24, 0x35	; 53
    1e6c:	8b 7f       	andi	r24, 0xFB	; 251
    1e6e:	85 bf       	out	0x35, r24	; 53
	sei();
    1e70:	78 94       	sei
	printf("Joystick button initialized \n");
    1e72:	8b e8       	ldi	r24, 0x8B	; 139
    1e74:	91 e0       	ldi	r25, 0x01	; 1
    1e76:	0e 94 31 15 	call	0x2a62	; 0x2a62 <puts>
    1e7a:	08 95       	ret

00001e7c <x_pos>:
	return 0;
}

void x_pos()
{
	ADC_read(2);
    1e7c:	82 e0       	ldi	r24, 0x02	; 2
    1e7e:	90 e0       	ldi	r25, 0x00	; 0
    1e80:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <ADC_read>
    1e84:	08 95       	ret

00001e86 <y_pos>:
}

void y_pos()
{
	ADC_read(1);
    1e86:	81 e0       	ldi	r24, 0x01	; 1
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <ADC_read>
    1e8e:	08 95       	ret

00001e90 <MCP2515_read>:
    1e90:	cf 93       	push	r28
    1e92:	c8 2f       	mov	r28, r24
    1e94:	0e 94 69 13 	call	0x26d2	; 0x26d2 <SPI_CS_low>
    1e98:	83 e0       	ldi	r24, 0x03	; 3
    1e9a:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1e9e:	8c 2f       	mov	r24, r28
    1ea0:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1ea4:	8c 2f       	mov	r24, r28
    1ea6:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1eaa:	c8 2f       	mov	r28, r24
    1eac:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <SPI_CS_high>
    1eb0:	8c 2f       	mov	r24, r28
    1eb2:	cf 91       	pop	r28
    1eb4:	08 95       	ret

00001eb6 <MCP2515_write>:
    1eb6:	cf 93       	push	r28
    1eb8:	df 93       	push	r29
    1eba:	d8 2f       	mov	r29, r24
    1ebc:	c6 2f       	mov	r28, r22
    1ebe:	0e 94 69 13 	call	0x26d2	; 0x26d2 <SPI_CS_low>
    1ec2:	82 e0       	ldi	r24, 0x02	; 2
    1ec4:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1ec8:	8d 2f       	mov	r24, r29
    1eca:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1ece:	8c 2f       	mov	r24, r28
    1ed0:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1ed4:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <SPI_CS_high>
    1ed8:	df 91       	pop	r29
    1eda:	cf 91       	pop	r28
    1edc:	08 95       	ret

00001ede <MCP2515_RX_read>:
    1ede:	ef 92       	push	r14
    1ee0:	ff 92       	push	r15
    1ee2:	0f 93       	push	r16
    1ee4:	1f 93       	push	r17
    1ee6:	cf 93       	push	r28
    1ee8:	df 93       	push	r29
    1eea:	cd b7       	in	r28, 0x3d	; 61
    1eec:	de b7       	in	r29, 0x3e	; 62
    1eee:	6a 97       	sbiw	r28, 0x1a	; 26
    1ef0:	0f b6       	in	r0, 0x3f	; 63
    1ef2:	f8 94       	cli
    1ef4:	de bf       	out	0x3e, r29	; 62
    1ef6:	0f be       	out	0x3f, r0	; 63
    1ef8:	cd bf       	out	0x3d, r28	; 61
    1efa:	7c 01       	movw	r14, r24
    1efc:	8d e0       	ldi	r24, 0x0D	; 13
    1efe:	fe 01       	movw	r30, r28
    1f00:	31 96       	adiw	r30, 0x01	; 1
    1f02:	df 01       	movw	r26, r30
    1f04:	98 2f       	mov	r25, r24
    1f06:	1d 92       	st	X+, r1
    1f08:	9a 95       	dec	r25
    1f0a:	e9 f7       	brne	.-6      	; 0x1f06 <MCP2515_RX_read+0x28>
    1f0c:	3d 96       	adiw	r30, 0x0d	; 13
    1f0e:	df 01       	movw	r26, r30
    1f10:	1d 92       	st	X+, r1
    1f12:	8a 95       	dec	r24
    1f14:	e9 f7       	brne	.-6      	; 0x1f10 <MCP2515_RX_read+0x32>
    1f16:	61 11       	cpse	r22, r1
    1f18:	5b c0       	rjmp	.+182    	; 0x1fd0 <MCP2515_RX_read+0xf2>
    1f1a:	0e 94 69 13 	call	0x26d2	; 0x26d2 <SPI_CS_low>
    1f1e:	83 e0       	ldi	r24, 0x03	; 3
    1f20:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1f24:	81 e6       	ldi	r24, 0x61	; 97
    1f26:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1f2a:	00 e0       	ldi	r16, 0x00	; 0
    1f2c:	10 e0       	ldi	r17, 0x00	; 0
    1f2e:	81 e6       	ldi	r24, 0x61	; 97
    1f30:	80 0f       	add	r24, r16
    1f32:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1f36:	e1 e0       	ldi	r30, 0x01	; 1
    1f38:	f0 e0       	ldi	r31, 0x00	; 0
    1f3a:	ec 0f       	add	r30, r28
    1f3c:	fd 1f       	adc	r31, r29
    1f3e:	e0 0f       	add	r30, r16
    1f40:	f1 1f       	adc	r31, r17
    1f42:	80 83       	st	Z, r24
    1f44:	0f 5f       	subi	r16, 0xFF	; 255
    1f46:	1f 4f       	sbci	r17, 0xFF	; 255
    1f48:	0d 30       	cpi	r16, 0x0D	; 13
    1f4a:	11 05       	cpc	r17, r1
    1f4c:	81 f7       	brne	.-32     	; 0x1f2e <MCP2515_RX_read+0x50>
    1f4e:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <SPI_CS_high>
    1f52:	29 81       	ldd	r18, Y+1	; 0x01
    1f54:	8a 81       	ldd	r24, Y+2	; 0x02
    1f56:	90 e0       	ldi	r25, 0x00	; 0
    1f58:	92 2b       	or	r25, r18
    1f5a:	96 95       	lsr	r25
    1f5c:	87 95       	ror	r24
    1f5e:	92 95       	swap	r25
    1f60:	82 95       	swap	r24
    1f62:	8f 70       	andi	r24, 0x0F	; 15
    1f64:	89 27       	eor	r24, r25
    1f66:	9f 70       	andi	r25, 0x0F	; 15
    1f68:	89 27       	eor	r24, r25
    1f6a:	9a 83       	std	Y+2, r25	; 0x02
    1f6c:	89 83       	std	Y+1, r24	; 0x01
    1f6e:	8d 81       	ldd	r24, Y+5	; 0x05
    1f70:	8f 70       	andi	r24, 0x0F	; 15
    1f72:	8d 83       	std	Y+5, r24	; 0x05
    1f74:	0e 94 69 13 	call	0x26d2	; 0x26d2 <SPI_CS_low>
    1f78:	83 e0       	ldi	r24, 0x03	; 3
    1f7a:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1f7e:	81 e3       	ldi	r24, 0x31	; 49
    1f80:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1f84:	00 e0       	ldi	r16, 0x00	; 0
    1f86:	10 e0       	ldi	r17, 0x00	; 0
    1f88:	80 e0       	ldi	r24, 0x00	; 0
    1f8a:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    1f8e:	ee e0       	ldi	r30, 0x0E	; 14
    1f90:	f0 e0       	ldi	r31, 0x00	; 0
    1f92:	ec 0f       	add	r30, r28
    1f94:	fd 1f       	adc	r31, r29
    1f96:	e0 0f       	add	r30, r16
    1f98:	f1 1f       	adc	r31, r17
    1f9a:	80 83       	st	Z, r24
    1f9c:	0f 5f       	subi	r16, 0xFF	; 255
    1f9e:	1f 4f       	sbci	r17, 0xFF	; 255
    1fa0:	0d 30       	cpi	r16, 0x0D	; 13
    1fa2:	11 05       	cpc	r17, r1
    1fa4:	89 f7       	brne	.-30     	; 0x1f88 <MCP2515_RX_read+0xaa>
    1fa6:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <SPI_CS_high>
    1faa:	60 e0       	ldi	r22, 0x00	; 0
    1fac:	8c e2       	ldi	r24, 0x2C	; 44
    1fae:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <MCP2515_write>
    1fb2:	2e 85       	ldd	r18, Y+14	; 0x0e
    1fb4:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	92 2b       	or	r25, r18
    1fba:	96 95       	lsr	r25
    1fbc:	87 95       	ror	r24
    1fbe:	92 95       	swap	r25
    1fc0:	82 95       	swap	r24
    1fc2:	8f 70       	andi	r24, 0x0F	; 15
    1fc4:	89 27       	eor	r24, r25
    1fc6:	9f 70       	andi	r25, 0x0F	; 15
    1fc8:	89 27       	eor	r24, r25
    1fca:	9f 87       	std	Y+15, r25	; 0x0f
    1fcc:	8e 87       	std	Y+14, r24	; 0x0e
    1fce:	18 c0       	rjmp	.+48     	; 0x2000 <MCP2515_RX_read+0x122>
    1fd0:	61 30       	cpi	r22, 0x01	; 1
    1fd2:	b1 f4       	brne	.+44     	; 0x2000 <MCP2515_RX_read+0x122>
    1fd4:	81 e7       	ldi	r24, 0x71	; 113
    1fd6:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <MCP2515_read>
    1fda:	18 2f       	mov	r17, r24
    1fdc:	82 e7       	ldi	r24, 0x72	; 114
    1fde:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <MCP2515_read>
    1fe2:	82 95       	swap	r24
    1fe4:	86 95       	lsr	r24
    1fe6:	87 70       	andi	r24, 0x07	; 7
    1fe8:	28 2f       	mov	r18, r24
    1fea:	30 e0       	ldi	r19, 0x00	; 0
    1fec:	c9 01       	movw	r24, r18
    1fee:	91 2b       	or	r25, r17
    1ff0:	97 70       	andi	r25, 0x07	; 7
    1ff2:	9a 83       	std	Y+2, r25	; 0x02
    1ff4:	89 83       	std	Y+1, r24	; 0x01
    1ff6:	85 e7       	ldi	r24, 0x75	; 117
    1ff8:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <MCP2515_read>
    1ffc:	8f 70       	andi	r24, 0x0F	; 15
    1ffe:	8d 83       	std	Y+5, r24	; 0x05
    2000:	8d e0       	ldi	r24, 0x0D	; 13
    2002:	fe 01       	movw	r30, r28
    2004:	31 96       	adiw	r30, 0x01	; 1
    2006:	d7 01       	movw	r26, r14
    2008:	01 90       	ld	r0, Z+
    200a:	0d 92       	st	X+, r0
    200c:	8a 95       	dec	r24
    200e:	e1 f7       	brne	.-8      	; 0x2008 <MCP2515_RX_read+0x12a>
    2010:	c7 01       	movw	r24, r14
    2012:	6a 96       	adiw	r28, 0x1a	; 26
    2014:	0f b6       	in	r0, 0x3f	; 63
    2016:	f8 94       	cli
    2018:	de bf       	out	0x3e, r29	; 62
    201a:	0f be       	out	0x3f, r0	; 63
    201c:	cd bf       	out	0x3d, r28	; 61
    201e:	df 91       	pop	r29
    2020:	cf 91       	pop	r28
    2022:	1f 91       	pop	r17
    2024:	0f 91       	pop	r16
    2026:	ff 90       	pop	r15
    2028:	ef 90       	pop	r14
    202a:	08 95       	ret

0000202c <MCP2515_RTS>:
    202c:	cf 93       	push	r28
    202e:	df 93       	push	r29
    2030:	c1 e0       	ldi	r28, 0x01	; 1
    2032:	d0 e0       	ldi	r29, 0x00	; 0
    2034:	02 c0       	rjmp	.+4      	; 0x203a <MCP2515_RTS+0xe>
    2036:	cc 0f       	add	r28, r28
    2038:	dd 1f       	adc	r29, r29
    203a:	8a 95       	dec	r24
    203c:	e2 f7       	brpl	.-8      	; 0x2036 <MCP2515_RTS+0xa>
    203e:	0e 94 69 13 	call	0x26d2	; 0x26d2 <SPI_CS_low>
    2042:	8c 2f       	mov	r24, r28
    2044:	80 58       	subi	r24, 0x80	; 128
    2046:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    204a:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <SPI_CS_high>
    204e:	df 91       	pop	r29
    2050:	cf 91       	pop	r28
    2052:	08 95       	ret

00002054 <MCP2515_bit_modify>:
    2054:	1f 93       	push	r17
    2056:	cf 93       	push	r28
    2058:	df 93       	push	r29
    205a:	18 2f       	mov	r17, r24
    205c:	d6 2f       	mov	r29, r22
    205e:	c4 2f       	mov	r28, r20
    2060:	0e 94 69 13 	call	0x26d2	; 0x26d2 <SPI_CS_low>
    2064:	85 e0       	ldi	r24, 0x05	; 5
    2066:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    206a:	81 2f       	mov	r24, r17
    206c:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    2070:	8d 2f       	mov	r24, r29
    2072:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    2076:	8c 2f       	mov	r24, r28
    2078:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    207c:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <SPI_CS_high>
    2080:	df 91       	pop	r29
    2082:	cf 91       	pop	r28
    2084:	1f 91       	pop	r17
    2086:	08 95       	ret

00002088 <MCP2515_reset>:
    2088:	0e 94 69 13 	call	0x26d2	; 0x26d2 <SPI_CS_low>
    208c:	80 ec       	ldi	r24, 0xC0	; 192
    208e:	0e 94 79 13 	call	0x26f2	; 0x26f2 <SPI_data>
    2092:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <SPI_CS_high>
    2096:	08 95       	ret

00002098 <menu_init>:
uint8_t start = 0;
uint8_t stop = 7;

void menu_init()
{
	TCCR1B |= (1 << WGM12); // Configure timer 1 for CTC mode
    2098:	8e b5       	in	r24, 0x2e	; 46
    209a:	88 60       	ori	r24, 0x08	; 8
    209c:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1 << OCIE1A); // Enable CTC interrupt
    209e:	89 b7       	in	r24, 0x39	; 57
    20a0:	80 64       	ori	r24, 0x40	; 64
    20a2:	89 bf       	out	0x39, r24	; 57
	OCR1A = 16000 ; // Set CTC compare value to 1Hz at 1MHz AVR clock, with a prescaler of 64
    20a4:	80 e8       	ldi	r24, 0x80	; 128
    20a6:	9e e3       	ldi	r25, 0x3E	; 62
    20a8:	9b bd       	out	0x2b, r25	; 43
    20aa:	8a bd       	out	0x2a, r24	; 42
	TCCR1B |= ((1 << CS10) | (1 << CS11)); // Start timer at Fcpu/64
    20ac:	8e b5       	in	r24, 0x2e	; 46
    20ae:	83 60       	ori	r24, 0x03	; 3
    20b0:	8e bd       	out	0x2e, r24	; 46
    20b2:	08 95       	ret

000020b4 <write_c>:
/*
volatile uint8_t *frame_buffer = (uint8_t *) 0x1800;
*/
void write_c(uint8_t setting)
{
	oled_settings[setting] = setting;
    20b4:	e0 91 0b 01 	lds	r30, 0x010B
    20b8:	f0 91 0c 01 	lds	r31, 0x010C
    20bc:	e8 0f       	add	r30, r24
    20be:	f1 1d       	adc	r31, r1
    20c0:	80 83       	st	Z, r24
    20c2:	08 95       	ret

000020c4 <hack>:


void hack(uint8_t photo)
{
		int k= 0;
		if(photo == 0)
    20c4:	81 11       	cpse	r24, r1
    20c6:	1e c0       	rjmp	.+60     	; 0x2104 <hack+0x40>
    20c8:	40 e0       	ldi	r20, 0x00	; 0
    20ca:	50 e0       	ldi	r21, 0x00	; 0
    20cc:	16 c0       	rjmp	.+44     	; 0x20fa <hack+0x36>
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
				{
					ext_ram[k] = pgm_read_byte(&HS_f1[i][j]);
    20ce:	a0 91 07 01 	lds	r26, 0x0107
    20d2:	b0 91 08 01 	lds	r27, 0x0108
    20d6:	a8 0f       	add	r26, r24
    20d8:	b9 1f       	adc	r27, r25
    20da:	fc 01       	movw	r30, r24
    20dc:	e0 59       	subi	r30, 0x90	; 144
    20de:	f7 4e       	sbci	r31, 0xE7	; 231
    20e0:	e4 91       	lpm	r30, Z
    20e2:	ec 93       	st	X, r30
					k++;
    20e4:	01 96       	adiw	r24, 0x01	; 1
		int k= 0;
		if(photo == 0)
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
    20e6:	82 17       	cp	r24, r18
    20e8:	93 07       	cpc	r25, r19
    20ea:	89 f7       	brne	.-30     	; 0x20ce <hack+0xa>
    20ec:	48 5f       	subi	r20, 0xF8	; 248
    20ee:	5f 4f       	sbci	r21, 0xFF	; 255
void hack(uint8_t photo)
{
		int k= 0;
		if(photo == 0)
		{
			for(int i = 0; i<128; i++)
    20f0:	41 15       	cp	r20, r1
    20f2:	84 e0       	ldi	r24, 0x04	; 4
    20f4:	58 07       	cpc	r21, r24
    20f6:	09 f4       	brne	.+2      	; 0x20fa <hack+0x36>
    20f8:	c3 c0       	rjmp	.+390    	; 0x2280 <hack+0x1bc>
    20fa:	9a 01       	movw	r18, r20
    20fc:	28 5f       	subi	r18, 0xF8	; 248
    20fe:	3f 4f       	sbci	r19, 0xFF	; 255
	
}


void hack(uint8_t photo)
{
    2100:	ca 01       	movw	r24, r20
    2102:	e5 cf       	rjmp	.-54     	; 0x20ce <hack+0xa>
				{
					ext_ram[k] = pgm_read_byte(&HS_f1[i][j]);
					k++;
				}
			}
		}else if(photo == 1)
    2104:	81 30       	cpi	r24, 0x01	; 1
    2106:	f1 f4       	brne	.+60     	; 0x2144 <hack+0x80>
    2108:	40 e0       	ldi	r20, 0x00	; 0
    210a:	50 e0       	ldi	r21, 0x00	; 0
    210c:	16 c0       	rjmp	.+44     	; 0x213a <hack+0x76>
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
				{
					ext_ram[k] = pgm_read_byte(&HS_f2[i][j]);
    210e:	a0 91 07 01 	lds	r26, 0x0107
    2112:	b0 91 08 01 	lds	r27, 0x0108
    2116:	a8 0f       	add	r26, r24
    2118:	b9 1f       	adc	r27, r25
    211a:	fc 01       	movw	r30, r24
    211c:	e0 59       	subi	r30, 0x90	; 144
    211e:	fb 4e       	sbci	r31, 0xEB	; 235
    2120:	e4 91       	lpm	r30, Z
    2122:	ec 93       	st	X, r30
					k++;
    2124:	01 96       	adiw	r24, 0x01	; 1
			}
		}else if(photo == 1)
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
    2126:	82 17       	cp	r24, r18
    2128:	93 07       	cpc	r25, r19
    212a:	89 f7       	brne	.-30     	; 0x210e <hack+0x4a>
    212c:	48 5f       	subi	r20, 0xF8	; 248
    212e:	5f 4f       	sbci	r21, 0xFF	; 255
					k++;
				}
			}
		}else if(photo == 1)
		{
			for(int i = 0; i<128; i++)
    2130:	41 15       	cp	r20, r1
    2132:	84 e0       	ldi	r24, 0x04	; 4
    2134:	58 07       	cpc	r21, r24
    2136:	09 f4       	brne	.+2      	; 0x213a <hack+0x76>
    2138:	a3 c0       	rjmp	.+326    	; 0x2280 <hack+0x1bc>
    213a:	9a 01       	movw	r18, r20
    213c:	28 5f       	subi	r18, 0xF8	; 248
    213e:	3f 4f       	sbci	r19, 0xFF	; 255


void hack(uint8_t photo)
{
		int k= 0;
		if(photo == 0)
    2140:	ca 01       	movw	r24, r20
    2142:	e5 cf       	rjmp	.-54     	; 0x210e <hack+0x4a>
					ext_ram[k] = pgm_read_byte(&HS_f2[i][j]);
					k++;
				}
			}
			
		}else if(photo == 2)
    2144:	82 30       	cpi	r24, 0x02	; 2
    2146:	f1 f4       	brne	.+60     	; 0x2184 <hack+0xc0>
    2148:	40 e0       	ldi	r20, 0x00	; 0
    214a:	50 e0       	ldi	r21, 0x00	; 0
    214c:	16 c0       	rjmp	.+44     	; 0x217a <hack+0xb6>
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
				{
					ext_ram[k] = pgm_read_byte(&HS_f3[i][j]);
    214e:	a0 91 07 01 	lds	r26, 0x0107
    2152:	b0 91 08 01 	lds	r27, 0x0108
    2156:	a8 0f       	add	r26, r24
    2158:	b9 1f       	adc	r27, r25
    215a:	fc 01       	movw	r30, r24
    215c:	e0 59       	subi	r30, 0x90	; 144
    215e:	ff 4e       	sbci	r31, 0xEF	; 239
    2160:	e4 91       	lpm	r30, Z
    2162:	ec 93       	st	X, r30
					k++;
    2164:	01 96       	adiw	r24, 0x01	; 1
			
		}else if(photo == 2)
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
    2166:	82 17       	cp	r24, r18
    2168:	93 07       	cpc	r25, r19
    216a:	89 f7       	brne	.-30     	; 0x214e <hack+0x8a>
    216c:	48 5f       	subi	r20, 0xF8	; 248
    216e:	5f 4f       	sbci	r21, 0xFF	; 255
				}
			}
			
		}else if(photo == 2)
		{
			for(int i = 0; i<128; i++)
    2170:	41 15       	cp	r20, r1
    2172:	84 e0       	ldi	r24, 0x04	; 4
    2174:	58 07       	cpc	r21, r24
    2176:	09 f4       	brne	.+2      	; 0x217a <hack+0xb6>
    2178:	83 c0       	rjmp	.+262    	; 0x2280 <hack+0x1bc>
    217a:	9a 01       	movw	r18, r20
    217c:	28 5f       	subi	r18, 0xF8	; 248
    217e:	3f 4f       	sbci	r19, 0xFF	; 255
				{
					ext_ram[k] = pgm_read_byte(&HS_f1[i][j]);
					k++;
				}
			}
		}else if(photo == 1)
    2180:	ca 01       	movw	r24, r20
    2182:	e5 cf       	rjmp	.-54     	; 0x214e <hack+0x8a>
				{
					ext_ram[k] = pgm_read_byte(&HS_f3[i][j]);
					k++;
				}
			}
		}else if(photo == 3)
    2184:	83 30       	cpi	r24, 0x03	; 3
    2186:	f1 f4       	brne	.+60     	; 0x21c4 <hack+0x100>
    2188:	40 e0       	ldi	r20, 0x00	; 0
    218a:	50 e0       	ldi	r21, 0x00	; 0
    218c:	16 c0       	rjmp	.+44     	; 0x21ba <hack+0xf6>
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
				{
					ext_ram[k] = pgm_read_byte(&GO_f1[i][j]);
    218e:	a0 91 07 01 	lds	r26, 0x0107
    2192:	b0 91 08 01 	lds	r27, 0x0108
    2196:	a8 0f       	add	r26, r24
    2198:	b9 1f       	adc	r27, r25
    219a:	fc 01       	movw	r30, r24
    219c:	e0 59       	subi	r30, 0x90	; 144
    219e:	f3 4f       	sbci	r31, 0xF3	; 243
    21a0:	e4 91       	lpm	r30, Z
    21a2:	ec 93       	st	X, r30
					k++;
    21a4:	01 96       	adiw	r24, 0x01	; 1
			}
		}else if(photo == 3)
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
    21a6:	28 17       	cp	r18, r24
    21a8:	39 07       	cpc	r19, r25
    21aa:	89 f7       	brne	.-30     	; 0x218e <hack+0xca>
    21ac:	48 5f       	subi	r20, 0xF8	; 248
    21ae:	5f 4f       	sbci	r21, 0xFF	; 255
					k++;
				}
			}
		}else if(photo == 3)
		{
			for(int i = 0; i<128; i++)
    21b0:	41 15       	cp	r20, r1
    21b2:	84 e0       	ldi	r24, 0x04	; 4
    21b4:	58 07       	cpc	r21, r24
    21b6:	09 f4       	brne	.+2      	; 0x21ba <hack+0xf6>
    21b8:	63 c0       	rjmp	.+198    	; 0x2280 <hack+0x1bc>
    21ba:	9a 01       	movw	r18, r20
    21bc:	28 5f       	subi	r18, 0xF8	; 248
    21be:	3f 4f       	sbci	r19, 0xFF	; 255
					ext_ram[k] = pgm_read_byte(&HS_f2[i][j]);
					k++;
				}
			}
			
		}else if(photo == 2)
    21c0:	ca 01       	movw	r24, r20
    21c2:	e5 cf       	rjmp	.-54     	; 0x218e <hack+0xca>
				{
					ext_ram[k] = pgm_read_byte(&GO_f1[i][j]);
					k++;
				}
			}
		}else if(photo == 4)
    21c4:	84 30       	cpi	r24, 0x04	; 4
    21c6:	f1 f4       	brne	.+60     	; 0x2204 <hack+0x140>
    21c8:	40 e0       	ldi	r20, 0x00	; 0
    21ca:	50 e0       	ldi	r21, 0x00	; 0
    21cc:	16 c0       	rjmp	.+44     	; 0x21fa <hack+0x136>
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
				{
					ext_ram[k] = pgm_read_byte(&GO_f2[i][j]);
    21ce:	a0 91 07 01 	lds	r26, 0x0107
    21d2:	b0 91 08 01 	lds	r27, 0x0108
    21d6:	a8 0f       	add	r26, r24
    21d8:	b9 1f       	adc	r27, r25
    21da:	fc 01       	movw	r30, r24
    21dc:	e0 59       	subi	r30, 0x90	; 144
    21de:	f7 4f       	sbci	r31, 0xF7	; 247
    21e0:	e4 91       	lpm	r30, Z
    21e2:	ec 93       	st	X, r30
					k++;
    21e4:	01 96       	adiw	r24, 0x01	; 1
			}
		}else if(photo == 4)
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
    21e6:	82 17       	cp	r24, r18
    21e8:	93 07       	cpc	r25, r19
    21ea:	89 f7       	brne	.-30     	; 0x21ce <hack+0x10a>
    21ec:	48 5f       	subi	r20, 0xF8	; 248
    21ee:	5f 4f       	sbci	r21, 0xFF	; 255
					k++;
				}
			}
		}else if(photo == 4)
		{
			for(int i = 0; i<128; i++)
    21f0:	41 15       	cp	r20, r1
    21f2:	84 e0       	ldi	r24, 0x04	; 4
    21f4:	58 07       	cpc	r21, r24
    21f6:	09 f4       	brne	.+2      	; 0x21fa <hack+0x136>
    21f8:	43 c0       	rjmp	.+134    	; 0x2280 <hack+0x1bc>
    21fa:	9a 01       	movw	r18, r20
    21fc:	28 5f       	subi	r18, 0xF8	; 248
    21fe:	3f 4f       	sbci	r19, 0xFF	; 255
				{
					ext_ram[k] = pgm_read_byte(&HS_f3[i][j]);
					k++;
				}
			}
		}else if(photo == 3)
    2200:	ca 01       	movw	r24, r20
    2202:	e5 cf       	rjmp	.-54     	; 0x21ce <hack+0x10a>
				{
					ext_ram[k] = pgm_read_byte(&GO_f2[i][j]);
					k++;
				}
			}
		}else if(photo == 5)
    2204:	85 30       	cpi	r24, 0x05	; 5
    2206:	e9 f4       	brne	.+58     	; 0x2242 <hack+0x17e>
    2208:	40 e0       	ldi	r20, 0x00	; 0
    220a:	50 e0       	ldi	r21, 0x00	; 0
    220c:	15 c0       	rjmp	.+42     	; 0x2238 <hack+0x174>
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
				{
					ext_ram[k] = pgm_read_byte(&GO_f3[i][j]);
    220e:	a0 91 07 01 	lds	r26, 0x0107
    2212:	b0 91 08 01 	lds	r27, 0x0108
    2216:	a8 0f       	add	r26, r24
    2218:	b9 1f       	adc	r27, r25
    221a:	fc 01       	movw	r30, r24
    221c:	e0 59       	subi	r30, 0x90	; 144
    221e:	fb 4f       	sbci	r31, 0xFB	; 251
    2220:	e4 91       	lpm	r30, Z
    2222:	ec 93       	st	X, r30
					k++;
    2224:	01 96       	adiw	r24, 0x01	; 1
			}
		}else if(photo == 5)
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
    2226:	82 17       	cp	r24, r18
    2228:	93 07       	cpc	r25, r19
    222a:	89 f7       	brne	.-30     	; 0x220e <hack+0x14a>
    222c:	48 5f       	subi	r20, 0xF8	; 248
    222e:	5f 4f       	sbci	r21, 0xFF	; 255
					k++;
				}
			}
		}else if(photo == 5)
		{
			for(int i = 0; i<128; i++)
    2230:	41 15       	cp	r20, r1
    2232:	84 e0       	ldi	r24, 0x04	; 4
    2234:	58 07       	cpc	r21, r24
    2236:	21 f1       	breq	.+72     	; 0x2280 <hack+0x1bc>
    2238:	9a 01       	movw	r18, r20
    223a:	28 5f       	subi	r18, 0xF8	; 248
    223c:	3f 4f       	sbci	r19, 0xFF	; 255
				{
					ext_ram[k] = pgm_read_byte(&GO_f1[i][j]);
					k++;
				}
			}
		}else if(photo == 4)
    223e:	ca 01       	movw	r24, r20
    2240:	e6 cf       	rjmp	.-52     	; 0x220e <hack+0x14a>
				{
					ext_ram[k] = pgm_read_byte(&GO_f3[i][j]);
					k++;
				}
			}
		}else if(photo == 6)
    2242:	86 30       	cpi	r24, 0x06	; 6
    2244:	e9 f4       	brne	.+58     	; 0x2280 <hack+0x1bc>
    2246:	40 e0       	ldi	r20, 0x00	; 0
    2248:	50 e0       	ldi	r21, 0x00	; 0
    224a:	15 c0       	rjmp	.+42     	; 0x2276 <hack+0x1b2>
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
				{
					ext_ram[k] = pgm_read_byte(&GO_f4[i][j]);
    224c:	a0 91 07 01 	lds	r26, 0x0107
    2250:	b0 91 08 01 	lds	r27, 0x0108
    2254:	a8 0f       	add	r26, r24
    2256:	b9 1f       	adc	r27, r25
    2258:	fc 01       	movw	r30, r24
    225a:	e0 59       	subi	r30, 0x90	; 144
    225c:	ff 4f       	sbci	r31, 0xFF	; 255
    225e:	e4 91       	lpm	r30, Z
    2260:	ec 93       	st	X, r30
					k++;
    2262:	01 96       	adiw	r24, 0x01	; 1
			}
		}else if(photo == 6)
		{
			for(int i = 0; i<128; i++)
			{
				for(int j = 0; j<8; j++)
    2264:	82 17       	cp	r24, r18
    2266:	93 07       	cpc	r25, r19
    2268:	89 f7       	brne	.-30     	; 0x224c <hack+0x188>
    226a:	48 5f       	subi	r20, 0xF8	; 248
    226c:	5f 4f       	sbci	r21, 0xFF	; 255
					k++;
				}
			}
		}else if(photo == 6)
		{
			for(int i = 0; i<128; i++)
    226e:	41 15       	cp	r20, r1
    2270:	84 e0       	ldi	r24, 0x04	; 4
    2272:	58 07       	cpc	r21, r24
    2274:	29 f0       	breq	.+10     	; 0x2280 <hack+0x1bc>
    2276:	9a 01       	movw	r18, r20
    2278:	28 5f       	subi	r18, 0xF8	; 248
    227a:	3f 4f       	sbci	r19, 0xFF	; 255
				{
					ext_ram[k] = pgm_read_byte(&GO_f2[i][j]);
					k++;
				}
			}
		}else if(photo == 5)
    227c:	ca 01       	movw	r24, r20
    227e:	e6 cf       	rjmp	.-52     	; 0x224c <hack+0x188>
    2280:	08 95       	ret

00002282 <oled_set_column_address>:
	oled_char_print(streng[i]);
	
}

void oled_set_column_address(uint8_t column_start, uint8_t column_end)
{
    2282:	cf 93       	push	r28
    2284:	df 93       	push	r29
    2286:	d8 2f       	mov	r29, r24
    2288:	c6 2f       	mov	r28, r22
	write_c(0x21);
    228a:	81 e2       	ldi	r24, 0x21	; 33
    228c:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
	write_c(column_start);
    2290:	8d 2f       	mov	r24, r29
    2292:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
	write_c(column_end);
    2296:	8c 2f       	mov	r24, r28
    2298:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
}
    229c:	df 91       	pop	r29
    229e:	cf 91       	pop	r28
    22a0:	08 95       	ret

000022a2 <oled_set_page_address>:

void oled_set_page_address(uint8_t page_start, uint8_t page_end)
{
    22a2:	cf 93       	push	r28
    22a4:	df 93       	push	r29
    22a6:	d8 2f       	mov	r29, r24
    22a8:	c6 2f       	mov	r28, r22
	write_c(0x22);
    22aa:	82 e2       	ldi	r24, 0x22	; 34
    22ac:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
	write_c(page_start);
    22b0:	8d 2f       	mov	r24, r29
    22b2:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
	write_c(page_end);	
    22b6:	8c 2f       	mov	r24, r28
    22b8:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
}
    22bc:	df 91       	pop	r29
    22be:	cf 91       	pop	r28
    22c0:	08 95       	ret

000022c2 <oled_address_reset>:

void oled_address_reset()
{
	line= 0;
    22c2:	10 92 d1 01 	sts	0x01D1, r1
	column = 0;
    22c6:	10 92 d0 01 	sts	0x01D0, r1
	oled_set_column_address(0,127);
    22ca:	6f e7       	ldi	r22, 0x7F	; 127
    22cc:	80 e0       	ldi	r24, 0x00	; 0
    22ce:	0e 94 41 11 	call	0x2282	; 0x2282 <oled_set_column_address>
	oled_set_page_address(0,7);
    22d2:	67 e0       	ldi	r22, 0x07	; 7
    22d4:	80 e0       	ldi	r24, 0x00	; 0
    22d6:	0e 94 51 11 	call	0x22a2	; 0x22a2 <oled_set_page_address>
    22da:	08 95       	ret

000022dc <oled_print_picture>:
	}
	
}

void oled_print_picture(uint8_t pic_num)
{
    22dc:	0f 93       	push	r16
    22de:	1f 93       	push	r17
    22e0:	cf 93       	push	r28
    22e2:	df 93       	push	r29
	hack(pic_num);
    22e4:	0e 94 62 10 	call	0x20c4	; 0x20c4 <hack>
	oled_address_reset();
    22e8:	0e 94 61 11 	call	0x22c2	; 0x22c2 <oled_address_reset>
    22ec:	c0 e0       	ldi	r28, 0x00	; 0
    22ee:	d0 e0       	ldi	r29, 0x00	; 0
    22f0:	00 e0       	ldi	r16, 0x00	; 0
    22f2:	10 e0       	ldi	r17, 0x00	; 0
	
	for(int j = 0; j<128; j++)
	{
		if(column == 16)
    22f4:	80 91 d0 01 	lds	r24, 0x01D0
    22f8:	80 31       	cpi	r24, 0x10	; 16
    22fa:	a1 f5       	brne	.+104    	; 0x2364 <oled_print_picture+0x88>
		{
			column = 0;
    22fc:	10 92 d0 01 	sts	0x01D0, r1
			line++;
    2300:	80 91 d1 01 	lds	r24, 0x01D1
    2304:	8f 5f       	subi	r24, 0xFF	; 255
			if(line == 8)
    2306:	88 30       	cpi	r24, 0x08	; 8
    2308:	19 f0       	breq	.+6      	; 0x2310 <oled_print_picture+0x34>
	for(int j = 0; j<128; j++)
	{
		if(column == 16)
		{
			column = 0;
			line++;
    230a:	80 93 d1 01 	sts	0x01D1, r24
    230e:	02 c0       	rjmp	.+4      	; 0x2314 <oled_print_picture+0x38>
			if(line == 8)
			{
				line = 0;
    2310:	10 92 d1 01 	sts	0x01D1, r1
			}
			oled_set_column_address(0,127);
    2314:	6f e7       	ldi	r22, 0x7F	; 127
    2316:	80 e0       	ldi	r24, 0x00	; 0
    2318:	0e 94 41 11 	call	0x2282	; 0x2282 <oled_set_column_address>
			oled_set_page_address(line,7);
    231c:	67 e0       	ldi	r22, 0x07	; 7
    231e:	80 91 d1 01 	lds	r24, 0x01D1
    2322:	0e 94 51 11 	call	0x22a2	; 0x22a2 <oled_set_page_address>
    2326:	1e c0       	rjmp	.+60     	; 0x2364 <oled_print_picture+0x88>
    2328:	9c 01       	movw	r18, r24
    232a:	2c 0f       	add	r18, r28
    232c:	3d 1f       	adc	r19, r29
		}
		for(int i = 0; i<8; i++)
		{
			oled_write(ext_ram[i + (j * 8)]);
    232e:	e0 91 07 01 	lds	r30, 0x0107
    2332:	f0 91 08 01 	lds	r31, 0x0108
    2336:	e2 0f       	add	r30, r18
    2338:	f3 1f       	adc	r31, r19
    233a:	20 81       	ld	r18, Z
	}
}

void oled_write(uint8_t data)
{
	oled_display_memory[0] = data;
    233c:	e0 91 09 01 	lds	r30, 0x0109
    2340:	f0 91 0a 01 	lds	r31, 0x010A
    2344:	20 83       	st	Z, r18
				line = 0;
			}
			oled_set_column_address(0,127);
			oled_set_page_address(line,7);
		}
		for(int i = 0; i<8; i++)
    2346:	01 96       	adiw	r24, 0x01	; 1
    2348:	88 30       	cpi	r24, 0x08	; 8
    234a:	91 05       	cpc	r25, r1
    234c:	69 f7       	brne	.-38     	; 0x2328 <oled_print_picture+0x4c>
		{
			oled_write(ext_ram[i + (j * 8)]);
		}
		column++;
    234e:	80 91 d0 01 	lds	r24, 0x01D0
    2352:	8f 5f       	subi	r24, 0xFF	; 255
    2354:	80 93 d0 01 	sts	0x01D0, r24
    2358:	28 96       	adiw	r28, 0x08	; 8
void oled_print_picture(uint8_t pic_num)
{
	hack(pic_num);
	oled_address_reset();
	
	for(int j = 0; j<128; j++)
    235a:	c1 15       	cp	r28, r1
    235c:	84 e0       	ldi	r24, 0x04	; 4
    235e:	d8 07       	cpc	r29, r24
    2360:	49 f6       	brne	.-110    	; 0x22f4 <oled_print_picture+0x18>
    2362:	03 c0       	rjmp	.+6      	; 0x236a <oled_print_picture+0x8e>
}

void oled_print_picture(uint8_t pic_num)
{
	hack(pic_num);
	oled_address_reset();
    2364:	80 2f       	mov	r24, r16
    2366:	91 2f       	mov	r25, r17
    2368:	df cf       	rjmp	.-66     	; 0x2328 <oled_print_picture+0x4c>
			oled_write(ext_ram[i + (j * 8)]);
		}
		column++;
	}
	
}
    236a:	df 91       	pop	r29
    236c:	cf 91       	pop	r28
    236e:	1f 91       	pop	r17
    2370:	0f 91       	pop	r16
    2372:	08 95       	ret

00002374 <oled_clear_and_go_to_line>:



void oled_clear_and_go_to_line(uint8_t line_in)
{
	line = line_in;
    2374:	80 93 d1 01 	sts	0x01D1, r24
	column = 0;
    2378:	10 92 d0 01 	sts	0x01D0, r1
	oled_set_column_address(0,127);
    237c:	6f e7       	ldi	r22, 0x7F	; 127
    237e:	80 e0       	ldi	r24, 0x00	; 0
    2380:	0e 94 41 11 	call	0x2282	; 0x2282 <oled_set_column_address>
	oled_set_page_address(line,7);
    2384:	67 e0       	ldi	r22, 0x07	; 7
    2386:	80 91 d1 01 	lds	r24, 0x01D1
    238a:	0e 94 51 11 	call	0x22a2	; 0x22a2 <oled_set_page_address>
    238e:	80 e8       	ldi	r24, 0x80	; 128
    2390:	90 e0       	ldi	r25, 0x00	; 0
	}
}

void oled_write(uint8_t data)
{
	oled_display_memory[0] = data;
    2392:	e0 91 09 01 	lds	r30, 0x0109
    2396:	f0 91 0a 01 	lds	r31, 0x010A
    239a:	10 82       	st	Z, r1
    239c:	01 97       	sbiw	r24, 0x01	; 1
{
	line = line_in;
	column = 0;
	oled_set_column_address(0,127);
	oled_set_page_address(line,7);
	for(int i=0;i<128;i++)
    239e:	00 97       	sbiw	r24, 0x00	; 0
    23a0:	c1 f7       	brne	.-16     	; 0x2392 <oled_clear_and_go_to_line+0x1e>
	{
		oled_write(0x00);
	}
	oled_set_column_address(0,127);
    23a2:	6f e7       	ldi	r22, 0x7F	; 127
    23a4:	80 e0       	ldi	r24, 0x00	; 0
    23a6:	0e 94 41 11 	call	0x2282	; 0x2282 <oled_set_column_address>
	column = 0;
    23aa:	10 92 d0 01 	sts	0x01D0, r1
    23ae:	08 95       	ret

000023b0 <clear_oled>:
	
}
*/

void clear_oled()
{
    23b0:	cf 93       	push	r28
    23b2:	df 93       	push	r29
	for(int i=0; i < 8;i++)
    23b4:	c0 e0       	ldi	r28, 0x00	; 0
    23b6:	d0 e0       	ldi	r29, 0x00	; 0
	{
		oled_clear_and_go_to_line(i);
    23b8:	ce 01       	movw	r24, r28
    23ba:	0e 94 ba 11 	call	0x2374	; 0x2374 <oled_clear_and_go_to_line>
}
*/

void clear_oled()
{
	for(int i=0; i < 8;i++)
    23be:	21 96       	adiw	r28, 0x01	; 1
    23c0:	c8 30       	cpi	r28, 0x08	; 8
    23c2:	d1 05       	cpc	r29, r1
    23c4:	c9 f7       	brne	.-14     	; 0x23b8 <clear_oled+0x8>
	{
		oled_clear_and_go_to_line(i);
	}
}
    23c6:	df 91       	pop	r29
    23c8:	cf 91       	pop	r28
    23ca:	08 95       	ret

000023cc <oled_init>:
	oled_settings[setting] = setting;
}

void oled_init()
{
		write_c(0xae); // display off
    23cc:	8e ea       	ldi	r24, 0xAE	; 174
    23ce:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0xa1); //segment remap
    23d2:	81 ea       	ldi	r24, 0xA1	; 161
    23d4:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0xda); //common pads hardware: alternative
    23d8:	8a ed       	ldi	r24, 0xDA	; 218
    23da:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0x12);
    23de:	82 e1       	ldi	r24, 0x12	; 18
    23e0:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0xc8); //common output scan direction:com63~com0
    23e4:	88 ec       	ldi	r24, 0xC8	; 200
    23e6:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0xa8); //multiplex ration mode:63
    23ea:	88 ea       	ldi	r24, 0xA8	; 168
    23ec:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0x3f);
    23f0:	8f e3       	ldi	r24, 0x3F	; 63
    23f2:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0xd5); //display divide ratio/osc. freq. mode
    23f6:	85 ed       	ldi	r24, 0xD5	; 213
    23f8:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0x80);
    23fc:	80 e8       	ldi	r24, 0x80	; 128
    23fe:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0x81); //contrast control
    2402:	81 e8       	ldi	r24, 0x81	; 129
    2404:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0x50);
    2408:	80 e5       	ldi	r24, 0x50	; 80
    240a:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0xd9); //set pre-charge period
    240e:	89 ed       	ldi	r24, 0xD9	; 217
    2410:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0x21);
    2414:	81 e2       	ldi	r24, 0x21	; 33
    2416:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0x20); //Set Memory Addressing Mode
    241a:	80 e2       	ldi	r24, 0x20	; 32
    241c:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0x02);
    2420:	82 e0       	ldi	r24, 0x02	; 2
    2422:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0xdb); //VCOM deselect level mode
    2426:	8b ed       	ldi	r24, 0xDB	; 219
    2428:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0x30);
    242c:	80 e3       	ldi	r24, 0x30	; 48
    242e:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0xad); //master configuration
    2432:	8d ea       	ldi	r24, 0xAD	; 173
    2434:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0x00);
    2438:	80 e0       	ldi	r24, 0x00	; 0
    243a:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0xa4); //out follows RAM content
    243e:	84 ea       	ldi	r24, 0xA4	; 164
    2440:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0xa6); //set normal display
    2444:	86 ea       	ldi	r24, 0xA6	; 166
    2446:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		write_c(0xAF); // display on
    244a:	8f ea       	ldi	r24, 0xAF	; 175
    244c:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <write_c>
		clear_oled();
    2450:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <clear_oled>
		oled_address_reset();
    2454:	0e 94 61 11 	call	0x22c2	; 0x22c2 <oled_address_reset>
		printf("oled initialized \n");
    2458:	88 ea       	ldi	r24, 0xA8	; 168
    245a:	91 e0       	ldi	r25, 0x01	; 1
    245c:	0e 94 31 15 	call	0x2a62	; 0x2a62 <puts>
    2460:	08 95       	ret

00002462 <main>:
volatile uint8_t CAN_send_ready = 0;
volatile uint8_t frame = 0;


int main(void)
{
    2462:	cf 93       	push	r28
    2464:	df 93       	push	r29
    2466:	cd b7       	in	r28, 0x3d	; 61
    2468:	de b7       	in	r29, 0x3e	; 62
    246a:	2d 97       	sbiw	r28, 0x0d	; 13
    246c:	0f b6       	in	r0, 0x3f	; 63
    246e:	f8 94       	cli
    2470:	de bf       	out	0x3e, r29	; 62
    2472:	0f be       	out	0x3f, r0	; 63
    2474:	cd bf       	out	0x3d, r28	; 61
	set_bit(DDRB,DDB0);
    2476:	b8 9a       	sbi	0x17, 0	; 23
	clear_bit(DDRB,DDB2);
    2478:	ba 98       	cbi	0x17, 2	; 23
	SPI_master_init();
    247a:	0e 94 6d 13 	call	0x26da	; 0x26da <SPI_master_init>
	//SPI_transmit(0xAA);
	USART_Init(MYUBRR);
    247e:	8f e1       	ldi	r24, 0x1F	; 31
    2480:	90 e0       	ldi	r25, 0x00	; 0
    2482:	0e 94 89 13 	call	0x2712	; 0x2712 <USART_Init>
	
	Enable_UAR0_Interrupt();
    2486:	0e 94 98 13 	call	0x2730	; 0x2730 <Enable_UAR0_Interrupt>
	SRAM_init();
    248a:	0e 94 7e 13 	call	0x26fc	; 0x26fc <SRAM_init>
	ADC_init();
    248e:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <ADC_init>
	oled_init();
    2492:	0e 94 e6 11 	call	0x23cc	; 0x23cc <oled_init>
	menu_init();
    2496:	0e 94 4c 10 	call	0x2098	; 0x2098 <menu_init>
	joy_button_init();
    249a:	0e 94 2f 0f 	call	0x1e5e	; 0x1e5e <joy_button_init>
	CAN_init();
    249e:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <CAN_init>
	
	
	
	//test
	
	message.package.id = 0x001;
    24a2:	81 e0       	ldi	r24, 0x01	; 1
    24a4:	90 e0       	ldi	r25, 0x00	; 0
    24a6:	90 93 d3 01 	sts	0x01D3, r25
    24aa:	80 93 d2 01 	sts	0x01D2, r24
	message.package.dlc = 6;
    24ae:	86 e0       	ldi	r24, 0x06	; 6
    24b0:	80 93 d6 01 	sts	0x01D6, r24
	message.package.eid = 0x0000;
    24b4:	10 92 d5 01 	sts	0x01D5, r1
    24b8:	10 92 d4 01 	sts	0x01D4, r1
		//_delay_ms(1000);
		if(CAN_data_waiting ==1)
		{
			CAN_data_waiting = 0;
			union can_msg_t temp = CAN_receive();
			for(int i = 0; i<13;i++)
    24bc:	81 2c       	mov	r8, r1
    24be:	91 2c       	mov	r9, r1
			{
				printf(" linje %i: %i \n",i,temp.array[i]);
    24c0:	0f 2e       	mov	r0, r31
    24c2:	fa eb       	ldi	r31, 0xBA	; 186
    24c4:	af 2e       	mov	r10, r31
    24c6:	f1 e0       	ldi	r31, 0x01	; 1
    24c8:	bf 2e       	mov	r11, r31
    24ca:	f0 2d       	mov	r31, r0
	while(1)
	{
		
		
		//_delay_ms(1000);
		if(CAN_data_waiting ==1)
    24cc:	80 91 cd 01 	lds	r24, 0x01CD
    24d0:	81 30       	cpi	r24, 0x01	; 1
    24d2:	11 f5       	brne	.+68     	; 0x2518 <main+0xb6>
		{
			CAN_data_waiting = 0;
    24d4:	10 92 cd 01 	sts	0x01CD, r1
			union can_msg_t temp = CAN_receive();
    24d8:	ce 01       	movw	r24, r28
    24da:	01 96       	adiw	r24, 0x01	; 1
    24dc:	0e 94 0b 0f 	call	0x1e16	; 0x1e16 <CAN_receive>
    24e0:	ce 01       	movw	r24, r28
    24e2:	01 96       	adiw	r24, 0x01	; 1
    24e4:	7c 01       	movw	r14, r24
			for(int i = 0; i<13;i++)
    24e6:	08 2d       	mov	r16, r8
    24e8:	19 2d       	mov	r17, r9
			{
				printf(" linje %i: %i \n",i,temp.array[i]);
    24ea:	f7 01       	movw	r30, r14
    24ec:	81 91       	ld	r24, Z+
    24ee:	7f 01       	movw	r14, r30
    24f0:	1f 92       	push	r1
    24f2:	8f 93       	push	r24
    24f4:	1f 93       	push	r17
    24f6:	0f 93       	push	r16
    24f8:	bf 92       	push	r11
    24fa:	af 92       	push	r10
    24fc:	0e 94 1d 15 	call	0x2a3a	; 0x2a3a <printf>
		//_delay_ms(1000);
		if(CAN_data_waiting ==1)
		{
			CAN_data_waiting = 0;
			union can_msg_t temp = CAN_receive();
			for(int i = 0; i<13;i++)
    2500:	0f 5f       	subi	r16, 0xFF	; 255
    2502:	1f 4f       	sbci	r17, 0xFF	; 255
    2504:	0f 90       	pop	r0
    2506:	0f 90       	pop	r0
    2508:	0f 90       	pop	r0
    250a:	0f 90       	pop	r0
    250c:	0f 90       	pop	r0
    250e:	0f 90       	pop	r0
    2510:	0d 30       	cpi	r16, 0x0D	; 13
    2512:	11 05       	cpc	r17, r1
    2514:	51 f7       	brne	.-44     	; 0x24ea <main+0x88>
    2516:	da cf       	rjmp	.-76     	; 0x24cc <main+0x6a>
			{
				printf(" linje %i: %i \n",i,temp.array[i]);
			}
		}else if(CAN_send_ready == 1)
    2518:	80 91 cc 01 	lds	r24, 0x01CC
    251c:	81 30       	cpi	r24, 0x01	; 1
    251e:	b1 f6       	brne	.-84     	; 0x24cc <main+0x6a>
		{
			CAN_send(message);
    2520:	c0 90 d2 01 	lds	r12, 0x01D2
    2524:	d0 90 d3 01 	lds	r13, 0x01D3
    2528:	e0 90 d4 01 	lds	r14, 0x01D4
    252c:	f0 90 d5 01 	lds	r15, 0x01D5
    2530:	00 91 d6 01 	lds	r16, 0x01D6
    2534:	10 91 d7 01 	lds	r17, 0x01D7
    2538:	20 91 d8 01 	lds	r18, 0x01D8
    253c:	30 91 d9 01 	lds	r19, 0x01D9
    2540:	40 91 da 01 	lds	r20, 0x01DA
    2544:	50 91 db 01 	lds	r21, 0x01DB
    2548:	60 91 dc 01 	lds	r22, 0x01DC
    254c:	70 91 dd 01 	lds	r23, 0x01DD
    2550:	80 91 de 01 	lds	r24, 0x01DE
    2554:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <CAN_send>
			CAN_send_ready = 0;
    2558:	10 92 cc 01 	sts	0x01CC, r1
    255c:	b7 cf       	rjmp	.-146    	; 0x24cc <main+0x6a>

0000255e <__vector_13>:
	}

}
/* timer interrupt ~50hz */
ISR(TIMER1_COMPA_vect)
{
    255e:	1f 92       	push	r1
    2560:	0f 92       	push	r0
    2562:	0f b6       	in	r0, 0x3f	; 63
    2564:	0f 92       	push	r0
    2566:	11 24       	eor	r1, r1
    2568:	2f 93       	push	r18
    256a:	3f 93       	push	r19
    256c:	4f 93       	push	r20
    256e:	5f 93       	push	r21
    2570:	6f 93       	push	r22
    2572:	7f 93       	push	r23
    2574:	8f 93       	push	r24
    2576:	9f 93       	push	r25
    2578:	af 93       	push	r26
    257a:	bf 93       	push	r27
    257c:	ef 93       	push	r30
    257e:	ff 93       	push	r31
	PORTB ^= 0x01; // Toggle the LED
    2580:	98 b3       	in	r25, 0x18	; 24
    2582:	81 e0       	ldi	r24, 0x01	; 1
    2584:	89 27       	eor	r24, r25
    2586:	88 bb       	out	0x18, r24	; 24
	
	/*test */ 

	oled_print_picture(frame);
    2588:	80 91 cb 01 	lds	r24, 0x01CB
    258c:	0e 94 6e 11 	call	0x22dc	; 0x22dc <oled_print_picture>
	if(frame == 2)
    2590:	80 91 cb 01 	lds	r24, 0x01CB
    2594:	82 30       	cpi	r24, 0x02	; 2
    2596:	19 f4       	brne	.+6      	; 0x259e <__vector_13+0x40>
	{
		frame = 0;
    2598:	10 92 cb 01 	sts	0x01CB, r1
    259c:	05 c0       	rjmp	.+10     	; 0x25a8 <__vector_13+0x4a>
	}else
	{
		frame++;
    259e:	80 91 cb 01 	lds	r24, 0x01CB
    25a2:	8f 5f       	subi	r24, 0xFF	; 255
    25a4:	80 93 cb 01 	sts	0x01CB, r24
	}
	
	
	if(ADC_busy() == 0)
    25a8:	0e 94 57 0e 	call	0x1cae	; 0x1cae <ADC_busy>
    25ac:	81 11       	cpse	r24, r1
    25ae:	2a c0       	rjmp	.+84     	; 0x2604 <__vector_13+0xa6>
	{
		if(toggler == 0)
    25b0:	80 91 cf 01 	lds	r24, 0x01CF
    25b4:	81 11       	cpse	r24, r1
    25b6:	03 c0       	rjmp	.+6      	; 0x25be <__vector_13+0x60>
		{
			y_pos();
    25b8:	0e 94 43 0f 	call	0x1e86	; 0x1e86 <y_pos>
    25bc:	23 c0       	rjmp	.+70     	; 0x2604 <__vector_13+0xa6>
		}else if(toggler == 1)
    25be:	80 91 cf 01 	lds	r24, 0x01CF
    25c2:	81 30       	cpi	r24, 0x01	; 1
    25c4:	19 f4       	brne	.+6      	; 0x25cc <__vector_13+0x6e>
		{
			x_pos();
    25c6:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <x_pos>
    25ca:	1c c0       	rjmp	.+56     	; 0x2604 <__vector_13+0xa6>
		}else if(toggler == 2)
    25cc:	80 91 cf 01 	lds	r24, 0x01CF
    25d0:	82 30       	cpi	r24, 0x02	; 2
    25d2:	19 f4       	brne	.+6      	; 0x25da <__vector_13+0x7c>
		{
			right_slider_pos();
    25d4:	0e 94 64 13 	call	0x26c8	; 0x26c8 <right_slider_pos>
    25d8:	15 c0       	rjmp	.+42     	; 0x2604 <__vector_13+0xa6>
		}else
		{
			toggler = 0;
    25da:	10 92 cf 01 	sts	0x01CF, r1
			message.package.data[3] = button_pressed;
    25de:	80 91 ce 01 	lds	r24, 0x01CE
    25e2:	80 93 da 01 	sts	0x01DA, r24
			if(test_bit(PINB,PINB2) == 4)
    25e6:	b2 9b       	sbis	0x16, 2	; 22
    25e8:	04 c0       	rjmp	.+8      	; 0x25f2 <__vector_13+0x94>
			{
				message.package.data[4] = 1;
    25ea:	81 e0       	ldi	r24, 0x01	; 1
    25ec:	80 93 db 01 	sts	0x01DB, r24
    25f0:	02 c0       	rjmp	.+4      	; 0x25f6 <__vector_13+0x98>
			}else
			{
				message.package.data[4] = 0;
    25f2:	10 92 db 01 	sts	0x01DB, r1
			}
			message.package.data[5] = 1;
    25f6:	81 e0       	ldi	r24, 0x01	; 1
    25f8:	80 93 dc 01 	sts	0x01DC, r24
			button_pressed = 0;
    25fc:	10 92 ce 01 	sts	0x01CE, r1
			CAN_send_ready = 1;	//gamestate
    2600:	80 93 cc 01 	sts	0x01CC, r24
		}
			
	}
	
}
    2604:	ff 91       	pop	r31
    2606:	ef 91       	pop	r30
    2608:	bf 91       	pop	r27
    260a:	af 91       	pop	r26
    260c:	9f 91       	pop	r25
    260e:	8f 91       	pop	r24
    2610:	7f 91       	pop	r23
    2612:	6f 91       	pop	r22
    2614:	5f 91       	pop	r21
    2616:	4f 91       	pop	r20
    2618:	3f 91       	pop	r19
    261a:	2f 91       	pop	r18
    261c:	0f 90       	pop	r0
    261e:	0f be       	out	0x3f, r0	; 63
    2620:	0f 90       	pop	r0
    2622:	1f 90       	pop	r1
    2624:	18 95       	reti

00002626 <__vector_1>:
/* ADC interrupt */
ISR(INT0_vect){
    2626:	1f 92       	push	r1
    2628:	0f 92       	push	r0
    262a:	0f b6       	in	r0, 0x3f	; 63
    262c:	0f 92       	push	r0
    262e:	11 24       	eor	r1, r1
    2630:	2f 93       	push	r18
    2632:	3f 93       	push	r19
    2634:	4f 93       	push	r20
    2636:	5f 93       	push	r21
    2638:	6f 93       	push	r22
    263a:	7f 93       	push	r23
    263c:	8f 93       	push	r24
    263e:	9f 93       	push	r25
    2640:	af 93       	push	r26
    2642:	bf 93       	push	r27
    2644:	ef 93       	push	r30
    2646:	ff 93       	push	r31
	volatile char *ext_adc = (char *) 0x1403;
	message.package.data[toggler] = ext_adc[0];
    2648:	e0 91 cf 01 	lds	r30, 0x01CF
    264c:	f0 e0       	ldi	r31, 0x00	; 0
    264e:	80 91 03 14 	lds	r24, 0x1403
    2652:	ee 52       	subi	r30, 0x2E	; 46
    2654:	fe 4f       	sbci	r31, 0xFE	; 254
    2656:	85 83       	std	Z+5, r24	; 0x05
	toggler++;
    2658:	80 91 cf 01 	lds	r24, 0x01CF
    265c:	8f 5f       	subi	r24, 0xFF	; 255
    265e:	80 93 cf 01 	sts	0x01CF, r24
	ADC_busy(0);
    2662:	80 e0       	ldi	r24, 0x00	; 0
    2664:	90 e0       	ldi	r25, 0x00	; 0
    2666:	0e 94 57 0e 	call	0x1cae	; 0x1cae <ADC_busy>
}
    266a:	ff 91       	pop	r31
    266c:	ef 91       	pop	r30
    266e:	bf 91       	pop	r27
    2670:	af 91       	pop	r26
    2672:	9f 91       	pop	r25
    2674:	8f 91       	pop	r24
    2676:	7f 91       	pop	r23
    2678:	6f 91       	pop	r22
    267a:	5f 91       	pop	r21
    267c:	4f 91       	pop	r20
    267e:	3f 91       	pop	r19
    2680:	2f 91       	pop	r18
    2682:	0f 90       	pop	r0
    2684:	0f be       	out	0x3f, r0	; 63
    2686:	0f 90       	pop	r0
    2688:	1f 90       	pop	r1
    268a:	18 95       	reti

0000268c <__vector_2>:
/* jOYSTICK BUTTON */
ISR(INT1_vect){
    268c:	1f 92       	push	r1
    268e:	0f 92       	push	r0
    2690:	0f b6       	in	r0, 0x3f	; 63
    2692:	0f 92       	push	r0
    2694:	11 24       	eor	r1, r1
    2696:	8f 93       	push	r24

	button_pressed = 1;
    2698:	81 e0       	ldi	r24, 0x01	; 1
    269a:	80 93 ce 01 	sts	0x01CE, r24
	
}
    269e:	8f 91       	pop	r24
    26a0:	0f 90       	pop	r0
    26a2:	0f be       	out	0x3f, r0	; 63
    26a4:	0f 90       	pop	r0
    26a6:	1f 90       	pop	r1
    26a8:	18 95       	reti

000026aa <__vector_3>:

/* CAN INTERRUPT */
ISR(INT2_vect){
    26aa:	1f 92       	push	r1
    26ac:	0f 92       	push	r0
    26ae:	0f b6       	in	r0, 0x3f	; 63
    26b0:	0f 92       	push	r0
    26b2:	11 24       	eor	r1, r1
    26b4:	8f 93       	push	r24
	CAN_data_waiting = 1;
    26b6:	81 e0       	ldi	r24, 0x01	; 1
    26b8:	80 93 cd 01 	sts	0x01CD, r24
	
    26bc:	8f 91       	pop	r24
    26be:	0f 90       	pop	r0
    26c0:	0f be       	out	0x3f, r0	; 63
    26c2:	0f 90       	pop	r0
    26c4:	1f 90       	pop	r1
    26c6:	18 95       	reti

000026c8 <right_slider_pos>:
	ADC_read(3);
}

void right_slider_pos()
{
	ADC_read(4);
    26c8:	84 e0       	ldi	r24, 0x04	; 4
    26ca:	90 e0       	ldi	r25, 0x00	; 0
    26cc:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <ADC_read>
    26d0:	08 95       	ret

000026d2 <SPI_CS_low>:
    26d2:	c4 98       	cbi	0x18, 4	; 24
    26d4:	08 95       	ret

000026d6 <SPI_CS_high>:
    26d6:	c4 9a       	sbi	0x18, 4	; 24
    26d8:	08 95       	ret

000026da <SPI_master_init>:
    26da:	8b b7       	in	r24, 0x3b	; 59
    26dc:	80 62       	ori	r24, 0x20	; 32
    26de:	8b bf       	out	0x3b, r24	; 59
    26e0:	bc 9a       	sbi	0x17, 4	; 23
    26e2:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <SPI_CS_high>
    26e6:	bd 9a       	sbi	0x17, 5	; 23
    26e8:	bf 9a       	sbi	0x17, 7	; 23
    26ea:	6e 9a       	sbi	0x0d, 6	; 13
    26ec:	6c 9a       	sbi	0x0d, 4	; 13
    26ee:	68 9a       	sbi	0x0d, 0	; 13
    26f0:	08 95       	ret

000026f2 <SPI_data>:
    26f2:	8f b9       	out	0x0f, r24	; 15
    26f4:	77 9b       	sbis	0x0e, 7	; 14
    26f6:	fe cf       	rjmp	.-4      	; 0x26f4 <SPI_data+0x2>
    26f8:	8f b1       	in	r24, 0x0f	; 15
    26fa:	08 95       	ret

000026fc <SRAM_init>:
    26fc:	85 b7       	in	r24, 0x35	; 53
    26fe:	80 68       	ori	r24, 0x80	; 128
    2700:	85 bf       	out	0x35, r24	; 53
    2702:	08 95       	ret

00002704 <USART0_Receive>:

unsigned char USART0_Receive()
{
	//return recived_data_form_usart;
	return received_data_from_usart;
}
    2704:	80 91 df 01 	lds	r24, 0x01DF
    2708:	08 95       	ret

0000270a <USART0_Transmit>:
}

void USART0_Transmit( unsigned char chardata )
{
	/* Wait for empty transmit buffer*/
	while( !( UCSR0A & (1<<UDRE0)) )
    270a:	5d 9b       	sbis	0x0b, 5	; 11
    270c:	fe cf       	rjmp	.-4      	; 0x270a <USART0_Transmit>
	;
	/* Put data into buffer, sends the data*/
	UDR0 = chardata;
    270e:	8c b9       	out	0x0c, r24	; 12
    2710:	08 95       	ret

00002712 <USART_Init>:
unsigned char received_data_from_usart; 

void USART_Init(unsigned int ubrr )
{
	/*Set baud rate*/
	UBRR0H = (unsigned char)(ubrr>>8);
    2712:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
    2714:	89 b9       	out	0x09, r24	; 9
	/*Enable receiver and transmitter*/
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    2716:	88 e1       	ldi	r24, 0x18	; 24
    2718:	8a b9       	out	0x0a, r24	; 10
	/*Set frame format: 8data, 2stop bit*/
	UCSR0C = (1<<URSEL0)|(3<<UCSZ00);
    271a:	86 e8       	ldi	r24, 0x86	; 134
    271c:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART0_Transmit, USART0_Receive,0);  //oled_char_print
    271e:	40 e0       	ldi	r20, 0x00	; 0
    2720:	50 e0       	ldi	r21, 0x00	; 0
    2722:	62 e8       	ldi	r22, 0x82	; 130
    2724:	73 e1       	ldi	r23, 0x13	; 19
    2726:	85 e8       	ldi	r24, 0x85	; 133
    2728:	93 e1       	ldi	r25, 0x13	; 19
    272a:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <fdevopen>
    272e:	08 95       	ret

00002730 <Enable_UAR0_Interrupt>:
}


void Enable_UAR0_Interrupt()
{
	UCSR0B |= (1<<RXCIE0);
    2730:	57 9a       	sbi	0x0a, 7	; 10
    2732:	08 95       	ret

00002734 <__vector_19>:
		
	}
}

ISR(USART0_RXC_vect) 
 { 
    2734:	1f 92       	push	r1
    2736:	0f 92       	push	r0
    2738:	0f b6       	in	r0, 0x3f	; 63
    273a:	0f 92       	push	r0
    273c:	11 24       	eor	r1, r1
    273e:	8f 93       	push	r24
	unsigned char temp = UDR0;
    2740:	8c b1       	in	r24, 0x0c	; 12
	if(temp != '\n')
    2742:	8a 30       	cpi	r24, 0x0A	; 10
    2744:	11 f0       	breq	.+4      	; 0x274a <__vector_19+0x16>
	{
		received_data_from_usart = temp;
    2746:	80 93 df 01 	sts	0x01DF, r24
		tull[k] = '\n';
		USART0_array_transmit(tull, k);
		k = 0;
	}
	*/
 } 
    274a:	8f 91       	pop	r24
    274c:	0f 90       	pop	r0
    274e:	0f be       	out	0x3f, r0	; 63
    2750:	0f 90       	pop	r0
    2752:	1f 90       	pop	r1
    2754:	18 95       	reti

00002756 <malloc>:
    2756:	cf 93       	push	r28
    2758:	df 93       	push	r29
    275a:	82 30       	cpi	r24, 0x02	; 2
    275c:	91 05       	cpc	r25, r1
    275e:	10 f4       	brcc	.+4      	; 0x2764 <malloc+0xe>
    2760:	82 e0       	ldi	r24, 0x02	; 2
    2762:	90 e0       	ldi	r25, 0x00	; 0
    2764:	e0 91 14 02 	lds	r30, 0x0214
    2768:	f0 91 15 02 	lds	r31, 0x0215
    276c:	20 e0       	ldi	r18, 0x00	; 0
    276e:	30 e0       	ldi	r19, 0x00	; 0
    2770:	a0 e0       	ldi	r26, 0x00	; 0
    2772:	b0 e0       	ldi	r27, 0x00	; 0
    2774:	30 97       	sbiw	r30, 0x00	; 0
    2776:	39 f1       	breq	.+78     	; 0x27c6 <malloc+0x70>
    2778:	40 81       	ld	r20, Z
    277a:	51 81       	ldd	r21, Z+1	; 0x01
    277c:	48 17       	cp	r20, r24
    277e:	59 07       	cpc	r21, r25
    2780:	b8 f0       	brcs	.+46     	; 0x27b0 <malloc+0x5a>
    2782:	48 17       	cp	r20, r24
    2784:	59 07       	cpc	r21, r25
    2786:	71 f4       	brne	.+28     	; 0x27a4 <malloc+0x4e>
    2788:	82 81       	ldd	r24, Z+2	; 0x02
    278a:	93 81       	ldd	r25, Z+3	; 0x03
    278c:	10 97       	sbiw	r26, 0x00	; 0
    278e:	29 f0       	breq	.+10     	; 0x279a <malloc+0x44>
    2790:	13 96       	adiw	r26, 0x03	; 3
    2792:	9c 93       	st	X, r25
    2794:	8e 93       	st	-X, r24
    2796:	12 97       	sbiw	r26, 0x02	; 2
    2798:	2c c0       	rjmp	.+88     	; 0x27f2 <malloc+0x9c>
    279a:	90 93 15 02 	sts	0x0215, r25
    279e:	80 93 14 02 	sts	0x0214, r24
    27a2:	27 c0       	rjmp	.+78     	; 0x27f2 <malloc+0x9c>
    27a4:	21 15       	cp	r18, r1
    27a6:	31 05       	cpc	r19, r1
    27a8:	31 f0       	breq	.+12     	; 0x27b6 <malloc+0x60>
    27aa:	42 17       	cp	r20, r18
    27ac:	53 07       	cpc	r21, r19
    27ae:	18 f0       	brcs	.+6      	; 0x27b6 <malloc+0x60>
    27b0:	a9 01       	movw	r20, r18
    27b2:	db 01       	movw	r26, r22
    27b4:	01 c0       	rjmp	.+2      	; 0x27b8 <malloc+0x62>
    27b6:	ef 01       	movw	r28, r30
    27b8:	9a 01       	movw	r18, r20
    27ba:	bd 01       	movw	r22, r26
    27bc:	df 01       	movw	r26, r30
    27be:	02 80       	ldd	r0, Z+2	; 0x02
    27c0:	f3 81       	ldd	r31, Z+3	; 0x03
    27c2:	e0 2d       	mov	r30, r0
    27c4:	d7 cf       	rjmp	.-82     	; 0x2774 <malloc+0x1e>
    27c6:	21 15       	cp	r18, r1
    27c8:	31 05       	cpc	r19, r1
    27ca:	f9 f0       	breq	.+62     	; 0x280a <malloc+0xb4>
    27cc:	28 1b       	sub	r18, r24
    27ce:	39 0b       	sbc	r19, r25
    27d0:	24 30       	cpi	r18, 0x04	; 4
    27d2:	31 05       	cpc	r19, r1
    27d4:	80 f4       	brcc	.+32     	; 0x27f6 <malloc+0xa0>
    27d6:	8a 81       	ldd	r24, Y+2	; 0x02
    27d8:	9b 81       	ldd	r25, Y+3	; 0x03
    27da:	61 15       	cp	r22, r1
    27dc:	71 05       	cpc	r23, r1
    27de:	21 f0       	breq	.+8      	; 0x27e8 <malloc+0x92>
    27e0:	fb 01       	movw	r30, r22
    27e2:	93 83       	std	Z+3, r25	; 0x03
    27e4:	82 83       	std	Z+2, r24	; 0x02
    27e6:	04 c0       	rjmp	.+8      	; 0x27f0 <malloc+0x9a>
    27e8:	90 93 15 02 	sts	0x0215, r25
    27ec:	80 93 14 02 	sts	0x0214, r24
    27f0:	fe 01       	movw	r30, r28
    27f2:	32 96       	adiw	r30, 0x02	; 2
    27f4:	44 c0       	rjmp	.+136    	; 0x287e <malloc+0x128>
    27f6:	fe 01       	movw	r30, r28
    27f8:	e2 0f       	add	r30, r18
    27fa:	f3 1f       	adc	r31, r19
    27fc:	81 93       	st	Z+, r24
    27fe:	91 93       	st	Z+, r25
    2800:	22 50       	subi	r18, 0x02	; 2
    2802:	31 09       	sbc	r19, r1
    2804:	39 83       	std	Y+1, r19	; 0x01
    2806:	28 83       	st	Y, r18
    2808:	3a c0       	rjmp	.+116    	; 0x287e <malloc+0x128>
    280a:	20 91 12 02 	lds	r18, 0x0212
    280e:	30 91 13 02 	lds	r19, 0x0213
    2812:	23 2b       	or	r18, r19
    2814:	41 f4       	brne	.+16     	; 0x2826 <malloc+0xd0>
    2816:	20 91 02 01 	lds	r18, 0x0102
    281a:	30 91 03 01 	lds	r19, 0x0103
    281e:	30 93 13 02 	sts	0x0213, r19
    2822:	20 93 12 02 	sts	0x0212, r18
    2826:	20 91 00 01 	lds	r18, 0x0100
    282a:	30 91 01 01 	lds	r19, 0x0101
    282e:	21 15       	cp	r18, r1
    2830:	31 05       	cpc	r19, r1
    2832:	41 f4       	brne	.+16     	; 0x2844 <malloc+0xee>
    2834:	2d b7       	in	r18, 0x3d	; 61
    2836:	3e b7       	in	r19, 0x3e	; 62
    2838:	40 91 04 01 	lds	r20, 0x0104
    283c:	50 91 05 01 	lds	r21, 0x0105
    2840:	24 1b       	sub	r18, r20
    2842:	35 0b       	sbc	r19, r21
    2844:	e0 91 12 02 	lds	r30, 0x0212
    2848:	f0 91 13 02 	lds	r31, 0x0213
    284c:	e2 17       	cp	r30, r18
    284e:	f3 07       	cpc	r31, r19
    2850:	a0 f4       	brcc	.+40     	; 0x287a <malloc+0x124>
    2852:	2e 1b       	sub	r18, r30
    2854:	3f 0b       	sbc	r19, r31
    2856:	28 17       	cp	r18, r24
    2858:	39 07       	cpc	r19, r25
    285a:	78 f0       	brcs	.+30     	; 0x287a <malloc+0x124>
    285c:	ac 01       	movw	r20, r24
    285e:	4e 5f       	subi	r20, 0xFE	; 254
    2860:	5f 4f       	sbci	r21, 0xFF	; 255
    2862:	24 17       	cp	r18, r20
    2864:	35 07       	cpc	r19, r21
    2866:	48 f0       	brcs	.+18     	; 0x287a <malloc+0x124>
    2868:	4e 0f       	add	r20, r30
    286a:	5f 1f       	adc	r21, r31
    286c:	50 93 13 02 	sts	0x0213, r21
    2870:	40 93 12 02 	sts	0x0212, r20
    2874:	81 93       	st	Z+, r24
    2876:	91 93       	st	Z+, r25
    2878:	02 c0       	rjmp	.+4      	; 0x287e <malloc+0x128>
    287a:	e0 e0       	ldi	r30, 0x00	; 0
    287c:	f0 e0       	ldi	r31, 0x00	; 0
    287e:	cf 01       	movw	r24, r30
    2880:	df 91       	pop	r29
    2882:	cf 91       	pop	r28
    2884:	08 95       	ret

00002886 <free>:
    2886:	cf 93       	push	r28
    2888:	df 93       	push	r29
    288a:	00 97       	sbiw	r24, 0x00	; 0
    288c:	09 f4       	brne	.+2      	; 0x2890 <free+0xa>
    288e:	87 c0       	rjmp	.+270    	; 0x299e <free+0x118>
    2890:	fc 01       	movw	r30, r24
    2892:	32 97       	sbiw	r30, 0x02	; 2
    2894:	13 82       	std	Z+3, r1	; 0x03
    2896:	12 82       	std	Z+2, r1	; 0x02
    2898:	c0 91 14 02 	lds	r28, 0x0214
    289c:	d0 91 15 02 	lds	r29, 0x0215
    28a0:	20 97       	sbiw	r28, 0x00	; 0
    28a2:	81 f4       	brne	.+32     	; 0x28c4 <free+0x3e>
    28a4:	20 81       	ld	r18, Z
    28a6:	31 81       	ldd	r19, Z+1	; 0x01
    28a8:	28 0f       	add	r18, r24
    28aa:	39 1f       	adc	r19, r25
    28ac:	80 91 12 02 	lds	r24, 0x0212
    28b0:	90 91 13 02 	lds	r25, 0x0213
    28b4:	82 17       	cp	r24, r18
    28b6:	93 07       	cpc	r25, r19
    28b8:	79 f5       	brne	.+94     	; 0x2918 <free+0x92>
    28ba:	f0 93 13 02 	sts	0x0213, r31
    28be:	e0 93 12 02 	sts	0x0212, r30
    28c2:	6d c0       	rjmp	.+218    	; 0x299e <free+0x118>
    28c4:	de 01       	movw	r26, r28
    28c6:	20 e0       	ldi	r18, 0x00	; 0
    28c8:	30 e0       	ldi	r19, 0x00	; 0
    28ca:	ae 17       	cp	r26, r30
    28cc:	bf 07       	cpc	r27, r31
    28ce:	50 f4       	brcc	.+20     	; 0x28e4 <free+0x5e>
    28d0:	12 96       	adiw	r26, 0x02	; 2
    28d2:	4d 91       	ld	r20, X+
    28d4:	5c 91       	ld	r21, X
    28d6:	13 97       	sbiw	r26, 0x03	; 3
    28d8:	9d 01       	movw	r18, r26
    28da:	41 15       	cp	r20, r1
    28dc:	51 05       	cpc	r21, r1
    28de:	09 f1       	breq	.+66     	; 0x2922 <free+0x9c>
    28e0:	da 01       	movw	r26, r20
    28e2:	f3 cf       	rjmp	.-26     	; 0x28ca <free+0x44>
    28e4:	b3 83       	std	Z+3, r27	; 0x03
    28e6:	a2 83       	std	Z+2, r26	; 0x02
    28e8:	40 81       	ld	r20, Z
    28ea:	51 81       	ldd	r21, Z+1	; 0x01
    28ec:	84 0f       	add	r24, r20
    28ee:	95 1f       	adc	r25, r21
    28f0:	8a 17       	cp	r24, r26
    28f2:	9b 07       	cpc	r25, r27
    28f4:	71 f4       	brne	.+28     	; 0x2912 <free+0x8c>
    28f6:	8d 91       	ld	r24, X+
    28f8:	9c 91       	ld	r25, X
    28fa:	11 97       	sbiw	r26, 0x01	; 1
    28fc:	84 0f       	add	r24, r20
    28fe:	95 1f       	adc	r25, r21
    2900:	02 96       	adiw	r24, 0x02	; 2
    2902:	91 83       	std	Z+1, r25	; 0x01
    2904:	80 83       	st	Z, r24
    2906:	12 96       	adiw	r26, 0x02	; 2
    2908:	8d 91       	ld	r24, X+
    290a:	9c 91       	ld	r25, X
    290c:	13 97       	sbiw	r26, 0x03	; 3
    290e:	93 83       	std	Z+3, r25	; 0x03
    2910:	82 83       	std	Z+2, r24	; 0x02
    2912:	21 15       	cp	r18, r1
    2914:	31 05       	cpc	r19, r1
    2916:	29 f4       	brne	.+10     	; 0x2922 <free+0x9c>
    2918:	f0 93 15 02 	sts	0x0215, r31
    291c:	e0 93 14 02 	sts	0x0214, r30
    2920:	3e c0       	rjmp	.+124    	; 0x299e <free+0x118>
    2922:	d9 01       	movw	r26, r18
    2924:	13 96       	adiw	r26, 0x03	; 3
    2926:	fc 93       	st	X, r31
    2928:	ee 93       	st	-X, r30
    292a:	12 97       	sbiw	r26, 0x02	; 2
    292c:	4d 91       	ld	r20, X+
    292e:	5d 91       	ld	r21, X+
    2930:	a4 0f       	add	r26, r20
    2932:	b5 1f       	adc	r27, r21
    2934:	ea 17       	cp	r30, r26
    2936:	fb 07       	cpc	r31, r27
    2938:	79 f4       	brne	.+30     	; 0x2958 <free+0xd2>
    293a:	80 81       	ld	r24, Z
    293c:	91 81       	ldd	r25, Z+1	; 0x01
    293e:	84 0f       	add	r24, r20
    2940:	95 1f       	adc	r25, r21
    2942:	02 96       	adiw	r24, 0x02	; 2
    2944:	d9 01       	movw	r26, r18
    2946:	11 96       	adiw	r26, 0x01	; 1
    2948:	9c 93       	st	X, r25
    294a:	8e 93       	st	-X, r24
    294c:	82 81       	ldd	r24, Z+2	; 0x02
    294e:	93 81       	ldd	r25, Z+3	; 0x03
    2950:	13 96       	adiw	r26, 0x03	; 3
    2952:	9c 93       	st	X, r25
    2954:	8e 93       	st	-X, r24
    2956:	12 97       	sbiw	r26, 0x02	; 2
    2958:	e0 e0       	ldi	r30, 0x00	; 0
    295a:	f0 e0       	ldi	r31, 0x00	; 0
    295c:	8a 81       	ldd	r24, Y+2	; 0x02
    295e:	9b 81       	ldd	r25, Y+3	; 0x03
    2960:	00 97       	sbiw	r24, 0x00	; 0
    2962:	19 f0       	breq	.+6      	; 0x296a <free+0xe4>
    2964:	fe 01       	movw	r30, r28
    2966:	ec 01       	movw	r28, r24
    2968:	f9 cf       	rjmp	.-14     	; 0x295c <free+0xd6>
    296a:	ce 01       	movw	r24, r28
    296c:	02 96       	adiw	r24, 0x02	; 2
    296e:	28 81       	ld	r18, Y
    2970:	39 81       	ldd	r19, Y+1	; 0x01
    2972:	82 0f       	add	r24, r18
    2974:	93 1f       	adc	r25, r19
    2976:	20 91 12 02 	lds	r18, 0x0212
    297a:	30 91 13 02 	lds	r19, 0x0213
    297e:	28 17       	cp	r18, r24
    2980:	39 07       	cpc	r19, r25
    2982:	69 f4       	brne	.+26     	; 0x299e <free+0x118>
    2984:	30 97       	sbiw	r30, 0x00	; 0
    2986:	29 f4       	brne	.+10     	; 0x2992 <free+0x10c>
    2988:	10 92 15 02 	sts	0x0215, r1
    298c:	10 92 14 02 	sts	0x0214, r1
    2990:	02 c0       	rjmp	.+4      	; 0x2996 <free+0x110>
    2992:	13 82       	std	Z+3, r1	; 0x03
    2994:	12 82       	std	Z+2, r1	; 0x02
    2996:	d0 93 13 02 	sts	0x0213, r29
    299a:	c0 93 12 02 	sts	0x0212, r28
    299e:	df 91       	pop	r29
    29a0:	cf 91       	pop	r28
    29a2:	08 95       	ret

000029a4 <fdevopen>:
    29a4:	0f 93       	push	r16
    29a6:	1f 93       	push	r17
    29a8:	cf 93       	push	r28
    29aa:	df 93       	push	r29
    29ac:	ec 01       	movw	r28, r24
    29ae:	8b 01       	movw	r16, r22
    29b0:	00 97       	sbiw	r24, 0x00	; 0
    29b2:	31 f4       	brne	.+12     	; 0x29c0 <fdevopen+0x1c>
    29b4:	61 15       	cp	r22, r1
    29b6:	71 05       	cpc	r23, r1
    29b8:	19 f4       	brne	.+6      	; 0x29c0 <fdevopen+0x1c>
    29ba:	80 e0       	ldi	r24, 0x00	; 0
    29bc:	90 e0       	ldi	r25, 0x00	; 0
    29be:	38 c0       	rjmp	.+112    	; 0x2a30 <fdevopen+0x8c>
    29c0:	6e e0       	ldi	r22, 0x0E	; 14
    29c2:	70 e0       	ldi	r23, 0x00	; 0
    29c4:	81 e0       	ldi	r24, 0x01	; 1
    29c6:	90 e0       	ldi	r25, 0x00	; 0
    29c8:	0e 94 30 17 	call	0x2e60	; 0x2e60 <calloc>
    29cc:	fc 01       	movw	r30, r24
    29ce:	00 97       	sbiw	r24, 0x00	; 0
    29d0:	a1 f3       	breq	.-24     	; 0x29ba <fdevopen+0x16>
    29d2:	80 e8       	ldi	r24, 0x80	; 128
    29d4:	83 83       	std	Z+3, r24	; 0x03
    29d6:	01 15       	cp	r16, r1
    29d8:	11 05       	cpc	r17, r1
    29da:	71 f0       	breq	.+28     	; 0x29f8 <fdevopen+0x54>
    29dc:	13 87       	std	Z+11, r17	; 0x0b
    29de:	02 87       	std	Z+10, r16	; 0x0a
    29e0:	81 e8       	ldi	r24, 0x81	; 129
    29e2:	83 83       	std	Z+3, r24	; 0x03
    29e4:	80 91 16 02 	lds	r24, 0x0216
    29e8:	90 91 17 02 	lds	r25, 0x0217
    29ec:	89 2b       	or	r24, r25
    29ee:	21 f4       	brne	.+8      	; 0x29f8 <fdevopen+0x54>
    29f0:	f0 93 17 02 	sts	0x0217, r31
    29f4:	e0 93 16 02 	sts	0x0216, r30
    29f8:	20 97       	sbiw	r28, 0x00	; 0
    29fa:	c9 f0       	breq	.+50     	; 0x2a2e <fdevopen+0x8a>
    29fc:	d1 87       	std	Z+9, r29	; 0x09
    29fe:	c0 87       	std	Z+8, r28	; 0x08
    2a00:	83 81       	ldd	r24, Z+3	; 0x03
    2a02:	82 60       	ori	r24, 0x02	; 2
    2a04:	83 83       	std	Z+3, r24	; 0x03
    2a06:	80 91 18 02 	lds	r24, 0x0218
    2a0a:	90 91 19 02 	lds	r25, 0x0219
    2a0e:	89 2b       	or	r24, r25
    2a10:	71 f4       	brne	.+28     	; 0x2a2e <fdevopen+0x8a>
    2a12:	f0 93 19 02 	sts	0x0219, r31
    2a16:	e0 93 18 02 	sts	0x0218, r30
    2a1a:	80 91 1a 02 	lds	r24, 0x021A
    2a1e:	90 91 1b 02 	lds	r25, 0x021B
    2a22:	89 2b       	or	r24, r25
    2a24:	21 f4       	brne	.+8      	; 0x2a2e <fdevopen+0x8a>
    2a26:	f0 93 1b 02 	sts	0x021B, r31
    2a2a:	e0 93 1a 02 	sts	0x021A, r30
    2a2e:	cf 01       	movw	r24, r30
    2a30:	df 91       	pop	r29
    2a32:	cf 91       	pop	r28
    2a34:	1f 91       	pop	r17
    2a36:	0f 91       	pop	r16
    2a38:	08 95       	ret

00002a3a <printf>:
    2a3a:	a0 e0       	ldi	r26, 0x00	; 0
    2a3c:	b0 e0       	ldi	r27, 0x00	; 0
    2a3e:	e3 e2       	ldi	r30, 0x23	; 35
    2a40:	f5 e1       	ldi	r31, 0x15	; 21
    2a42:	0c 94 09 18 	jmp	0x3012	; 0x3012 <__prologue_saves__+0x20>
    2a46:	fe 01       	movw	r30, r28
    2a48:	35 96       	adiw	r30, 0x05	; 5
    2a4a:	61 91       	ld	r22, Z+
    2a4c:	71 91       	ld	r23, Z+
    2a4e:	af 01       	movw	r20, r30
    2a50:	80 91 18 02 	lds	r24, 0x0218
    2a54:	90 91 19 02 	lds	r25, 0x0219
    2a58:	0e 94 5e 15 	call	0x2abc	; 0x2abc <vfprintf>
    2a5c:	e2 e0       	ldi	r30, 0x02	; 2
    2a5e:	0c 94 25 18 	jmp	0x304a	; 0x304a <__epilogue_restores__+0x20>

00002a62 <puts>:
    2a62:	0f 93       	push	r16
    2a64:	1f 93       	push	r17
    2a66:	cf 93       	push	r28
    2a68:	df 93       	push	r29
    2a6a:	e0 91 18 02 	lds	r30, 0x0218
    2a6e:	f0 91 19 02 	lds	r31, 0x0219
    2a72:	23 81       	ldd	r18, Z+3	; 0x03
    2a74:	21 ff       	sbrs	r18, 1
    2a76:	1b c0       	rjmp	.+54     	; 0x2aae <puts+0x4c>
    2a78:	ec 01       	movw	r28, r24
    2a7a:	00 e0       	ldi	r16, 0x00	; 0
    2a7c:	10 e0       	ldi	r17, 0x00	; 0
    2a7e:	89 91       	ld	r24, Y+
    2a80:	60 91 18 02 	lds	r22, 0x0218
    2a84:	70 91 19 02 	lds	r23, 0x0219
    2a88:	db 01       	movw	r26, r22
    2a8a:	18 96       	adiw	r26, 0x08	; 8
    2a8c:	ed 91       	ld	r30, X+
    2a8e:	fc 91       	ld	r31, X
    2a90:	19 97       	sbiw	r26, 0x09	; 9
    2a92:	88 23       	and	r24, r24
    2a94:	31 f0       	breq	.+12     	; 0x2aa2 <puts+0x40>
    2a96:	09 95       	icall
    2a98:	89 2b       	or	r24, r25
    2a9a:	89 f3       	breq	.-30     	; 0x2a7e <puts+0x1c>
    2a9c:	0f ef       	ldi	r16, 0xFF	; 255
    2a9e:	1f ef       	ldi	r17, 0xFF	; 255
    2aa0:	ee cf       	rjmp	.-36     	; 0x2a7e <puts+0x1c>
    2aa2:	8a e0       	ldi	r24, 0x0A	; 10
    2aa4:	09 95       	icall
    2aa6:	89 2b       	or	r24, r25
    2aa8:	11 f4       	brne	.+4      	; 0x2aae <puts+0x4c>
    2aaa:	c8 01       	movw	r24, r16
    2aac:	02 c0       	rjmp	.+4      	; 0x2ab2 <puts+0x50>
    2aae:	8f ef       	ldi	r24, 0xFF	; 255
    2ab0:	9f ef       	ldi	r25, 0xFF	; 255
    2ab2:	df 91       	pop	r29
    2ab4:	cf 91       	pop	r28
    2ab6:	1f 91       	pop	r17
    2ab8:	0f 91       	pop	r16
    2aba:	08 95       	ret

00002abc <vfprintf>:
    2abc:	ac e0       	ldi	r26, 0x0C	; 12
    2abe:	b0 e0       	ldi	r27, 0x00	; 0
    2ac0:	e4 e6       	ldi	r30, 0x64	; 100
    2ac2:	f5 e1       	ldi	r31, 0x15	; 21
    2ac4:	0c 94 f9 17 	jmp	0x2ff2	; 0x2ff2 <__prologue_saves__>
    2ac8:	7c 01       	movw	r14, r24
    2aca:	6b 01       	movw	r12, r22
    2acc:	8a 01       	movw	r16, r20
    2ace:	fc 01       	movw	r30, r24
    2ad0:	17 82       	std	Z+7, r1	; 0x07
    2ad2:	16 82       	std	Z+6, r1	; 0x06
    2ad4:	83 81       	ldd	r24, Z+3	; 0x03
    2ad6:	81 ff       	sbrs	r24, 1
    2ad8:	bd c1       	rjmp	.+890    	; 0x2e54 <vfprintf+0x398>
    2ada:	ce 01       	movw	r24, r28
    2adc:	01 96       	adiw	r24, 0x01	; 1
    2ade:	4c 01       	movw	r8, r24
    2ae0:	f7 01       	movw	r30, r14
    2ae2:	93 81       	ldd	r25, Z+3	; 0x03
    2ae4:	f6 01       	movw	r30, r12
    2ae6:	93 fd       	sbrc	r25, 3
    2ae8:	85 91       	lpm	r24, Z+
    2aea:	93 ff       	sbrs	r25, 3
    2aec:	81 91       	ld	r24, Z+
    2aee:	6f 01       	movw	r12, r30
    2af0:	88 23       	and	r24, r24
    2af2:	09 f4       	brne	.+2      	; 0x2af6 <vfprintf+0x3a>
    2af4:	ab c1       	rjmp	.+854    	; 0x2e4c <vfprintf+0x390>
    2af6:	85 32       	cpi	r24, 0x25	; 37
    2af8:	39 f4       	brne	.+14     	; 0x2b08 <vfprintf+0x4c>
    2afa:	93 fd       	sbrc	r25, 3
    2afc:	85 91       	lpm	r24, Z+
    2afe:	93 ff       	sbrs	r25, 3
    2b00:	81 91       	ld	r24, Z+
    2b02:	6f 01       	movw	r12, r30
    2b04:	85 32       	cpi	r24, 0x25	; 37
    2b06:	29 f4       	brne	.+10     	; 0x2b12 <vfprintf+0x56>
    2b08:	b7 01       	movw	r22, r14
    2b0a:	90 e0       	ldi	r25, 0x00	; 0
    2b0c:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <fputc>
    2b10:	e7 cf       	rjmp	.-50     	; 0x2ae0 <vfprintf+0x24>
    2b12:	51 2c       	mov	r5, r1
    2b14:	31 2c       	mov	r3, r1
    2b16:	20 e0       	ldi	r18, 0x00	; 0
    2b18:	20 32       	cpi	r18, 0x20	; 32
    2b1a:	a0 f4       	brcc	.+40     	; 0x2b44 <vfprintf+0x88>
    2b1c:	8b 32       	cpi	r24, 0x2B	; 43
    2b1e:	69 f0       	breq	.+26     	; 0x2b3a <vfprintf+0x7e>
    2b20:	30 f4       	brcc	.+12     	; 0x2b2e <vfprintf+0x72>
    2b22:	80 32       	cpi	r24, 0x20	; 32
    2b24:	59 f0       	breq	.+22     	; 0x2b3c <vfprintf+0x80>
    2b26:	83 32       	cpi	r24, 0x23	; 35
    2b28:	69 f4       	brne	.+26     	; 0x2b44 <vfprintf+0x88>
    2b2a:	20 61       	ori	r18, 0x10	; 16
    2b2c:	2c c0       	rjmp	.+88     	; 0x2b86 <vfprintf+0xca>
    2b2e:	8d 32       	cpi	r24, 0x2D	; 45
    2b30:	39 f0       	breq	.+14     	; 0x2b40 <vfprintf+0x84>
    2b32:	80 33       	cpi	r24, 0x30	; 48
    2b34:	39 f4       	brne	.+14     	; 0x2b44 <vfprintf+0x88>
    2b36:	21 60       	ori	r18, 0x01	; 1
    2b38:	26 c0       	rjmp	.+76     	; 0x2b86 <vfprintf+0xca>
    2b3a:	22 60       	ori	r18, 0x02	; 2
    2b3c:	24 60       	ori	r18, 0x04	; 4
    2b3e:	23 c0       	rjmp	.+70     	; 0x2b86 <vfprintf+0xca>
    2b40:	28 60       	ori	r18, 0x08	; 8
    2b42:	21 c0       	rjmp	.+66     	; 0x2b86 <vfprintf+0xca>
    2b44:	27 fd       	sbrc	r18, 7
    2b46:	27 c0       	rjmp	.+78     	; 0x2b96 <vfprintf+0xda>
    2b48:	30 ed       	ldi	r19, 0xD0	; 208
    2b4a:	38 0f       	add	r19, r24
    2b4c:	3a 30       	cpi	r19, 0x0A	; 10
    2b4e:	78 f4       	brcc	.+30     	; 0x2b6e <vfprintf+0xb2>
    2b50:	26 ff       	sbrs	r18, 6
    2b52:	06 c0       	rjmp	.+12     	; 0x2b60 <vfprintf+0xa4>
    2b54:	fa e0       	ldi	r31, 0x0A	; 10
    2b56:	5f 9e       	mul	r5, r31
    2b58:	30 0d       	add	r19, r0
    2b5a:	11 24       	eor	r1, r1
    2b5c:	53 2e       	mov	r5, r19
    2b5e:	13 c0       	rjmp	.+38     	; 0x2b86 <vfprintf+0xca>
    2b60:	8a e0       	ldi	r24, 0x0A	; 10
    2b62:	38 9e       	mul	r3, r24
    2b64:	30 0d       	add	r19, r0
    2b66:	11 24       	eor	r1, r1
    2b68:	33 2e       	mov	r3, r19
    2b6a:	20 62       	ori	r18, 0x20	; 32
    2b6c:	0c c0       	rjmp	.+24     	; 0x2b86 <vfprintf+0xca>
    2b6e:	8e 32       	cpi	r24, 0x2E	; 46
    2b70:	21 f4       	brne	.+8      	; 0x2b7a <vfprintf+0xbe>
    2b72:	26 fd       	sbrc	r18, 6
    2b74:	6b c1       	rjmp	.+726    	; 0x2e4c <vfprintf+0x390>
    2b76:	20 64       	ori	r18, 0x40	; 64
    2b78:	06 c0       	rjmp	.+12     	; 0x2b86 <vfprintf+0xca>
    2b7a:	8c 36       	cpi	r24, 0x6C	; 108
    2b7c:	11 f4       	brne	.+4      	; 0x2b82 <vfprintf+0xc6>
    2b7e:	20 68       	ori	r18, 0x80	; 128
    2b80:	02 c0       	rjmp	.+4      	; 0x2b86 <vfprintf+0xca>
    2b82:	88 36       	cpi	r24, 0x68	; 104
    2b84:	41 f4       	brne	.+16     	; 0x2b96 <vfprintf+0xda>
    2b86:	f6 01       	movw	r30, r12
    2b88:	93 fd       	sbrc	r25, 3
    2b8a:	85 91       	lpm	r24, Z+
    2b8c:	93 ff       	sbrs	r25, 3
    2b8e:	81 91       	ld	r24, Z+
    2b90:	6f 01       	movw	r12, r30
    2b92:	81 11       	cpse	r24, r1
    2b94:	c1 cf       	rjmp	.-126    	; 0x2b18 <vfprintf+0x5c>
    2b96:	98 2f       	mov	r25, r24
    2b98:	9f 7d       	andi	r25, 0xDF	; 223
    2b9a:	95 54       	subi	r25, 0x45	; 69
    2b9c:	93 30       	cpi	r25, 0x03	; 3
    2b9e:	28 f4       	brcc	.+10     	; 0x2baa <vfprintf+0xee>
    2ba0:	0c 5f       	subi	r16, 0xFC	; 252
    2ba2:	1f 4f       	sbci	r17, 0xFF	; 255
    2ba4:	ff e3       	ldi	r31, 0x3F	; 63
    2ba6:	f9 83       	std	Y+1, r31	; 0x01
    2ba8:	0d c0       	rjmp	.+26     	; 0x2bc4 <vfprintf+0x108>
    2baa:	83 36       	cpi	r24, 0x63	; 99
    2bac:	31 f0       	breq	.+12     	; 0x2bba <vfprintf+0xfe>
    2bae:	83 37       	cpi	r24, 0x73	; 115
    2bb0:	71 f0       	breq	.+28     	; 0x2bce <vfprintf+0x112>
    2bb2:	83 35       	cpi	r24, 0x53	; 83
    2bb4:	09 f0       	breq	.+2      	; 0x2bb8 <vfprintf+0xfc>
    2bb6:	5b c0       	rjmp	.+182    	; 0x2c6e <vfprintf+0x1b2>
    2bb8:	22 c0       	rjmp	.+68     	; 0x2bfe <vfprintf+0x142>
    2bba:	f8 01       	movw	r30, r16
    2bbc:	80 81       	ld	r24, Z
    2bbe:	89 83       	std	Y+1, r24	; 0x01
    2bc0:	0e 5f       	subi	r16, 0xFE	; 254
    2bc2:	1f 4f       	sbci	r17, 0xFF	; 255
    2bc4:	44 24       	eor	r4, r4
    2bc6:	43 94       	inc	r4
    2bc8:	51 2c       	mov	r5, r1
    2bca:	54 01       	movw	r10, r8
    2bcc:	15 c0       	rjmp	.+42     	; 0x2bf8 <vfprintf+0x13c>
    2bce:	38 01       	movw	r6, r16
    2bd0:	f2 e0       	ldi	r31, 0x02	; 2
    2bd2:	6f 0e       	add	r6, r31
    2bd4:	71 1c       	adc	r7, r1
    2bd6:	f8 01       	movw	r30, r16
    2bd8:	a0 80       	ld	r10, Z
    2bda:	b1 80       	ldd	r11, Z+1	; 0x01
    2bdc:	26 ff       	sbrs	r18, 6
    2bde:	03 c0       	rjmp	.+6      	; 0x2be6 <vfprintf+0x12a>
    2be0:	65 2d       	mov	r22, r5
    2be2:	70 e0       	ldi	r23, 0x00	; 0
    2be4:	02 c0       	rjmp	.+4      	; 0x2bea <vfprintf+0x12e>
    2be6:	6f ef       	ldi	r22, 0xFF	; 255
    2be8:	7f ef       	ldi	r23, 0xFF	; 255
    2bea:	c5 01       	movw	r24, r10
    2bec:	2c 87       	std	Y+12, r18	; 0x0c
    2bee:	0e 94 5e 17 	call	0x2ebc	; 0x2ebc <strnlen>
    2bf2:	2c 01       	movw	r4, r24
    2bf4:	83 01       	movw	r16, r6
    2bf6:	2c 85       	ldd	r18, Y+12	; 0x0c
    2bf8:	2f 77       	andi	r18, 0x7F	; 127
    2bfa:	22 2e       	mov	r2, r18
    2bfc:	17 c0       	rjmp	.+46     	; 0x2c2c <vfprintf+0x170>
    2bfe:	38 01       	movw	r6, r16
    2c00:	f2 e0       	ldi	r31, 0x02	; 2
    2c02:	6f 0e       	add	r6, r31
    2c04:	71 1c       	adc	r7, r1
    2c06:	f8 01       	movw	r30, r16
    2c08:	a0 80       	ld	r10, Z
    2c0a:	b1 80       	ldd	r11, Z+1	; 0x01
    2c0c:	26 ff       	sbrs	r18, 6
    2c0e:	03 c0       	rjmp	.+6      	; 0x2c16 <vfprintf+0x15a>
    2c10:	65 2d       	mov	r22, r5
    2c12:	70 e0       	ldi	r23, 0x00	; 0
    2c14:	02 c0       	rjmp	.+4      	; 0x2c1a <vfprintf+0x15e>
    2c16:	6f ef       	ldi	r22, 0xFF	; 255
    2c18:	7f ef       	ldi	r23, 0xFF	; 255
    2c1a:	c5 01       	movw	r24, r10
    2c1c:	2c 87       	std	Y+12, r18	; 0x0c
    2c1e:	0e 94 4c 17 	call	0x2e98	; 0x2e98 <strnlen_P>
    2c22:	2c 01       	movw	r4, r24
    2c24:	2c 85       	ldd	r18, Y+12	; 0x0c
    2c26:	20 68       	ori	r18, 0x80	; 128
    2c28:	22 2e       	mov	r2, r18
    2c2a:	83 01       	movw	r16, r6
    2c2c:	23 fc       	sbrc	r2, 3
    2c2e:	1b c0       	rjmp	.+54     	; 0x2c66 <vfprintf+0x1aa>
    2c30:	83 2d       	mov	r24, r3
    2c32:	90 e0       	ldi	r25, 0x00	; 0
    2c34:	48 16       	cp	r4, r24
    2c36:	59 06       	cpc	r5, r25
    2c38:	b0 f4       	brcc	.+44     	; 0x2c66 <vfprintf+0x1aa>
    2c3a:	b7 01       	movw	r22, r14
    2c3c:	80 e2       	ldi	r24, 0x20	; 32
    2c3e:	90 e0       	ldi	r25, 0x00	; 0
    2c40:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <fputc>
    2c44:	3a 94       	dec	r3
    2c46:	f4 cf       	rjmp	.-24     	; 0x2c30 <vfprintf+0x174>
    2c48:	f5 01       	movw	r30, r10
    2c4a:	27 fc       	sbrc	r2, 7
    2c4c:	85 91       	lpm	r24, Z+
    2c4e:	27 fe       	sbrs	r2, 7
    2c50:	81 91       	ld	r24, Z+
    2c52:	5f 01       	movw	r10, r30
    2c54:	b7 01       	movw	r22, r14
    2c56:	90 e0       	ldi	r25, 0x00	; 0
    2c58:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <fputc>
    2c5c:	31 10       	cpse	r3, r1
    2c5e:	3a 94       	dec	r3
    2c60:	f1 e0       	ldi	r31, 0x01	; 1
    2c62:	4f 1a       	sub	r4, r31
    2c64:	51 08       	sbc	r5, r1
    2c66:	41 14       	cp	r4, r1
    2c68:	51 04       	cpc	r5, r1
    2c6a:	71 f7       	brne	.-36     	; 0x2c48 <vfprintf+0x18c>
    2c6c:	e5 c0       	rjmp	.+458    	; 0x2e38 <vfprintf+0x37c>
    2c6e:	84 36       	cpi	r24, 0x64	; 100
    2c70:	11 f0       	breq	.+4      	; 0x2c76 <vfprintf+0x1ba>
    2c72:	89 36       	cpi	r24, 0x69	; 105
    2c74:	39 f5       	brne	.+78     	; 0x2cc4 <vfprintf+0x208>
    2c76:	f8 01       	movw	r30, r16
    2c78:	27 ff       	sbrs	r18, 7
    2c7a:	07 c0       	rjmp	.+14     	; 0x2c8a <vfprintf+0x1ce>
    2c7c:	60 81       	ld	r22, Z
    2c7e:	71 81       	ldd	r23, Z+1	; 0x01
    2c80:	82 81       	ldd	r24, Z+2	; 0x02
    2c82:	93 81       	ldd	r25, Z+3	; 0x03
    2c84:	0c 5f       	subi	r16, 0xFC	; 252
    2c86:	1f 4f       	sbci	r17, 0xFF	; 255
    2c88:	08 c0       	rjmp	.+16     	; 0x2c9a <vfprintf+0x1de>
    2c8a:	60 81       	ld	r22, Z
    2c8c:	71 81       	ldd	r23, Z+1	; 0x01
    2c8e:	88 27       	eor	r24, r24
    2c90:	77 fd       	sbrc	r23, 7
    2c92:	80 95       	com	r24
    2c94:	98 2f       	mov	r25, r24
    2c96:	0e 5f       	subi	r16, 0xFE	; 254
    2c98:	1f 4f       	sbci	r17, 0xFF	; 255
    2c9a:	2f 76       	andi	r18, 0x6F	; 111
    2c9c:	b2 2e       	mov	r11, r18
    2c9e:	97 ff       	sbrs	r25, 7
    2ca0:	09 c0       	rjmp	.+18     	; 0x2cb4 <vfprintf+0x1f8>
    2ca2:	90 95       	com	r25
    2ca4:	80 95       	com	r24
    2ca6:	70 95       	com	r23
    2ca8:	61 95       	neg	r22
    2caa:	7f 4f       	sbci	r23, 0xFF	; 255
    2cac:	8f 4f       	sbci	r24, 0xFF	; 255
    2cae:	9f 4f       	sbci	r25, 0xFF	; 255
    2cb0:	20 68       	ori	r18, 0x80	; 128
    2cb2:	b2 2e       	mov	r11, r18
    2cb4:	2a e0       	ldi	r18, 0x0A	; 10
    2cb6:	30 e0       	ldi	r19, 0x00	; 0
    2cb8:	a4 01       	movw	r20, r8
    2cba:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <__ultoa_invert>
    2cbe:	a8 2e       	mov	r10, r24
    2cc0:	a8 18       	sub	r10, r8
    2cc2:	44 c0       	rjmp	.+136    	; 0x2d4c <vfprintf+0x290>
    2cc4:	85 37       	cpi	r24, 0x75	; 117
    2cc6:	29 f4       	brne	.+10     	; 0x2cd2 <vfprintf+0x216>
    2cc8:	2f 7e       	andi	r18, 0xEF	; 239
    2cca:	b2 2e       	mov	r11, r18
    2ccc:	2a e0       	ldi	r18, 0x0A	; 10
    2cce:	30 e0       	ldi	r19, 0x00	; 0
    2cd0:	25 c0       	rjmp	.+74     	; 0x2d1c <vfprintf+0x260>
    2cd2:	f2 2f       	mov	r31, r18
    2cd4:	f9 7f       	andi	r31, 0xF9	; 249
    2cd6:	bf 2e       	mov	r11, r31
    2cd8:	8f 36       	cpi	r24, 0x6F	; 111
    2cda:	c1 f0       	breq	.+48     	; 0x2d0c <vfprintf+0x250>
    2cdc:	18 f4       	brcc	.+6      	; 0x2ce4 <vfprintf+0x228>
    2cde:	88 35       	cpi	r24, 0x58	; 88
    2ce0:	79 f0       	breq	.+30     	; 0x2d00 <vfprintf+0x244>
    2ce2:	b4 c0       	rjmp	.+360    	; 0x2e4c <vfprintf+0x390>
    2ce4:	80 37       	cpi	r24, 0x70	; 112
    2ce6:	19 f0       	breq	.+6      	; 0x2cee <vfprintf+0x232>
    2ce8:	88 37       	cpi	r24, 0x78	; 120
    2cea:	21 f0       	breq	.+8      	; 0x2cf4 <vfprintf+0x238>
    2cec:	af c0       	rjmp	.+350    	; 0x2e4c <vfprintf+0x390>
    2cee:	2f 2f       	mov	r18, r31
    2cf0:	20 61       	ori	r18, 0x10	; 16
    2cf2:	b2 2e       	mov	r11, r18
    2cf4:	b4 fe       	sbrs	r11, 4
    2cf6:	0d c0       	rjmp	.+26     	; 0x2d12 <vfprintf+0x256>
    2cf8:	8b 2d       	mov	r24, r11
    2cfa:	84 60       	ori	r24, 0x04	; 4
    2cfc:	b8 2e       	mov	r11, r24
    2cfe:	09 c0       	rjmp	.+18     	; 0x2d12 <vfprintf+0x256>
    2d00:	24 ff       	sbrs	r18, 4
    2d02:	0a c0       	rjmp	.+20     	; 0x2d18 <vfprintf+0x25c>
    2d04:	9f 2f       	mov	r25, r31
    2d06:	96 60       	ori	r25, 0x06	; 6
    2d08:	b9 2e       	mov	r11, r25
    2d0a:	06 c0       	rjmp	.+12     	; 0x2d18 <vfprintf+0x25c>
    2d0c:	28 e0       	ldi	r18, 0x08	; 8
    2d0e:	30 e0       	ldi	r19, 0x00	; 0
    2d10:	05 c0       	rjmp	.+10     	; 0x2d1c <vfprintf+0x260>
    2d12:	20 e1       	ldi	r18, 0x10	; 16
    2d14:	30 e0       	ldi	r19, 0x00	; 0
    2d16:	02 c0       	rjmp	.+4      	; 0x2d1c <vfprintf+0x260>
    2d18:	20 e1       	ldi	r18, 0x10	; 16
    2d1a:	32 e0       	ldi	r19, 0x02	; 2
    2d1c:	f8 01       	movw	r30, r16
    2d1e:	b7 fe       	sbrs	r11, 7
    2d20:	07 c0       	rjmp	.+14     	; 0x2d30 <vfprintf+0x274>
    2d22:	60 81       	ld	r22, Z
    2d24:	71 81       	ldd	r23, Z+1	; 0x01
    2d26:	82 81       	ldd	r24, Z+2	; 0x02
    2d28:	93 81       	ldd	r25, Z+3	; 0x03
    2d2a:	0c 5f       	subi	r16, 0xFC	; 252
    2d2c:	1f 4f       	sbci	r17, 0xFF	; 255
    2d2e:	06 c0       	rjmp	.+12     	; 0x2d3c <vfprintf+0x280>
    2d30:	60 81       	ld	r22, Z
    2d32:	71 81       	ldd	r23, Z+1	; 0x01
    2d34:	80 e0       	ldi	r24, 0x00	; 0
    2d36:	90 e0       	ldi	r25, 0x00	; 0
    2d38:	0e 5f       	subi	r16, 0xFE	; 254
    2d3a:	1f 4f       	sbci	r17, 0xFF	; 255
    2d3c:	a4 01       	movw	r20, r8
    2d3e:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <__ultoa_invert>
    2d42:	a8 2e       	mov	r10, r24
    2d44:	a8 18       	sub	r10, r8
    2d46:	fb 2d       	mov	r31, r11
    2d48:	ff 77       	andi	r31, 0x7F	; 127
    2d4a:	bf 2e       	mov	r11, r31
    2d4c:	b6 fe       	sbrs	r11, 6
    2d4e:	0b c0       	rjmp	.+22     	; 0x2d66 <vfprintf+0x2aa>
    2d50:	2b 2d       	mov	r18, r11
    2d52:	2e 7f       	andi	r18, 0xFE	; 254
    2d54:	a5 14       	cp	r10, r5
    2d56:	50 f4       	brcc	.+20     	; 0x2d6c <vfprintf+0x2b0>
    2d58:	b4 fe       	sbrs	r11, 4
    2d5a:	0a c0       	rjmp	.+20     	; 0x2d70 <vfprintf+0x2b4>
    2d5c:	b2 fc       	sbrc	r11, 2
    2d5e:	08 c0       	rjmp	.+16     	; 0x2d70 <vfprintf+0x2b4>
    2d60:	2b 2d       	mov	r18, r11
    2d62:	2e 7e       	andi	r18, 0xEE	; 238
    2d64:	05 c0       	rjmp	.+10     	; 0x2d70 <vfprintf+0x2b4>
    2d66:	7a 2c       	mov	r7, r10
    2d68:	2b 2d       	mov	r18, r11
    2d6a:	03 c0       	rjmp	.+6      	; 0x2d72 <vfprintf+0x2b6>
    2d6c:	7a 2c       	mov	r7, r10
    2d6e:	01 c0       	rjmp	.+2      	; 0x2d72 <vfprintf+0x2b6>
    2d70:	75 2c       	mov	r7, r5
    2d72:	24 ff       	sbrs	r18, 4
    2d74:	0d c0       	rjmp	.+26     	; 0x2d90 <vfprintf+0x2d4>
    2d76:	fe 01       	movw	r30, r28
    2d78:	ea 0d       	add	r30, r10
    2d7a:	f1 1d       	adc	r31, r1
    2d7c:	80 81       	ld	r24, Z
    2d7e:	80 33       	cpi	r24, 0x30	; 48
    2d80:	11 f4       	brne	.+4      	; 0x2d86 <vfprintf+0x2ca>
    2d82:	29 7e       	andi	r18, 0xE9	; 233
    2d84:	09 c0       	rjmp	.+18     	; 0x2d98 <vfprintf+0x2dc>
    2d86:	22 ff       	sbrs	r18, 2
    2d88:	06 c0       	rjmp	.+12     	; 0x2d96 <vfprintf+0x2da>
    2d8a:	73 94       	inc	r7
    2d8c:	73 94       	inc	r7
    2d8e:	04 c0       	rjmp	.+8      	; 0x2d98 <vfprintf+0x2dc>
    2d90:	82 2f       	mov	r24, r18
    2d92:	86 78       	andi	r24, 0x86	; 134
    2d94:	09 f0       	breq	.+2      	; 0x2d98 <vfprintf+0x2dc>
    2d96:	73 94       	inc	r7
    2d98:	23 fd       	sbrc	r18, 3
    2d9a:	13 c0       	rjmp	.+38     	; 0x2dc2 <vfprintf+0x306>
    2d9c:	20 ff       	sbrs	r18, 0
    2d9e:	06 c0       	rjmp	.+12     	; 0x2dac <vfprintf+0x2f0>
    2da0:	5a 2c       	mov	r5, r10
    2da2:	73 14       	cp	r7, r3
    2da4:	18 f4       	brcc	.+6      	; 0x2dac <vfprintf+0x2f0>
    2da6:	53 0c       	add	r5, r3
    2da8:	57 18       	sub	r5, r7
    2daa:	73 2c       	mov	r7, r3
    2dac:	73 14       	cp	r7, r3
    2dae:	68 f4       	brcc	.+26     	; 0x2dca <vfprintf+0x30e>
    2db0:	b7 01       	movw	r22, r14
    2db2:	80 e2       	ldi	r24, 0x20	; 32
    2db4:	90 e0       	ldi	r25, 0x00	; 0
    2db6:	2c 87       	std	Y+12, r18	; 0x0c
    2db8:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <fputc>
    2dbc:	73 94       	inc	r7
    2dbe:	2c 85       	ldd	r18, Y+12	; 0x0c
    2dc0:	f5 cf       	rjmp	.-22     	; 0x2dac <vfprintf+0x2f0>
    2dc2:	73 14       	cp	r7, r3
    2dc4:	10 f4       	brcc	.+4      	; 0x2dca <vfprintf+0x30e>
    2dc6:	37 18       	sub	r3, r7
    2dc8:	01 c0       	rjmp	.+2      	; 0x2dcc <vfprintf+0x310>
    2dca:	31 2c       	mov	r3, r1
    2dcc:	24 ff       	sbrs	r18, 4
    2dce:	12 c0       	rjmp	.+36     	; 0x2df4 <vfprintf+0x338>
    2dd0:	b7 01       	movw	r22, r14
    2dd2:	80 e3       	ldi	r24, 0x30	; 48
    2dd4:	90 e0       	ldi	r25, 0x00	; 0
    2dd6:	2c 87       	std	Y+12, r18	; 0x0c
    2dd8:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <fputc>
    2ddc:	2c 85       	ldd	r18, Y+12	; 0x0c
    2dde:	22 ff       	sbrs	r18, 2
    2de0:	17 c0       	rjmp	.+46     	; 0x2e10 <vfprintf+0x354>
    2de2:	21 ff       	sbrs	r18, 1
    2de4:	03 c0       	rjmp	.+6      	; 0x2dec <vfprintf+0x330>
    2de6:	88 e5       	ldi	r24, 0x58	; 88
    2de8:	90 e0       	ldi	r25, 0x00	; 0
    2dea:	02 c0       	rjmp	.+4      	; 0x2df0 <vfprintf+0x334>
    2dec:	88 e7       	ldi	r24, 0x78	; 120
    2dee:	90 e0       	ldi	r25, 0x00	; 0
    2df0:	b7 01       	movw	r22, r14
    2df2:	0c c0       	rjmp	.+24     	; 0x2e0c <vfprintf+0x350>
    2df4:	82 2f       	mov	r24, r18
    2df6:	86 78       	andi	r24, 0x86	; 134
    2df8:	59 f0       	breq	.+22     	; 0x2e10 <vfprintf+0x354>
    2dfa:	21 fd       	sbrc	r18, 1
    2dfc:	02 c0       	rjmp	.+4      	; 0x2e02 <vfprintf+0x346>
    2dfe:	80 e2       	ldi	r24, 0x20	; 32
    2e00:	01 c0       	rjmp	.+2      	; 0x2e04 <vfprintf+0x348>
    2e02:	8b e2       	ldi	r24, 0x2B	; 43
    2e04:	27 fd       	sbrc	r18, 7
    2e06:	8d e2       	ldi	r24, 0x2D	; 45
    2e08:	b7 01       	movw	r22, r14
    2e0a:	90 e0       	ldi	r25, 0x00	; 0
    2e0c:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <fputc>
    2e10:	a5 14       	cp	r10, r5
    2e12:	38 f4       	brcc	.+14     	; 0x2e22 <vfprintf+0x366>
    2e14:	b7 01       	movw	r22, r14
    2e16:	80 e3       	ldi	r24, 0x30	; 48
    2e18:	90 e0       	ldi	r25, 0x00	; 0
    2e1a:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <fputc>
    2e1e:	5a 94       	dec	r5
    2e20:	f7 cf       	rjmp	.-18     	; 0x2e10 <vfprintf+0x354>
    2e22:	aa 94       	dec	r10
    2e24:	f4 01       	movw	r30, r8
    2e26:	ea 0d       	add	r30, r10
    2e28:	f1 1d       	adc	r31, r1
    2e2a:	80 81       	ld	r24, Z
    2e2c:	b7 01       	movw	r22, r14
    2e2e:	90 e0       	ldi	r25, 0x00	; 0
    2e30:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <fputc>
    2e34:	a1 10       	cpse	r10, r1
    2e36:	f5 cf       	rjmp	.-22     	; 0x2e22 <vfprintf+0x366>
    2e38:	33 20       	and	r3, r3
    2e3a:	09 f4       	brne	.+2      	; 0x2e3e <vfprintf+0x382>
    2e3c:	51 ce       	rjmp	.-862    	; 0x2ae0 <vfprintf+0x24>
    2e3e:	b7 01       	movw	r22, r14
    2e40:	80 e2       	ldi	r24, 0x20	; 32
    2e42:	90 e0       	ldi	r25, 0x00	; 0
    2e44:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <fputc>
    2e48:	3a 94       	dec	r3
    2e4a:	f6 cf       	rjmp	.-20     	; 0x2e38 <vfprintf+0x37c>
    2e4c:	f7 01       	movw	r30, r14
    2e4e:	86 81       	ldd	r24, Z+6	; 0x06
    2e50:	97 81       	ldd	r25, Z+7	; 0x07
    2e52:	02 c0       	rjmp	.+4      	; 0x2e58 <vfprintf+0x39c>
    2e54:	8f ef       	ldi	r24, 0xFF	; 255
    2e56:	9f ef       	ldi	r25, 0xFF	; 255
    2e58:	2c 96       	adiw	r28, 0x0c	; 12
    2e5a:	e2 e1       	ldi	r30, 0x12	; 18
    2e5c:	0c 94 15 18 	jmp	0x302a	; 0x302a <__epilogue_restores__>

00002e60 <calloc>:
    2e60:	0f 93       	push	r16
    2e62:	1f 93       	push	r17
    2e64:	cf 93       	push	r28
    2e66:	df 93       	push	r29
    2e68:	86 9f       	mul	r24, r22
    2e6a:	80 01       	movw	r16, r0
    2e6c:	87 9f       	mul	r24, r23
    2e6e:	10 0d       	add	r17, r0
    2e70:	96 9f       	mul	r25, r22
    2e72:	10 0d       	add	r17, r0
    2e74:	11 24       	eor	r1, r1
    2e76:	c8 01       	movw	r24, r16
    2e78:	0e 94 ab 13 	call	0x2756	; 0x2756 <malloc>
    2e7c:	ec 01       	movw	r28, r24
    2e7e:	00 97       	sbiw	r24, 0x00	; 0
    2e80:	29 f0       	breq	.+10     	; 0x2e8c <calloc+0x2c>
    2e82:	a8 01       	movw	r20, r16
    2e84:	60 e0       	ldi	r22, 0x00	; 0
    2e86:	70 e0       	ldi	r23, 0x00	; 0
    2e88:	0e 94 57 17 	call	0x2eae	; 0x2eae <memset>
    2e8c:	ce 01       	movw	r24, r28
    2e8e:	df 91       	pop	r29
    2e90:	cf 91       	pop	r28
    2e92:	1f 91       	pop	r17
    2e94:	0f 91       	pop	r16
    2e96:	08 95       	ret

00002e98 <strnlen_P>:
    2e98:	fc 01       	movw	r30, r24
    2e9a:	05 90       	lpm	r0, Z+
    2e9c:	61 50       	subi	r22, 0x01	; 1
    2e9e:	70 40       	sbci	r23, 0x00	; 0
    2ea0:	01 10       	cpse	r0, r1
    2ea2:	d8 f7       	brcc	.-10     	; 0x2e9a <strnlen_P+0x2>
    2ea4:	80 95       	com	r24
    2ea6:	90 95       	com	r25
    2ea8:	8e 0f       	add	r24, r30
    2eaa:	9f 1f       	adc	r25, r31
    2eac:	08 95       	ret

00002eae <memset>:
    2eae:	dc 01       	movw	r26, r24
    2eb0:	01 c0       	rjmp	.+2      	; 0x2eb4 <memset+0x6>
    2eb2:	6d 93       	st	X+, r22
    2eb4:	41 50       	subi	r20, 0x01	; 1
    2eb6:	50 40       	sbci	r21, 0x00	; 0
    2eb8:	e0 f7       	brcc	.-8      	; 0x2eb2 <memset+0x4>
    2eba:	08 95       	ret

00002ebc <strnlen>:
    2ebc:	fc 01       	movw	r30, r24
    2ebe:	61 50       	subi	r22, 0x01	; 1
    2ec0:	70 40       	sbci	r23, 0x00	; 0
    2ec2:	01 90       	ld	r0, Z+
    2ec4:	01 10       	cpse	r0, r1
    2ec6:	d8 f7       	brcc	.-10     	; 0x2ebe <strnlen+0x2>
    2ec8:	80 95       	com	r24
    2eca:	90 95       	com	r25
    2ecc:	8e 0f       	add	r24, r30
    2ece:	9f 1f       	adc	r25, r31
    2ed0:	08 95       	ret

00002ed2 <fputc>:
    2ed2:	0f 93       	push	r16
    2ed4:	1f 93       	push	r17
    2ed6:	cf 93       	push	r28
    2ed8:	df 93       	push	r29
    2eda:	18 2f       	mov	r17, r24
    2edc:	09 2f       	mov	r16, r25
    2ede:	eb 01       	movw	r28, r22
    2ee0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ee2:	81 fd       	sbrc	r24, 1
    2ee4:	03 c0       	rjmp	.+6      	; 0x2eec <fputc+0x1a>
    2ee6:	8f ef       	ldi	r24, 0xFF	; 255
    2ee8:	9f ef       	ldi	r25, 0xFF	; 255
    2eea:	20 c0       	rjmp	.+64     	; 0x2f2c <fputc+0x5a>
    2eec:	82 ff       	sbrs	r24, 2
    2eee:	10 c0       	rjmp	.+32     	; 0x2f10 <fputc+0x3e>
    2ef0:	4e 81       	ldd	r20, Y+6	; 0x06
    2ef2:	5f 81       	ldd	r21, Y+7	; 0x07
    2ef4:	2c 81       	ldd	r18, Y+4	; 0x04
    2ef6:	3d 81       	ldd	r19, Y+5	; 0x05
    2ef8:	42 17       	cp	r20, r18
    2efa:	53 07       	cpc	r21, r19
    2efc:	7c f4       	brge	.+30     	; 0x2f1c <fputc+0x4a>
    2efe:	e8 81       	ld	r30, Y
    2f00:	f9 81       	ldd	r31, Y+1	; 0x01
    2f02:	9f 01       	movw	r18, r30
    2f04:	2f 5f       	subi	r18, 0xFF	; 255
    2f06:	3f 4f       	sbci	r19, 0xFF	; 255
    2f08:	39 83       	std	Y+1, r19	; 0x01
    2f0a:	28 83       	st	Y, r18
    2f0c:	10 83       	st	Z, r17
    2f0e:	06 c0       	rjmp	.+12     	; 0x2f1c <fputc+0x4a>
    2f10:	e8 85       	ldd	r30, Y+8	; 0x08
    2f12:	f9 85       	ldd	r31, Y+9	; 0x09
    2f14:	81 2f       	mov	r24, r17
    2f16:	09 95       	icall
    2f18:	89 2b       	or	r24, r25
    2f1a:	29 f7       	brne	.-54     	; 0x2ee6 <fputc+0x14>
    2f1c:	2e 81       	ldd	r18, Y+6	; 0x06
    2f1e:	3f 81       	ldd	r19, Y+7	; 0x07
    2f20:	2f 5f       	subi	r18, 0xFF	; 255
    2f22:	3f 4f       	sbci	r19, 0xFF	; 255
    2f24:	3f 83       	std	Y+7, r19	; 0x07
    2f26:	2e 83       	std	Y+6, r18	; 0x06
    2f28:	81 2f       	mov	r24, r17
    2f2a:	90 2f       	mov	r25, r16
    2f2c:	df 91       	pop	r29
    2f2e:	cf 91       	pop	r28
    2f30:	1f 91       	pop	r17
    2f32:	0f 91       	pop	r16
    2f34:	08 95       	ret

00002f36 <__ultoa_invert>:
    2f36:	fa 01       	movw	r30, r20
    2f38:	aa 27       	eor	r26, r26
    2f3a:	28 30       	cpi	r18, 0x08	; 8
    2f3c:	51 f1       	breq	.+84     	; 0x2f92 <__ultoa_invert+0x5c>
    2f3e:	20 31       	cpi	r18, 0x10	; 16
    2f40:	81 f1       	breq	.+96     	; 0x2fa2 <__ultoa_invert+0x6c>
    2f42:	e8 94       	clt
    2f44:	6f 93       	push	r22
    2f46:	6e 7f       	andi	r22, 0xFE	; 254
    2f48:	6e 5f       	subi	r22, 0xFE	; 254
    2f4a:	7f 4f       	sbci	r23, 0xFF	; 255
    2f4c:	8f 4f       	sbci	r24, 0xFF	; 255
    2f4e:	9f 4f       	sbci	r25, 0xFF	; 255
    2f50:	af 4f       	sbci	r26, 0xFF	; 255
    2f52:	b1 e0       	ldi	r27, 0x01	; 1
    2f54:	3e d0       	rcall	.+124    	; 0x2fd2 <__ultoa_invert+0x9c>
    2f56:	b4 e0       	ldi	r27, 0x04	; 4
    2f58:	3c d0       	rcall	.+120    	; 0x2fd2 <__ultoa_invert+0x9c>
    2f5a:	67 0f       	add	r22, r23
    2f5c:	78 1f       	adc	r23, r24
    2f5e:	89 1f       	adc	r24, r25
    2f60:	9a 1f       	adc	r25, r26
    2f62:	a1 1d       	adc	r26, r1
    2f64:	68 0f       	add	r22, r24
    2f66:	79 1f       	adc	r23, r25
    2f68:	8a 1f       	adc	r24, r26
    2f6a:	91 1d       	adc	r25, r1
    2f6c:	a1 1d       	adc	r26, r1
    2f6e:	6a 0f       	add	r22, r26
    2f70:	71 1d       	adc	r23, r1
    2f72:	81 1d       	adc	r24, r1
    2f74:	91 1d       	adc	r25, r1
    2f76:	a1 1d       	adc	r26, r1
    2f78:	20 d0       	rcall	.+64     	; 0x2fba <__ultoa_invert+0x84>
    2f7a:	09 f4       	brne	.+2      	; 0x2f7e <__ultoa_invert+0x48>
    2f7c:	68 94       	set
    2f7e:	3f 91       	pop	r19
    2f80:	2a e0       	ldi	r18, 0x0A	; 10
    2f82:	26 9f       	mul	r18, r22
    2f84:	11 24       	eor	r1, r1
    2f86:	30 19       	sub	r19, r0
    2f88:	30 5d       	subi	r19, 0xD0	; 208
    2f8a:	31 93       	st	Z+, r19
    2f8c:	de f6       	brtc	.-74     	; 0x2f44 <__ultoa_invert+0xe>
    2f8e:	cf 01       	movw	r24, r30
    2f90:	08 95       	ret
    2f92:	46 2f       	mov	r20, r22
    2f94:	47 70       	andi	r20, 0x07	; 7
    2f96:	40 5d       	subi	r20, 0xD0	; 208
    2f98:	41 93       	st	Z+, r20
    2f9a:	b3 e0       	ldi	r27, 0x03	; 3
    2f9c:	0f d0       	rcall	.+30     	; 0x2fbc <__ultoa_invert+0x86>
    2f9e:	c9 f7       	brne	.-14     	; 0x2f92 <__ultoa_invert+0x5c>
    2fa0:	f6 cf       	rjmp	.-20     	; 0x2f8e <__ultoa_invert+0x58>
    2fa2:	46 2f       	mov	r20, r22
    2fa4:	4f 70       	andi	r20, 0x0F	; 15
    2fa6:	40 5d       	subi	r20, 0xD0	; 208
    2fa8:	4a 33       	cpi	r20, 0x3A	; 58
    2faa:	18 f0       	brcs	.+6      	; 0x2fb2 <__ultoa_invert+0x7c>
    2fac:	49 5d       	subi	r20, 0xD9	; 217
    2fae:	31 fd       	sbrc	r19, 1
    2fb0:	40 52       	subi	r20, 0x20	; 32
    2fb2:	41 93       	st	Z+, r20
    2fb4:	02 d0       	rcall	.+4      	; 0x2fba <__ultoa_invert+0x84>
    2fb6:	a9 f7       	brne	.-22     	; 0x2fa2 <__ultoa_invert+0x6c>
    2fb8:	ea cf       	rjmp	.-44     	; 0x2f8e <__ultoa_invert+0x58>
    2fba:	b4 e0       	ldi	r27, 0x04	; 4
    2fbc:	a6 95       	lsr	r26
    2fbe:	97 95       	ror	r25
    2fc0:	87 95       	ror	r24
    2fc2:	77 95       	ror	r23
    2fc4:	67 95       	ror	r22
    2fc6:	ba 95       	dec	r27
    2fc8:	c9 f7       	brne	.-14     	; 0x2fbc <__ultoa_invert+0x86>
    2fca:	00 97       	sbiw	r24, 0x00	; 0
    2fcc:	61 05       	cpc	r22, r1
    2fce:	71 05       	cpc	r23, r1
    2fd0:	08 95       	ret
    2fd2:	9b 01       	movw	r18, r22
    2fd4:	ac 01       	movw	r20, r24
    2fd6:	0a 2e       	mov	r0, r26
    2fd8:	06 94       	lsr	r0
    2fda:	57 95       	ror	r21
    2fdc:	47 95       	ror	r20
    2fde:	37 95       	ror	r19
    2fe0:	27 95       	ror	r18
    2fe2:	ba 95       	dec	r27
    2fe4:	c9 f7       	brne	.-14     	; 0x2fd8 <__ultoa_invert+0xa2>
    2fe6:	62 0f       	add	r22, r18
    2fe8:	73 1f       	adc	r23, r19
    2fea:	84 1f       	adc	r24, r20
    2fec:	95 1f       	adc	r25, r21
    2fee:	a0 1d       	adc	r26, r0
    2ff0:	08 95       	ret

00002ff2 <__prologue_saves__>:
    2ff2:	2f 92       	push	r2
    2ff4:	3f 92       	push	r3
    2ff6:	4f 92       	push	r4
    2ff8:	5f 92       	push	r5
    2ffa:	6f 92       	push	r6
    2ffc:	7f 92       	push	r7
    2ffe:	8f 92       	push	r8
    3000:	9f 92       	push	r9
    3002:	af 92       	push	r10
    3004:	bf 92       	push	r11
    3006:	cf 92       	push	r12
    3008:	df 92       	push	r13
    300a:	ef 92       	push	r14
    300c:	ff 92       	push	r15
    300e:	0f 93       	push	r16
    3010:	1f 93       	push	r17
    3012:	cf 93       	push	r28
    3014:	df 93       	push	r29
    3016:	cd b7       	in	r28, 0x3d	; 61
    3018:	de b7       	in	r29, 0x3e	; 62
    301a:	ca 1b       	sub	r28, r26
    301c:	db 0b       	sbc	r29, r27
    301e:	0f b6       	in	r0, 0x3f	; 63
    3020:	f8 94       	cli
    3022:	de bf       	out	0x3e, r29	; 62
    3024:	0f be       	out	0x3f, r0	; 63
    3026:	cd bf       	out	0x3d, r28	; 61
    3028:	09 94       	ijmp

0000302a <__epilogue_restores__>:
    302a:	2a 88       	ldd	r2, Y+18	; 0x12
    302c:	39 88       	ldd	r3, Y+17	; 0x11
    302e:	48 88       	ldd	r4, Y+16	; 0x10
    3030:	5f 84       	ldd	r5, Y+15	; 0x0f
    3032:	6e 84       	ldd	r6, Y+14	; 0x0e
    3034:	7d 84       	ldd	r7, Y+13	; 0x0d
    3036:	8c 84       	ldd	r8, Y+12	; 0x0c
    3038:	9b 84       	ldd	r9, Y+11	; 0x0b
    303a:	aa 84       	ldd	r10, Y+10	; 0x0a
    303c:	b9 84       	ldd	r11, Y+9	; 0x09
    303e:	c8 84       	ldd	r12, Y+8	; 0x08
    3040:	df 80       	ldd	r13, Y+7	; 0x07
    3042:	ee 80       	ldd	r14, Y+6	; 0x06
    3044:	fd 80       	ldd	r15, Y+5	; 0x05
    3046:	0c 81       	ldd	r16, Y+4	; 0x04
    3048:	1b 81       	ldd	r17, Y+3	; 0x03
    304a:	aa 81       	ldd	r26, Y+2	; 0x02
    304c:	b9 81       	ldd	r27, Y+1	; 0x01
    304e:	ce 0f       	add	r28, r30
    3050:	d1 1d       	adc	r29, r1
    3052:	0f b6       	in	r0, 0x3f	; 63
    3054:	f8 94       	cli
    3056:	de bf       	out	0x3e, r29	; 62
    3058:	0f be       	out	0x3f, r0	; 63
    305a:	cd bf       	out	0x3d, r28	; 61
    305c:	ed 01       	movw	r28, r26
    305e:	08 95       	ret

00003060 <_exit>:
    3060:	f8 94       	cli

00003062 <__stop_program>:
    3062:	ff cf       	rjmp	.-2      	; 0x3062 <__stop_program>
