
rs232.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b2  00800100  00001076  0000110a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001076  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004f  008001b2  008001b2  000011bc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011bc  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002e0  00000000  00000000  00001218  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002448  00000000  00000000  000014f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000fab  00000000  00000000  00003940  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d6d  00000000  00000000  000048eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000738  00000000  00000000  00005658  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007b0  00000000  00000000  00005d90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001316  00000000  00000000  00006540  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000278  00000000  00000000  00007856  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 21 03 	jmp	0x642	; 0x642 <__vector_1>
       8:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__vector_2>
       c:	0c 94 63 03 	jmp	0x6c6	; 0x6c6 <__vector_3>
      10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      34:	0c 94 d6 02 	jmp	0x5ac	; 0x5ac <__vector_13>
      38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      4c:	0c 94 a3 03 	jmp	0x746	; 0x746 <__vector_19>
      50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e6 e7       	ldi	r30, 0x76	; 118
      84:	f0 e1       	ldi	r31, 0x10	; 16
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a2 3b       	cpi	r26, 0xB2	; 178
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	22 e0       	ldi	r18, 0x02	; 2
      94:	a2 eb       	ldi	r26, 0xB2	; 178
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a1 30       	cpi	r26, 0x01	; 1
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <main>
      a6:	0c 94 39 08 	jmp	0x1072	; 0x1072 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_busy>:
      ae:	80 91 b2 01 	lds	r24, 0x01B2
      b2:	08 95       	ret

000000b4 <ADC_init>:
      b4:	8b b7       	in	r24, 0x3b	; 59
      b6:	80 64       	ori	r24, 0x40	; 64
      b8:	8b bf       	out	0x3b, r24	; 59
      ba:	85 b7       	in	r24, 0x35	; 53
      bc:	82 60       	ori	r24, 0x02	; 2
      be:	85 bf       	out	0x35, r24	; 53
      c0:	85 b7       	in	r24, 0x35	; 53
      c2:	8e 7f       	andi	r24, 0xFE	; 254
      c4:	85 bf       	out	0x35, r24	; 53
      c6:	78 94       	sei
      c8:	87 e0       	ldi	r24, 0x07	; 7
      ca:	91 e0       	ldi	r25, 0x01	; 1
      cc:	0e 94 3a 05 	call	0xa74	; 0xa74 <puts>
      d0:	08 95       	ret

000000d2 <ADC_read>:
      d2:	cf 93       	push	r28
      d4:	c8 2f       	mov	r28, r24
      d6:	8f ef       	ldi	r24, 0xFF	; 255
      d8:	8c 0f       	add	r24, r28
      da:	84 30       	cpi	r24, 0x04	; 4
      dc:	68 f0       	brcs	.+26     	; 0xf8 <ADC_read+0x26>
      de:	1f 92       	push	r1
      e0:	cf 93       	push	r28
      e2:	88 e1       	ldi	r24, 0x18	; 24
      e4:	91 e0       	ldi	r25, 0x01	; 1
      e6:	9f 93       	push	r25
      e8:	8f 93       	push	r24
      ea:	0e 94 26 05 	call	0xa4c	; 0xa4c <printf>
      ee:	0f 90       	pop	r0
      f0:	0f 90       	pop	r0
      f2:	0f 90       	pop	r0
      f4:	0f 90       	pop	r0
      f6:	0a c0       	rjmp	.+20     	; 0x10c <ADC_read+0x3a>
      f8:	81 e0       	ldi	r24, 0x01	; 1
      fa:	90 e0       	ldi	r25, 0x00	; 0
      fc:	0e 94 57 00 	call	0xae	; 0xae <ADC_busy>
     100:	83 e0       	ldi	r24, 0x03	; 3
     102:	8c 0f       	add	r24, r28
     104:	80 93 00 14 	sts	0x1400, r24
     108:	c0 93 06 01 	sts	0x0106, r28
     10c:	cf 91       	pop	r28
     10e:	08 95       	ret

00000110 <CAN_init>:
#define RXB0CTRL			0x60
 

void CAN_init()
{
		MCP2515_reset(); 
     110:	0e 94 44 02 	call	0x488	; 0x488 <MCP2515_reset>
		
		MCP2515_bit_modify(CANINTE, 0b00000011, 0b11111111); //skrur på RX buffer interrupt
     114:	4f ef       	ldi	r20, 0xFF	; 255
     116:	63 e0       	ldi	r22, 0x03	; 3
     118:	8b e2       	ldi	r24, 0x2B	; 43
     11a:	0e 94 2a 02 	call	0x454	; 0x454 <MCP2515_bit_modify>
		//MCP2515_bit_modify(TXB0CTRL, 0b00000011, 0b11111111); //setter prio til highest message priority
		MCP2515_bit_modify(RXB0CTRL, 0b01100100, 0b11111111); //skrur av filtrering av mottatte meldinger og setter paa rx0 til rx1 overflow
     11e:	4f ef       	ldi	r20, 0xFF	; 255
     120:	64 e6       	ldi	r22, 0x64	; 100
     122:	80 e6       	ldi	r24, 0x60	; 96
     124:	0e 94 2a 02 	call	0x454	; 0x454 <MCP2515_bit_modify>
		MCP2515_bit_modify(RXB1CTRL, 0b01100000, 0b11111111); // skrur av filtrering for rx1
     128:	4f ef       	ldi	r20, 0xFF	; 255
     12a:	60 e6       	ldi	r22, 0x60	; 96
     12c:	80 e7       	ldi	r24, 0x70	; 112
     12e:	0e 94 2a 02 	call	0x454	; 0x454 <MCP2515_bit_modify>
		//MCP2515_bit_modify(CANCTRL, 0b11100000, 0b01000000); //setter i loopback mode
		MCP2515_bit_modify(CANCTRL, 0b11100011, 0b00000011); //setter i normal mode
     132:	43 e0       	ldi	r20, 0x03	; 3
     134:	63 ee       	ldi	r22, 0xE3	; 227
     136:	8f e0       	ldi	r24, 0x0F	; 15
     138:	0e 94 2a 02 	call	0x454	; 0x454 <MCP2515_bit_modify>
		printf("CAN initialized \n");
     13c:	89 e3       	ldi	r24, 0x39	; 57
     13e:	91 e0       	ldi	r25, 0x01	; 1
     140:	0e 94 3a 05 	call	0xa74	; 0xa74 <puts>
     144:	08 95       	ret

00000146 <CAN_send>:
		
}


void CAN_send(union can_msg_t msg)
{
     146:	cf 92       	push	r12
     148:	df 92       	push	r13
     14a:	ef 92       	push	r14
     14c:	ff 92       	push	r15
     14e:	0f 93       	push	r16
     150:	1f 93       	push	r17
     152:	cf 93       	push	r28
     154:	df 93       	push	r29
     156:	cd b7       	in	r28, 0x3d	; 61
     158:	de b7       	in	r29, 0x3e	; 62
     15a:	2e 97       	sbiw	r28, 0x0e	; 14
     15c:	0f b6       	in	r0, 0x3f	; 63
     15e:	f8 94       	cli
     160:	de bf       	out	0x3e, r29	; 62
     162:	0f be       	out	0x3f, r0	; 63
     164:	cd bf       	out	0x3d, r28	; 61
     166:	ca 82       	std	Y+2, r12	; 0x02
     168:	db 82       	std	Y+3, r13	; 0x03
     16a:	ec 82       	std	Y+4, r14	; 0x04
     16c:	fd 82       	std	Y+5, r15	; 0x05
     16e:	0e 83       	std	Y+6, r16	; 0x06
     170:	1f 83       	std	Y+7, r17	; 0x07
     172:	28 87       	std	Y+8, r18	; 0x08
     174:	39 87       	std	Y+9, r19	; 0x09
     176:	4a 87       	std	Y+10, r20	; 0x0a
     178:	5b 87       	std	Y+11, r21	; 0x0b
     17a:	6c 87       	std	Y+12, r22	; 0x0c
     17c:	7d 87       	std	Y+13, r23	; 0x0d
     17e:	8e 87       	std	Y+14, r24	; 0x0e
     180:	ea 80       	ldd	r14, Y+2	; 0x02
     182:	fb 80       	ldd	r15, Y+3	; 0x03
	uint16_t temp = msg.package.id << 13;
	uint8_t ID_bits = temp >> 8;
	MCP2515_write(TXB0SIDL,ID_bits & 0xE0);
     184:	6e 2d       	mov	r22, r14
     186:	62 95       	swap	r22
     188:	66 0f       	add	r22, r22
     18a:	60 7e       	andi	r22, 0xE0	; 224
     18c:	82 e3       	ldi	r24, 0x32	; 50
     18e:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <MCP2515_write>
	volatile uint8_t lol = MCP2515_read(TXB0SIDL);
     192:	82 e3       	ldi	r24, 0x32	; 50
     194:	0e 94 48 01 	call	0x290	; 0x290 <MCP2515_read>
     198:	89 83       	std	Y+1, r24	; 0x01
	ID_bits = msg.package.id >> 3;
     19a:	b7 01       	movw	r22, r14
     19c:	76 95       	lsr	r23
     19e:	67 95       	ror	r22
     1a0:	76 95       	lsr	r23
     1a2:	67 95       	ror	r22
     1a4:	76 95       	lsr	r23
     1a6:	67 95       	ror	r22
	MCP2515_write(TXB0SIDH,ID_bits);
     1a8:	81 e3       	ldi	r24, 0x31	; 49
     1aa:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <MCP2515_write>
	lol = MCP2515_read(TXB0SIDH);
     1ae:	81 e3       	ldi	r24, 0x31	; 49
     1b0:	0e 94 48 01 	call	0x290	; 0x290 <MCP2515_read>
     1b4:	89 83       	std	Y+1, r24	; 0x01
	MCP2515_write(TXB0DLC,msg.package.dlc & 0x0F);
     1b6:	60 2f       	mov	r22, r16
     1b8:	6f 70       	andi	r22, 0x0F	; 15
     1ba:	85 e3       	ldi	r24, 0x35	; 53
     1bc:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <MCP2515_write>
	lol = MCP2515_read(TXB0DLC);
     1c0:	85 e3       	ldi	r24, 0x35	; 53
     1c2:	0e 94 48 01 	call	0x290	; 0x290 <MCP2515_read>
     1c6:	89 83       	std	Y+1, r24	; 0x01
	
	for(uint8_t i=0;i<msg.package.dlc;i++)
     1c8:	00 23       	and	r16, r16
     1ca:	79 f0       	breq	.+30     	; 0x1ea <CAN_send+0xa4>
     1cc:	7e 01       	movw	r14, r28
     1ce:	87 e0       	ldi	r24, 0x07	; 7
     1d0:	e8 0e       	add	r14, r24
     1d2:	f1 1c       	adc	r15, r1
     1d4:	0a 5c       	subi	r16, 0xCA	; 202
     1d6:	16 e3       	ldi	r17, 0x36	; 54
	{
		MCP2515_write(TXB0D0 + i, msg.package.data[i]);
     1d8:	f7 01       	movw	r30, r14
     1da:	61 91       	ld	r22, Z+
     1dc:	7f 01       	movw	r14, r30
     1de:	81 2f       	mov	r24, r17
     1e0:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <MCP2515_write>
     1e4:	1f 5f       	subi	r17, 0xFF	; 255
	MCP2515_write(TXB0SIDH,ID_bits);
	lol = MCP2515_read(TXB0SIDH);
	MCP2515_write(TXB0DLC,msg.package.dlc & 0x0F);
	lol = MCP2515_read(TXB0DLC);
	
	for(uint8_t i=0;i<msg.package.dlc;i++)
     1e6:	10 13       	cpse	r17, r16
     1e8:	f7 cf       	rjmp	.-18     	; 0x1d8 <CAN_send+0x92>
	{
		MCP2515_write(TXB0D0 + i, msg.package.data[i]);
	}
	lol = MCP2515_read(TXB0DLC);
     1ea:	85 e3       	ldi	r24, 0x35	; 53
     1ec:	0e 94 48 01 	call	0x290	; 0x290 <MCP2515_read>
     1f0:	89 83       	std	Y+1, r24	; 0x01
	MCP2515_RTS(0);	
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	0e 94 16 02 	call	0x42c	; 0x42c <MCP2515_RTS>
}
     1f8:	2e 96       	adiw	r28, 0x0e	; 14
     1fa:	0f b6       	in	r0, 0x3f	; 63
     1fc:	f8 94       	cli
     1fe:	de bf       	out	0x3e, r29	; 62
     200:	0f be       	out	0x3f, r0	; 63
     202:	cd bf       	out	0x3d, r28	; 61
     204:	df 91       	pop	r29
     206:	cf 91       	pop	r28
     208:	1f 91       	pop	r17
     20a:	0f 91       	pop	r16
     20c:	ff 90       	pop	r15
     20e:	ef 90       	pop	r14
     210:	df 90       	pop	r13
     212:	cf 90       	pop	r12
     214:	08 95       	ret

00000216 <CAN_receive>:

union can_msg_t CAN_receive()
{
     216:	1f 93       	push	r17
     218:	cf 93       	push	r28
     21a:	df 93       	push	r29
     21c:	ec 01       	movw	r28, r24
	uint8_t CANINTF_copy = MCP2515_read(CANINTF);
     21e:	8c e2       	ldi	r24, 0x2C	; 44
     220:	0e 94 48 01 	call	0x290	; 0x290 <MCP2515_read>
	uint8_t RX_num;
	if(test_bit(CANINTF_copy, RX0IF))
     224:	80 fd       	sbrc	r24, 0
     226:	0f c0       	rjmp	.+30     	; 0x246 <CAN_receive+0x30>
	{
		RX_num = 0;
	}else if(test_bit(CANINTF_copy, RX1IF))
     228:	81 fd       	sbrc	r24, 1
     22a:	0f c0       	rjmp	.+30     	; 0x24a <CAN_receive+0x34>
	{
		RX_num = 1;
	}else
	{
		printf("Error, INT2, ingen av int flaggene i CAN var satt :S, %x \n", CANINTF_copy);
     22c:	1f 92       	push	r1
     22e:	8f 93       	push	r24
     230:	8a e4       	ldi	r24, 0x4A	; 74
     232:	91 e0       	ldi	r25, 0x01	; 1
     234:	9f 93       	push	r25
     236:	8f 93       	push	r24
     238:	0e 94 26 05 	call	0xa4c	; 0xa4c <printf>
     23c:	0f 90       	pop	r0
     23e:	0f 90       	pop	r0
     240:	0f 90       	pop	r0
     242:	0f 90       	pop	r0
     244:	03 c0       	rjmp	.+6      	; 0x24c <CAN_receive+0x36>
{
	uint8_t CANINTF_copy = MCP2515_read(CANINTF);
	uint8_t RX_num;
	if(test_bit(CANINTF_copy, RX0IF))
	{
		RX_num = 0;
     246:	10 e0       	ldi	r17, 0x00	; 0
     248:	01 c0       	rjmp	.+2      	; 0x24c <CAN_receive+0x36>
	}else if(test_bit(CANINTF_copy, RX1IF))
	{
		RX_num = 1;
     24a:	11 e0       	ldi	r17, 0x01	; 1
	}else
	{
		printf("Error, INT2, ingen av int flaggene i CAN var satt :S, %x \n", CANINTF_copy);
	}
	
	return MCP2515_RX_read(RX_num);
     24c:	61 2f       	mov	r22, r17
     24e:	ce 01       	movw	r24, r28
     250:	0e 94 6f 01 	call	0x2de	; 0x2de <MCP2515_RX_read>
}
     254:	ce 01       	movw	r24, r28
     256:	df 91       	pop	r29
     258:	cf 91       	pop	r28
     25a:	1f 91       	pop	r17
     25c:	08 95       	ret

0000025e <joy_button_init>:
     25e:	8b b7       	in	r24, 0x3b	; 59
     260:	80 68       	ori	r24, 0x80	; 128
     262:	8b bf       	out	0x3b, r24	; 59
     264:	85 b7       	in	r24, 0x35	; 53
     266:	88 60       	ori	r24, 0x08	; 8
     268:	85 bf       	out	0x35, r24	; 53
     26a:	85 b7       	in	r24, 0x35	; 53
     26c:	8b 7f       	andi	r24, 0xFB	; 251
     26e:	85 bf       	out	0x35, r24	; 53
     270:	78 94       	sei
     272:	85 e8       	ldi	r24, 0x85	; 133
     274:	91 e0       	ldi	r25, 0x01	; 1
     276:	0e 94 3a 05 	call	0xa74	; 0xa74 <puts>
     27a:	08 95       	ret

0000027c <x_pos>:
     27c:	82 e0       	ldi	r24, 0x02	; 2
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	0e 94 69 00 	call	0xd2	; 0xd2 <ADC_read>
     284:	08 95       	ret

00000286 <y_pos>:
     286:	81 e0       	ldi	r24, 0x01	; 1
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	0e 94 69 00 	call	0xd2	; 0xd2 <ADC_read>
     28e:	08 95       	ret

00000290 <MCP2515_read>:
#include "MCP2515.h"
#include "SPI.h"
#include "CAN.h"

uint8_t MCP2515_read(uint8_t address)
{
     290:	cf 93       	push	r28
     292:	c8 2f       	mov	r28, r24
	SPI_CS_low();
     294:	0e 94 72 03 	call	0x6e4	; 0x6e4 <SPI_CS_low>
	SPI_data(0x03);
     298:	83 e0       	ldi	r24, 0x03	; 3
     29a:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
	SPI_data(address);
     29e:	8c 2f       	mov	r24, r28
     2a0:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
	uint8_t temp = SPI_data(address);
     2a4:	8c 2f       	mov	r24, r28
     2a6:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
     2aa:	c8 2f       	mov	r28, r24
	SPI_CS_high();
     2ac:	0e 94 74 03 	call	0x6e8	; 0x6e8 <SPI_CS_high>
	return temp;
}
     2b0:	8c 2f       	mov	r24, r28
     2b2:	cf 91       	pop	r28
     2b4:	08 95       	ret

000002b6 <MCP2515_write>:
	return mesg;
}
	

void MCP2515_write(uint8_t address, uint8_t data)
{
     2b6:	cf 93       	push	r28
     2b8:	df 93       	push	r29
     2ba:	d8 2f       	mov	r29, r24
     2bc:	c6 2f       	mov	r28, r22
	SPI_CS_low();
     2be:	0e 94 72 03 	call	0x6e4	; 0x6e4 <SPI_CS_low>
	SPI_data(0x02);
     2c2:	82 e0       	ldi	r24, 0x02	; 2
     2c4:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
	SPI_data(address);
     2c8:	8d 2f       	mov	r24, r29
     2ca:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
	SPI_data(data);
     2ce:	8c 2f       	mov	r24, r28
     2d0:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
	SPI_CS_high();
     2d4:	0e 94 74 03 	call	0x6e8	; 0x6e8 <SPI_CS_high>
}
     2d8:	df 91       	pop	r29
     2da:	cf 91       	pop	r28
     2dc:	08 95       	ret

000002de <MCP2515_RX_read>:
	SPI_CS_high();
	return msg;
}*/

union can_msg_t MCP2515_RX_read(uint8_t RX_num)
{
     2de:	ef 92       	push	r14
     2e0:	ff 92       	push	r15
     2e2:	0f 93       	push	r16
     2e4:	1f 93       	push	r17
     2e6:	cf 93       	push	r28
     2e8:	df 93       	push	r29
     2ea:	cd b7       	in	r28, 0x3d	; 61
     2ec:	de b7       	in	r29, 0x3e	; 62
     2ee:	6a 97       	sbiw	r28, 0x1a	; 26
     2f0:	0f b6       	in	r0, 0x3f	; 63
     2f2:	f8 94       	cli
     2f4:	de bf       	out	0x3e, r29	; 62
     2f6:	0f be       	out	0x3f, r0	; 63
     2f8:	cd bf       	out	0x3d, r28	; 61
     2fa:	7c 01       	movw	r14, r24
	volatile union can_msg_t mesg = {{0}};
     2fc:	8d e0       	ldi	r24, 0x0D	; 13
     2fe:	fe 01       	movw	r30, r28
     300:	31 96       	adiw	r30, 0x01	; 1
     302:	df 01       	movw	r26, r30
     304:	98 2f       	mov	r25, r24
     306:	1d 92       	st	X+, r1
     308:	9a 95       	dec	r25
     30a:	e9 f7       	brne	.-6      	; 0x306 <MCP2515_RX_read+0x28>
	volatile union can_msg_t mesg_tx = {{0}};	
     30c:	3d 96       	adiw	r30, 0x0d	; 13
     30e:	df 01       	movw	r26, r30
     310:	1d 92       	st	X+, r1
     312:	8a 95       	dec	r24
     314:	e9 f7       	brne	.-6      	; 0x310 <MCP2515_RX_read+0x32>
	//SPI_CS_low();
	if(RX_num == 0){
     316:	61 11       	cpse	r22, r1
     318:	5b c0       	rjmp	.+182    	; 0x3d0 <MCP2515_RX_read+0xf2>
		
		//READ RX BUFFER
		SPI_CS_low();
     31a:	0e 94 72 03 	call	0x6e4	; 0x6e4 <SPI_CS_low>
			SPI_data(0x03);
     31e:	83 e0       	ldi	r24, 0x03	; 3
     320:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
			SPI_data(0b01100001);
     324:	81 e6       	ldi	r24, 0x61	; 97
     326:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
			for(int i = 0; i < 13; i++){
     32a:	00 e0       	ldi	r16, 0x00	; 0
     32c:	10 e0       	ldi	r17, 0x00	; 0
				mesg.array[i] = SPI_data(0b01100001+i);
     32e:	81 e6       	ldi	r24, 0x61	; 97
     330:	80 0f       	add	r24, r16
     332:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
     336:	e1 e0       	ldi	r30, 0x01	; 1
     338:	f0 e0       	ldi	r31, 0x00	; 0
     33a:	ec 0f       	add	r30, r28
     33c:	fd 1f       	adc	r31, r29
     33e:	e0 0f       	add	r30, r16
     340:	f1 1f       	adc	r31, r17
     342:	80 83       	st	Z, r24
		
		//READ RX BUFFER
		SPI_CS_low();
			SPI_data(0x03);
			SPI_data(0b01100001);
			for(int i = 0; i < 13; i++){
     344:	0f 5f       	subi	r16, 0xFF	; 255
     346:	1f 4f       	sbci	r17, 0xFF	; 255
     348:	0d 30       	cpi	r16, 0x0D	; 13
     34a:	11 05       	cpc	r17, r1
     34c:	81 f7       	brne	.-32     	; 0x32e <MCP2515_RX_read+0x50>
				mesg.array[i] = SPI_data(0b01100001+i);
			}
		SPI_CS_high();
     34e:	0e 94 74 03 	call	0x6e8	; 0x6e8 <SPI_CS_high>
		
		
		mesg.package.id = ((mesg.array[0] << 8 ) | (mesg.array[1]))>> 5 & 0x7FF;
     352:	29 81       	ldd	r18, Y+1	; 0x01
     354:	8a 81       	ldd	r24, Y+2	; 0x02
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	92 2b       	or	r25, r18
     35a:	96 95       	lsr	r25
     35c:	87 95       	ror	r24
     35e:	92 95       	swap	r25
     360:	82 95       	swap	r24
     362:	8f 70       	andi	r24, 0x0F	; 15
     364:	89 27       	eor	r24, r25
     366:	9f 70       	andi	r25, 0x0F	; 15
     368:	89 27       	eor	r24, r25
     36a:	9a 83       	std	Y+2, r25	; 0x02
     36c:	89 83       	std	Y+1, r24	; 0x01
		mesg.package.dlc &= 0x0F;
     36e:	8d 81       	ldd	r24, Y+5	; 0x05
     370:	8f 70       	andi	r24, 0x0F	; 15
     372:	8d 83       	std	Y+5, r24	; 0x05
		
		//READ OLD TX BUFFER
		SPI_CS_low();
     374:	0e 94 72 03 	call	0x6e4	; 0x6e4 <SPI_CS_low>
			SPI_data(0x03);
     378:	83 e0       	ldi	r24, 0x03	; 3
     37a:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
			SPI_data(0b00110001);
     37e:	81 e3       	ldi	r24, 0x31	; 49
     380:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
			for(int i = 0; i < 13; i++){
     384:	00 e0       	ldi	r16, 0x00	; 0
     386:	10 e0       	ldi	r17, 0x00	; 0
				mesg_tx.array[i] = SPI_data(0x00);
     388:	80 e0       	ldi	r24, 0x00	; 0
     38a:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
     38e:	ee e0       	ldi	r30, 0x0E	; 14
     390:	f0 e0       	ldi	r31, 0x00	; 0
     392:	ec 0f       	add	r30, r28
     394:	fd 1f       	adc	r31, r29
     396:	e0 0f       	add	r30, r16
     398:	f1 1f       	adc	r31, r17
     39a:	80 83       	st	Z, r24
		
		//READ OLD TX BUFFER
		SPI_CS_low();
			SPI_data(0x03);
			SPI_data(0b00110001);
			for(int i = 0; i < 13; i++){
     39c:	0f 5f       	subi	r16, 0xFF	; 255
     39e:	1f 4f       	sbci	r17, 0xFF	; 255
     3a0:	0d 30       	cpi	r16, 0x0D	; 13
     3a2:	11 05       	cpc	r17, r1
     3a4:	89 f7       	brne	.-30     	; 0x388 <MCP2515_RX_read+0xaa>
				mesg_tx.array[i] = SPI_data(0x00);
			}
		SPI_CS_high();
     3a6:	0e 94 74 03 	call	0x6e8	; 0x6e8 <SPI_CS_high>
		
		MCP2515_write(0x2C, 0x00);
     3aa:	60 e0       	ldi	r22, 0x00	; 0
     3ac:	8c e2       	ldi	r24, 0x2C	; 44
     3ae:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <MCP2515_write>
		
		mesg_tx.package.id = ((mesg_tx.array[0] << 8) | (mesg_tx.array[1]))>> 5 & 0x7FF;
     3b2:	2e 85       	ldd	r18, Y+14	; 0x0e
     3b4:	8f 85       	ldd	r24, Y+15	; 0x0f
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	92 2b       	or	r25, r18
     3ba:	96 95       	lsr	r25
     3bc:	87 95       	ror	r24
     3be:	92 95       	swap	r25
     3c0:	82 95       	swap	r24
     3c2:	8f 70       	andi	r24, 0x0F	; 15
     3c4:	89 27       	eor	r24, r25
     3c6:	9f 70       	andi	r25, 0x0F	; 15
     3c8:	89 27       	eor	r24, r25
     3ca:	9f 87       	std	Y+15, r25	; 0x0f
     3cc:	8e 87       	std	Y+14, r24	; 0x0e
     3ce:	18 c0       	rjmp	.+48     	; 0x400 <MCP2515_RX_read+0x122>
		//mesg_tx.package.dlc &= 0x0F;
		
	}
	else if(RX_num == 1){
     3d0:	61 30       	cpi	r22, 0x01	; 1
     3d2:	b1 f4       	brne	.+44     	; 0x400 <MCP2515_RX_read+0x122>
		mesg.package.id = ((MCP2515_read(0b01110001) << 8 )|  (MCP2515_read(0b01110010)) >> 5)& 0x7FF;
     3d4:	81 e7       	ldi	r24, 0x71	; 113
     3d6:	0e 94 48 01 	call	0x290	; 0x290 <MCP2515_read>
     3da:	18 2f       	mov	r17, r24
     3dc:	82 e7       	ldi	r24, 0x72	; 114
     3de:	0e 94 48 01 	call	0x290	; 0x290 <MCP2515_read>
     3e2:	82 95       	swap	r24
     3e4:	86 95       	lsr	r24
     3e6:	87 70       	andi	r24, 0x07	; 7
     3e8:	28 2f       	mov	r18, r24
     3ea:	30 e0       	ldi	r19, 0x00	; 0
     3ec:	c9 01       	movw	r24, r18
     3ee:	91 2b       	or	r25, r17
     3f0:	97 70       	andi	r25, 0x07	; 7
     3f2:	9a 83       	std	Y+2, r25	; 0x02
     3f4:	89 83       	std	Y+1, r24	; 0x01
		mesg.package.dlc = MCP2515_read(0x75) & 0x0F;
     3f6:	85 e7       	ldi	r24, 0x75	; 117
     3f8:	0e 94 48 01 	call	0x290	; 0x290 <MCP2515_read>
     3fc:	8f 70       	andi	r24, 0x0F	; 15
     3fe:	8d 83       	std	Y+5, r24	; 0x05
	}
	
	
	//SPI_CS_high();
	return mesg;
     400:	8d e0       	ldi	r24, 0x0D	; 13
     402:	fe 01       	movw	r30, r28
     404:	31 96       	adiw	r30, 0x01	; 1
     406:	d7 01       	movw	r26, r14
     408:	01 90       	ld	r0, Z+
     40a:	0d 92       	st	X+, r0
     40c:	8a 95       	dec	r24
     40e:	e1 f7       	brne	.-8      	; 0x408 <MCP2515_RX_read+0x12a>
}
     410:	c7 01       	movw	r24, r14
     412:	6a 96       	adiw	r28, 0x1a	; 26
     414:	0f b6       	in	r0, 0x3f	; 63
     416:	f8 94       	cli
     418:	de bf       	out	0x3e, r29	; 62
     41a:	0f be       	out	0x3f, r0	; 63
     41c:	cd bf       	out	0x3d, r28	; 61
     41e:	df 91       	pop	r29
     420:	cf 91       	pop	r28
     422:	1f 91       	pop	r17
     424:	0f 91       	pop	r16
     426:	ff 90       	pop	r15
     428:	ef 90       	pop	r14
     42a:	08 95       	ret

0000042c <MCP2515_RTS>:
	SPI_data(address);
	SPI_data(data);
	SPI_CS_high();
}
void MCP2515_RTS(uint8_t register_number)  //request to send
{
     42c:	cf 93       	push	r28
     42e:	df 93       	push	r29
	register_number = 0b10000000 + (1<<register_number);
     430:	c1 e0       	ldi	r28, 0x01	; 1
     432:	d0 e0       	ldi	r29, 0x00	; 0
     434:	02 c0       	rjmp	.+4      	; 0x43a <MCP2515_RTS+0xe>
     436:	cc 0f       	add	r28, r28
     438:	dd 1f       	adc	r29, r29
     43a:	8a 95       	dec	r24
     43c:	e2 f7       	brpl	.-8      	; 0x436 <MCP2515_RTS+0xa>
	SPI_CS_low();
     43e:	0e 94 72 03 	call	0x6e4	; 0x6e4 <SPI_CS_low>
	SPI_data(register_number);
     442:	8c 2f       	mov	r24, r28
     444:	80 58       	subi	r24, 0x80	; 128
     446:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
	SPI_CS_high();
     44a:	0e 94 74 03 	call	0x6e8	; 0x6e8 <SPI_CS_high>
}
     44e:	df 91       	pop	r29
     450:	cf 91       	pop	r28
     452:	08 95       	ret

00000454 <MCP2515_bit_modify>:
	SPI_CS_high();
	return temp;
}

void MCP2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data)
{
     454:	1f 93       	push	r17
     456:	cf 93       	push	r28
     458:	df 93       	push	r29
     45a:	18 2f       	mov	r17, r24
     45c:	d6 2f       	mov	r29, r22
     45e:	c4 2f       	mov	r28, r20
	SPI_CS_low();
     460:	0e 94 72 03 	call	0x6e4	; 0x6e4 <SPI_CS_low>
	SPI_data(0x05);
     464:	85 e0       	ldi	r24, 0x05	; 5
     466:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
	SPI_data(address);
     46a:	81 2f       	mov	r24, r17
     46c:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
	SPI_data(mask);
     470:	8d 2f       	mov	r24, r29
     472:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
	SPI_data(data);
     476:	8c 2f       	mov	r24, r28
     478:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
	SPI_CS_high();
     47c:	0e 94 74 03 	call	0x6e8	; 0x6e8 <SPI_CS_high>
}
     480:	df 91       	pop	r29
     482:	cf 91       	pop	r28
     484:	1f 91       	pop	r17
     486:	08 95       	ret

00000488 <MCP2515_reset>:

void MCP2515_reset()
{
	SPI_CS_low();
     488:	0e 94 72 03 	call	0x6e4	; 0x6e4 <SPI_CS_low>
	SPI_data(0b11000000);
     48c:	80 ec       	ldi	r24, 0xC0	; 192
     48e:	0e 94 82 03 	call	0x704	; 0x704 <SPI_data>
	SPI_CS_high();
     492:	0e 94 74 03 	call	0x6e8	; 0x6e8 <SPI_CS_high>
     496:	08 95       	ret

00000498 <menu_init>:
uint8_t start = 0;
uint8_t stop = 7;

void menu_init()
{
	TCCR1B |= (1 << WGM12); // Configure timer 1 for CTC mode
     498:	8e b5       	in	r24, 0x2e	; 46
     49a:	88 60       	ori	r24, 0x08	; 8
     49c:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1 << OCIE1A); // Enable CTC interrupt
     49e:	89 b7       	in	r24, 0x39	; 57
     4a0:	80 64       	ori	r24, 0x40	; 64
     4a2:	89 bf       	out	0x39, r24	; 57
	OCR1A = 1000 ; // Set CTC compare value to 1Hz at 1MHz AVR clock, with a prescaler of 64
     4a4:	88 ee       	ldi	r24, 0xE8	; 232
     4a6:	93 e0       	ldi	r25, 0x03	; 3
     4a8:	9b bd       	out	0x2b, r25	; 43
     4aa:	8a bd       	out	0x2a, r24	; 42
	TCCR1B |= ((1 << CS10) | (1 << CS11)); // Start timer at Fcpu/64
     4ac:	8e b5       	in	r24, 0x2e	; 46
     4ae:	83 60       	ori	r24, 0x03	; 3
     4b0:	8e bd       	out	0x2e, r24	; 46
     4b2:	08 95       	ret

000004b4 <main>:
volatile uint8_t button_pressed = 0;
volatile union can_msg_t message;
volatile uint8_t CAN_data_waiting = 0;
volatile uint8_t CAN_send_ready = 0;
int main(void)
{
     4b4:	cf 93       	push	r28
     4b6:	df 93       	push	r29
     4b8:	cd b7       	in	r28, 0x3d	; 61
     4ba:	de b7       	in	r29, 0x3e	; 62
     4bc:	2d 97       	sbiw	r28, 0x0d	; 13
     4be:	0f b6       	in	r0, 0x3f	; 63
     4c0:	f8 94       	cli
     4c2:	de bf       	out	0x3e, r29	; 62
     4c4:	0f be       	out	0x3f, r0	; 63
     4c6:	cd bf       	out	0x3d, r28	; 61
	set_bit(DDRB,DDB0);
     4c8:	b8 9a       	sbi	0x17, 0	; 23
	clear_bit(DDRB,DDB2);
     4ca:	ba 98       	cbi	0x17, 2	; 23
	SPI_master_init();
     4cc:	0e 94 76 03 	call	0x6ec	; 0x6ec <SPI_master_init>
	//SPI_transmit(0xAA);
	USART_Init(MYUBRR);
     4d0:	8f e1       	ldi	r24, 0x1F	; 31
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	0e 94 92 03 	call	0x724	; 0x724 <USART_Init>
	Enable_UAR0_Interrupt();
     4d8:	0e 94 a1 03 	call	0x742	; 0x742 <Enable_UAR0_Interrupt>
	SRAM_init();
     4dc:	0e 94 87 03 	call	0x70e	; 0x70e <SRAM_init>
	ADC_init();
     4e0:	0e 94 5a 00 	call	0xb4	; 0xb4 <ADC_init>
	menu_init();
     4e4:	0e 94 4c 02 	call	0x498	; 0x498 <menu_init>
	joy_button_init();
     4e8:	0e 94 2f 01 	call	0x25e	; 0x25e <joy_button_init>
	CAN_init();
     4ec:	0e 94 88 00 	call	0x110	; 0x110 <CAN_init>
	

	
	
	message.package.id = 0x001;
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	90 e0       	ldi	r25, 0x00	; 0
     4f4:	90 93 b8 01 	sts	0x01B8, r25
     4f8:	80 93 b7 01 	sts	0x01B7, r24
	message.package.dlc = 4;
     4fc:	84 e0       	ldi	r24, 0x04	; 4
     4fe:	80 93 bb 01 	sts	0x01BB, r24
	message.package.eid = 0x0000;
     502:	10 92 ba 01 	sts	0x01BA, r1
     506:	10 92 b9 01 	sts	0x01B9, r1
		//_delay_ms(1000);
		if(CAN_data_waiting ==1)
		{
			CAN_data_waiting = 0;
			union can_msg_t temp = CAN_receive();
			for(int i = 0; i<13;i++)
     50a:	81 2c       	mov	r8, r1
     50c:	91 2c       	mov	r9, r1
			{
				printf(" linje %i: %i \n",i,temp.array[i]);
     50e:	0f 2e       	mov	r0, r31
     510:	f2 ea       	ldi	r31, 0xA2	; 162
     512:	af 2e       	mov	r10, r31
     514:	f1 e0       	ldi	r31, 0x01	; 1
     516:	bf 2e       	mov	r11, r31
     518:	f0 2d       	mov	r31, r0
	while(1)
	{
		
		
		//_delay_ms(1000);
		if(CAN_data_waiting ==1)
     51a:	80 91 b4 01 	lds	r24, 0x01B4
     51e:	81 30       	cpi	r24, 0x01	; 1
     520:	11 f5       	brne	.+68     	; 0x566 <__stack+0x67>
		{
			CAN_data_waiting = 0;
     522:	10 92 b4 01 	sts	0x01B4, r1
			union can_msg_t temp = CAN_receive();
     526:	ce 01       	movw	r24, r28
     528:	01 96       	adiw	r24, 0x01	; 1
     52a:	0e 94 0b 01 	call	0x216	; 0x216 <CAN_receive>
     52e:	ce 01       	movw	r24, r28
     530:	01 96       	adiw	r24, 0x01	; 1
     532:	7c 01       	movw	r14, r24
			for(int i = 0; i<13;i++)
     534:	08 2d       	mov	r16, r8
     536:	19 2d       	mov	r17, r9
			{
				printf(" linje %i: %i \n",i,temp.array[i]);
     538:	f7 01       	movw	r30, r14
     53a:	81 91       	ld	r24, Z+
     53c:	7f 01       	movw	r14, r30
     53e:	1f 92       	push	r1
     540:	8f 93       	push	r24
     542:	1f 93       	push	r17
     544:	0f 93       	push	r16
     546:	bf 92       	push	r11
     548:	af 92       	push	r10
     54a:	0e 94 26 05 	call	0xa4c	; 0xa4c <printf>
		//_delay_ms(1000);
		if(CAN_data_waiting ==1)
		{
			CAN_data_waiting = 0;
			union can_msg_t temp = CAN_receive();
			for(int i = 0; i<13;i++)
     54e:	0f 5f       	subi	r16, 0xFF	; 255
     550:	1f 4f       	sbci	r17, 0xFF	; 255
     552:	0f 90       	pop	r0
     554:	0f 90       	pop	r0
     556:	0f 90       	pop	r0
     558:	0f 90       	pop	r0
     55a:	0f 90       	pop	r0
     55c:	0f 90       	pop	r0
     55e:	0d 30       	cpi	r16, 0x0D	; 13
     560:	11 05       	cpc	r17, r1
     562:	51 f7       	brne	.-44     	; 0x538 <__stack+0x39>
     564:	da cf       	rjmp	.-76     	; 0x51a <__stack+0x1b>
			{
				printf(" linje %i: %i \n",i,temp.array[i]);
			}
		}else if(CAN_send_ready == 1)
     566:	80 91 b3 01 	lds	r24, 0x01B3
     56a:	81 30       	cpi	r24, 0x01	; 1
     56c:	b1 f6       	brne	.-84     	; 0x51a <__stack+0x1b>
		{
			CAN_send(message);
     56e:	c0 90 b7 01 	lds	r12, 0x01B7
     572:	d0 90 b8 01 	lds	r13, 0x01B8
     576:	e0 90 b9 01 	lds	r14, 0x01B9
     57a:	f0 90 ba 01 	lds	r15, 0x01BA
     57e:	00 91 bb 01 	lds	r16, 0x01BB
     582:	10 91 bc 01 	lds	r17, 0x01BC
     586:	20 91 bd 01 	lds	r18, 0x01BD
     58a:	30 91 be 01 	lds	r19, 0x01BE
     58e:	40 91 bf 01 	lds	r20, 0x01BF
     592:	50 91 c0 01 	lds	r21, 0x01C0
     596:	60 91 c1 01 	lds	r22, 0x01C1
     59a:	70 91 c2 01 	lds	r23, 0x01C2
     59e:	80 91 c3 01 	lds	r24, 0x01C3
     5a2:	0e 94 a3 00 	call	0x146	; 0x146 <CAN_send>
			CAN_send_ready = 0;
     5a6:	10 92 b3 01 	sts	0x01B3, r1
     5aa:	b7 cf       	rjmp	.-146    	; 0x51a <__stack+0x1b>

000005ac <__vector_13>:
	}

}
/* timer interrupt ~50hz */
ISR(TIMER1_COMPA_vect)
{
     5ac:	1f 92       	push	r1
     5ae:	0f 92       	push	r0
     5b0:	0f b6       	in	r0, 0x3f	; 63
     5b2:	0f 92       	push	r0
     5b4:	11 24       	eor	r1, r1
     5b6:	2f 93       	push	r18
     5b8:	3f 93       	push	r19
     5ba:	4f 93       	push	r20
     5bc:	5f 93       	push	r21
     5be:	6f 93       	push	r22
     5c0:	7f 93       	push	r23
     5c2:	8f 93       	push	r24
     5c4:	9f 93       	push	r25
     5c6:	af 93       	push	r26
     5c8:	bf 93       	push	r27
     5ca:	ef 93       	push	r30
     5cc:	ff 93       	push	r31
	PORTB ^= 0x01; // Toggle the LED
     5ce:	98 b3       	in	r25, 0x18	; 24
     5d0:	81 e0       	ldi	r24, 0x01	; 1
     5d2:	89 27       	eor	r24, r25
     5d4:	88 bb       	out	0x18, r24	; 24
	
	if(ADC_busy() == 0)
     5d6:	0e 94 57 00 	call	0xae	; 0xae <ADC_busy>
     5da:	81 11       	cpse	r24, r1
     5dc:	21 c0       	rjmp	.+66     	; 0x620 <__vector_13+0x74>
	{
		if(toggler == 0)
     5de:	80 91 b6 01 	lds	r24, 0x01B6
     5e2:	81 11       	cpse	r24, r1
     5e4:	03 c0       	rjmp	.+6      	; 0x5ec <__vector_13+0x40>
		{
			y_pos();
     5e6:	0e 94 43 01 	call	0x286	; 0x286 <y_pos>
     5ea:	1a c0       	rjmp	.+52     	; 0x620 <__vector_13+0x74>
		}else if(toggler == 1)
     5ec:	80 91 b6 01 	lds	r24, 0x01B6
     5f0:	81 30       	cpi	r24, 0x01	; 1
     5f2:	19 f4       	brne	.+6      	; 0x5fa <__vector_13+0x4e>
		{
			x_pos();
     5f4:	0e 94 3e 01 	call	0x27c	; 0x27c <x_pos>
     5f8:	13 c0       	rjmp	.+38     	; 0x620 <__vector_13+0x74>
		}else
		{
			toggler = 0;
     5fa:	10 92 b6 01 	sts	0x01B6, r1
			message.package.data[2] = button_pressed;
     5fe:	80 91 b5 01 	lds	r24, 0x01B5
     602:	80 93 be 01 	sts	0x01BE, r24
			if(test_bit(PINB,PINB2) == 4)
     606:	b2 9b       	sbis	0x16, 2	; 22
     608:	04 c0       	rjmp	.+8      	; 0x612 <__vector_13+0x66>
			{
				message.package.data[3] = 1;
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	80 93 bf 01 	sts	0x01BF, r24
     610:	02 c0       	rjmp	.+4      	; 0x616 <__vector_13+0x6a>
			}else
			{
				message.package.data[3] = 0;
     612:	10 92 bf 01 	sts	0x01BF, r1
			}
			button_pressed = 0;
     616:	10 92 b5 01 	sts	0x01B5, r1
			CAN_send_ready = 1;	
     61a:	81 e0       	ldi	r24, 0x01	; 1
     61c:	80 93 b3 01 	sts	0x01B3, r24
		}
			
	}
	
}
     620:	ff 91       	pop	r31
     622:	ef 91       	pop	r30
     624:	bf 91       	pop	r27
     626:	af 91       	pop	r26
     628:	9f 91       	pop	r25
     62a:	8f 91       	pop	r24
     62c:	7f 91       	pop	r23
     62e:	6f 91       	pop	r22
     630:	5f 91       	pop	r21
     632:	4f 91       	pop	r20
     634:	3f 91       	pop	r19
     636:	2f 91       	pop	r18
     638:	0f 90       	pop	r0
     63a:	0f be       	out	0x3f, r0	; 63
     63c:	0f 90       	pop	r0
     63e:	1f 90       	pop	r1
     640:	18 95       	reti

00000642 <__vector_1>:
/* ADC interrupt */
ISR(INT0_vect){
     642:	1f 92       	push	r1
     644:	0f 92       	push	r0
     646:	0f b6       	in	r0, 0x3f	; 63
     648:	0f 92       	push	r0
     64a:	11 24       	eor	r1, r1
     64c:	2f 93       	push	r18
     64e:	3f 93       	push	r19
     650:	4f 93       	push	r20
     652:	5f 93       	push	r21
     654:	6f 93       	push	r22
     656:	7f 93       	push	r23
     658:	8f 93       	push	r24
     65a:	9f 93       	push	r25
     65c:	af 93       	push	r26
     65e:	bf 93       	push	r27
     660:	ef 93       	push	r30
     662:	ff 93       	push	r31
	volatile char *ext_adc = (char *) 0x1403;
	message.package.data[toggler] = ext_adc[0];
     664:	e0 91 b6 01 	lds	r30, 0x01B6
     668:	f0 e0       	ldi	r31, 0x00	; 0
     66a:	80 91 03 14 	lds	r24, 0x1403
     66e:	e9 54       	subi	r30, 0x49	; 73
     670:	fe 4f       	sbci	r31, 0xFE	; 254
     672:	85 83       	std	Z+5, r24	; 0x05
	toggler++;
     674:	80 91 b6 01 	lds	r24, 0x01B6
     678:	8f 5f       	subi	r24, 0xFF	; 255
     67a:	80 93 b6 01 	sts	0x01B6, r24
	ADC_busy(0);
     67e:	80 e0       	ldi	r24, 0x00	; 0
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	0e 94 57 00 	call	0xae	; 0xae <ADC_busy>
}
     686:	ff 91       	pop	r31
     688:	ef 91       	pop	r30
     68a:	bf 91       	pop	r27
     68c:	af 91       	pop	r26
     68e:	9f 91       	pop	r25
     690:	8f 91       	pop	r24
     692:	7f 91       	pop	r23
     694:	6f 91       	pop	r22
     696:	5f 91       	pop	r21
     698:	4f 91       	pop	r20
     69a:	3f 91       	pop	r19
     69c:	2f 91       	pop	r18
     69e:	0f 90       	pop	r0
     6a0:	0f be       	out	0x3f, r0	; 63
     6a2:	0f 90       	pop	r0
     6a4:	1f 90       	pop	r1
     6a6:	18 95       	reti

000006a8 <__vector_2>:
/* jOYSTICK BUTTON */
ISR(INT1_vect){
     6a8:	1f 92       	push	r1
     6aa:	0f 92       	push	r0
     6ac:	0f b6       	in	r0, 0x3f	; 63
     6ae:	0f 92       	push	r0
     6b0:	11 24       	eor	r1, r1
     6b2:	8f 93       	push	r24

	button_pressed = 1;
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	80 93 b5 01 	sts	0x01B5, r24
	
	return;
}
     6ba:	8f 91       	pop	r24
     6bc:	0f 90       	pop	r0
     6be:	0f be       	out	0x3f, r0	; 63
     6c0:	0f 90       	pop	r0
     6c2:	1f 90       	pop	r1
     6c4:	18 95       	reti

000006c6 <__vector_3>:

/* CAN INTERRUPT */
ISR(INT2_vect){
     6c6:	1f 92       	push	r1
     6c8:	0f 92       	push	r0
     6ca:	0f b6       	in	r0, 0x3f	; 63
     6cc:	0f 92       	push	r0
     6ce:	11 24       	eor	r1, r1
     6d0:	8f 93       	push	r24
	CAN_data_waiting = 1;
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	80 93 b4 01 	sts	0x01B4, r24

     6d8:	8f 91       	pop	r24
     6da:	0f 90       	pop	r0
     6dc:	0f be       	out	0x3f, r0	; 63
     6de:	0f 90       	pop	r0
     6e0:	1f 90       	pop	r1
     6e2:	18 95       	reti

000006e4 <SPI_CS_low>:
     6e4:	c4 98       	cbi	0x18, 4	; 24
     6e6:	08 95       	ret

000006e8 <SPI_CS_high>:
     6e8:	c4 9a       	sbi	0x18, 4	; 24
     6ea:	08 95       	ret

000006ec <SPI_master_init>:
     6ec:	8b b7       	in	r24, 0x3b	; 59
     6ee:	80 62       	ori	r24, 0x20	; 32
     6f0:	8b bf       	out	0x3b, r24	; 59
     6f2:	bc 9a       	sbi	0x17, 4	; 23
     6f4:	0e 94 74 03 	call	0x6e8	; 0x6e8 <SPI_CS_high>
     6f8:	bd 9a       	sbi	0x17, 5	; 23
     6fa:	bf 9a       	sbi	0x17, 7	; 23
     6fc:	6e 9a       	sbi	0x0d, 6	; 13
     6fe:	6c 9a       	sbi	0x0d, 4	; 13
     700:	68 9a       	sbi	0x0d, 0	; 13
     702:	08 95       	ret

00000704 <SPI_data>:
     704:	8f b9       	out	0x0f, r24	; 15
     706:	77 9b       	sbis	0x0e, 7	; 14
     708:	fe cf       	rjmp	.-4      	; 0x706 <SPI_data+0x2>
     70a:	8f b1       	in	r24, 0x0f	; 15
     70c:	08 95       	ret

0000070e <SRAM_init>:
     70e:	85 b7       	in	r24, 0x35	; 53
     710:	80 68       	ori	r24, 0x80	; 128
     712:	85 bf       	out	0x35, r24	; 53
     714:	08 95       	ret

00000716 <USART0_Receive>:
     716:	80 91 c4 01 	lds	r24, 0x01C4
     71a:	08 95       	ret

0000071c <USART0_Transmit>:
     71c:	5d 9b       	sbis	0x0b, 5	; 11
     71e:	fe cf       	rjmp	.-4      	; 0x71c <USART0_Transmit>
     720:	8c b9       	out	0x0c, r24	; 12
     722:	08 95       	ret

00000724 <USART_Init>:
     724:	90 bd       	out	0x20, r25	; 32
     726:	89 b9       	out	0x09, r24	; 9
     728:	88 e1       	ldi	r24, 0x18	; 24
     72a:	8a b9       	out	0x0a, r24	; 10
     72c:	86 e8       	ldi	r24, 0x86	; 134
     72e:	80 bd       	out	0x20, r24	; 32
     730:	40 e0       	ldi	r20, 0x00	; 0
     732:	50 e0       	ldi	r21, 0x00	; 0
     734:	6b e8       	ldi	r22, 0x8B	; 139
     736:	73 e0       	ldi	r23, 0x03	; 3
     738:	8e e8       	ldi	r24, 0x8E	; 142
     73a:	93 e0       	ldi	r25, 0x03	; 3
     73c:	0e 94 db 04 	call	0x9b6	; 0x9b6 <fdevopen>
     740:	08 95       	ret

00000742 <Enable_UAR0_Interrupt>:
     742:	57 9a       	sbi	0x0a, 7	; 10
     744:	08 95       	ret

00000746 <__vector_19>:
     746:	1f 92       	push	r1
     748:	0f 92       	push	r0
     74a:	0f b6       	in	r0, 0x3f	; 63
     74c:	0f 92       	push	r0
     74e:	11 24       	eor	r1, r1
     750:	8f 93       	push	r24
     752:	8c b1       	in	r24, 0x0c	; 12
     754:	8a 30       	cpi	r24, 0x0A	; 10
     756:	11 f0       	breq	.+4      	; 0x75c <__vector_19+0x16>
     758:	80 93 c4 01 	sts	0x01C4, r24
     75c:	8f 91       	pop	r24
     75e:	0f 90       	pop	r0
     760:	0f be       	out	0x3f, r0	; 63
     762:	0f 90       	pop	r0
     764:	1f 90       	pop	r1
     766:	18 95       	reti

00000768 <malloc>:
     768:	cf 93       	push	r28
     76a:	df 93       	push	r29
     76c:	82 30       	cpi	r24, 0x02	; 2
     76e:	91 05       	cpc	r25, r1
     770:	10 f4       	brcc	.+4      	; 0x776 <malloc+0xe>
     772:	82 e0       	ldi	r24, 0x02	; 2
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	e0 91 f9 01 	lds	r30, 0x01F9
     77a:	f0 91 fa 01 	lds	r31, 0x01FA
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	a0 e0       	ldi	r26, 0x00	; 0
     784:	b0 e0       	ldi	r27, 0x00	; 0
     786:	30 97       	sbiw	r30, 0x00	; 0
     788:	39 f1       	breq	.+78     	; 0x7d8 <malloc+0x70>
     78a:	40 81       	ld	r20, Z
     78c:	51 81       	ldd	r21, Z+1	; 0x01
     78e:	48 17       	cp	r20, r24
     790:	59 07       	cpc	r21, r25
     792:	b8 f0       	brcs	.+46     	; 0x7c2 <malloc+0x5a>
     794:	48 17       	cp	r20, r24
     796:	59 07       	cpc	r21, r25
     798:	71 f4       	brne	.+28     	; 0x7b6 <malloc+0x4e>
     79a:	82 81       	ldd	r24, Z+2	; 0x02
     79c:	93 81       	ldd	r25, Z+3	; 0x03
     79e:	10 97       	sbiw	r26, 0x00	; 0
     7a0:	29 f0       	breq	.+10     	; 0x7ac <malloc+0x44>
     7a2:	13 96       	adiw	r26, 0x03	; 3
     7a4:	9c 93       	st	X, r25
     7a6:	8e 93       	st	-X, r24
     7a8:	12 97       	sbiw	r26, 0x02	; 2
     7aa:	2c c0       	rjmp	.+88     	; 0x804 <malloc+0x9c>
     7ac:	90 93 fa 01 	sts	0x01FA, r25
     7b0:	80 93 f9 01 	sts	0x01F9, r24
     7b4:	27 c0       	rjmp	.+78     	; 0x804 <malloc+0x9c>
     7b6:	21 15       	cp	r18, r1
     7b8:	31 05       	cpc	r19, r1
     7ba:	31 f0       	breq	.+12     	; 0x7c8 <malloc+0x60>
     7bc:	42 17       	cp	r20, r18
     7be:	53 07       	cpc	r21, r19
     7c0:	18 f0       	brcs	.+6      	; 0x7c8 <malloc+0x60>
     7c2:	a9 01       	movw	r20, r18
     7c4:	db 01       	movw	r26, r22
     7c6:	01 c0       	rjmp	.+2      	; 0x7ca <malloc+0x62>
     7c8:	ef 01       	movw	r28, r30
     7ca:	9a 01       	movw	r18, r20
     7cc:	bd 01       	movw	r22, r26
     7ce:	df 01       	movw	r26, r30
     7d0:	02 80       	ldd	r0, Z+2	; 0x02
     7d2:	f3 81       	ldd	r31, Z+3	; 0x03
     7d4:	e0 2d       	mov	r30, r0
     7d6:	d7 cf       	rjmp	.-82     	; 0x786 <malloc+0x1e>
     7d8:	21 15       	cp	r18, r1
     7da:	31 05       	cpc	r19, r1
     7dc:	f9 f0       	breq	.+62     	; 0x81c <malloc+0xb4>
     7de:	28 1b       	sub	r18, r24
     7e0:	39 0b       	sbc	r19, r25
     7e2:	24 30       	cpi	r18, 0x04	; 4
     7e4:	31 05       	cpc	r19, r1
     7e6:	80 f4       	brcc	.+32     	; 0x808 <malloc+0xa0>
     7e8:	8a 81       	ldd	r24, Y+2	; 0x02
     7ea:	9b 81       	ldd	r25, Y+3	; 0x03
     7ec:	61 15       	cp	r22, r1
     7ee:	71 05       	cpc	r23, r1
     7f0:	21 f0       	breq	.+8      	; 0x7fa <malloc+0x92>
     7f2:	fb 01       	movw	r30, r22
     7f4:	93 83       	std	Z+3, r25	; 0x03
     7f6:	82 83       	std	Z+2, r24	; 0x02
     7f8:	04 c0       	rjmp	.+8      	; 0x802 <malloc+0x9a>
     7fa:	90 93 fa 01 	sts	0x01FA, r25
     7fe:	80 93 f9 01 	sts	0x01F9, r24
     802:	fe 01       	movw	r30, r28
     804:	32 96       	adiw	r30, 0x02	; 2
     806:	44 c0       	rjmp	.+136    	; 0x890 <malloc+0x128>
     808:	fe 01       	movw	r30, r28
     80a:	e2 0f       	add	r30, r18
     80c:	f3 1f       	adc	r31, r19
     80e:	81 93       	st	Z+, r24
     810:	91 93       	st	Z+, r25
     812:	22 50       	subi	r18, 0x02	; 2
     814:	31 09       	sbc	r19, r1
     816:	39 83       	std	Y+1, r19	; 0x01
     818:	28 83       	st	Y, r18
     81a:	3a c0       	rjmp	.+116    	; 0x890 <malloc+0x128>
     81c:	20 91 f7 01 	lds	r18, 0x01F7
     820:	30 91 f8 01 	lds	r19, 0x01F8
     824:	23 2b       	or	r18, r19
     826:	41 f4       	brne	.+16     	; 0x838 <malloc+0xd0>
     828:	20 91 02 01 	lds	r18, 0x0102
     82c:	30 91 03 01 	lds	r19, 0x0103
     830:	30 93 f8 01 	sts	0x01F8, r19
     834:	20 93 f7 01 	sts	0x01F7, r18
     838:	20 91 00 01 	lds	r18, 0x0100
     83c:	30 91 01 01 	lds	r19, 0x0101
     840:	21 15       	cp	r18, r1
     842:	31 05       	cpc	r19, r1
     844:	41 f4       	brne	.+16     	; 0x856 <malloc+0xee>
     846:	2d b7       	in	r18, 0x3d	; 61
     848:	3e b7       	in	r19, 0x3e	; 62
     84a:	40 91 04 01 	lds	r20, 0x0104
     84e:	50 91 05 01 	lds	r21, 0x0105
     852:	24 1b       	sub	r18, r20
     854:	35 0b       	sbc	r19, r21
     856:	e0 91 f7 01 	lds	r30, 0x01F7
     85a:	f0 91 f8 01 	lds	r31, 0x01F8
     85e:	e2 17       	cp	r30, r18
     860:	f3 07       	cpc	r31, r19
     862:	a0 f4       	brcc	.+40     	; 0x88c <malloc+0x124>
     864:	2e 1b       	sub	r18, r30
     866:	3f 0b       	sbc	r19, r31
     868:	28 17       	cp	r18, r24
     86a:	39 07       	cpc	r19, r25
     86c:	78 f0       	brcs	.+30     	; 0x88c <malloc+0x124>
     86e:	ac 01       	movw	r20, r24
     870:	4e 5f       	subi	r20, 0xFE	; 254
     872:	5f 4f       	sbci	r21, 0xFF	; 255
     874:	24 17       	cp	r18, r20
     876:	35 07       	cpc	r19, r21
     878:	48 f0       	brcs	.+18     	; 0x88c <malloc+0x124>
     87a:	4e 0f       	add	r20, r30
     87c:	5f 1f       	adc	r21, r31
     87e:	50 93 f8 01 	sts	0x01F8, r21
     882:	40 93 f7 01 	sts	0x01F7, r20
     886:	81 93       	st	Z+, r24
     888:	91 93       	st	Z+, r25
     88a:	02 c0       	rjmp	.+4      	; 0x890 <malloc+0x128>
     88c:	e0 e0       	ldi	r30, 0x00	; 0
     88e:	f0 e0       	ldi	r31, 0x00	; 0
     890:	cf 01       	movw	r24, r30
     892:	df 91       	pop	r29
     894:	cf 91       	pop	r28
     896:	08 95       	ret

00000898 <free>:
     898:	cf 93       	push	r28
     89a:	df 93       	push	r29
     89c:	00 97       	sbiw	r24, 0x00	; 0
     89e:	09 f4       	brne	.+2      	; 0x8a2 <free+0xa>
     8a0:	87 c0       	rjmp	.+270    	; 0x9b0 <free+0x118>
     8a2:	fc 01       	movw	r30, r24
     8a4:	32 97       	sbiw	r30, 0x02	; 2
     8a6:	13 82       	std	Z+3, r1	; 0x03
     8a8:	12 82       	std	Z+2, r1	; 0x02
     8aa:	c0 91 f9 01 	lds	r28, 0x01F9
     8ae:	d0 91 fa 01 	lds	r29, 0x01FA
     8b2:	20 97       	sbiw	r28, 0x00	; 0
     8b4:	81 f4       	brne	.+32     	; 0x8d6 <free+0x3e>
     8b6:	20 81       	ld	r18, Z
     8b8:	31 81       	ldd	r19, Z+1	; 0x01
     8ba:	28 0f       	add	r18, r24
     8bc:	39 1f       	adc	r19, r25
     8be:	80 91 f7 01 	lds	r24, 0x01F7
     8c2:	90 91 f8 01 	lds	r25, 0x01F8
     8c6:	82 17       	cp	r24, r18
     8c8:	93 07       	cpc	r25, r19
     8ca:	79 f5       	brne	.+94     	; 0x92a <free+0x92>
     8cc:	f0 93 f8 01 	sts	0x01F8, r31
     8d0:	e0 93 f7 01 	sts	0x01F7, r30
     8d4:	6d c0       	rjmp	.+218    	; 0x9b0 <free+0x118>
     8d6:	de 01       	movw	r26, r28
     8d8:	20 e0       	ldi	r18, 0x00	; 0
     8da:	30 e0       	ldi	r19, 0x00	; 0
     8dc:	ae 17       	cp	r26, r30
     8de:	bf 07       	cpc	r27, r31
     8e0:	50 f4       	brcc	.+20     	; 0x8f6 <free+0x5e>
     8e2:	12 96       	adiw	r26, 0x02	; 2
     8e4:	4d 91       	ld	r20, X+
     8e6:	5c 91       	ld	r21, X
     8e8:	13 97       	sbiw	r26, 0x03	; 3
     8ea:	9d 01       	movw	r18, r26
     8ec:	41 15       	cp	r20, r1
     8ee:	51 05       	cpc	r21, r1
     8f0:	09 f1       	breq	.+66     	; 0x934 <free+0x9c>
     8f2:	da 01       	movw	r26, r20
     8f4:	f3 cf       	rjmp	.-26     	; 0x8dc <free+0x44>
     8f6:	b3 83       	std	Z+3, r27	; 0x03
     8f8:	a2 83       	std	Z+2, r26	; 0x02
     8fa:	40 81       	ld	r20, Z
     8fc:	51 81       	ldd	r21, Z+1	; 0x01
     8fe:	84 0f       	add	r24, r20
     900:	95 1f       	adc	r25, r21
     902:	8a 17       	cp	r24, r26
     904:	9b 07       	cpc	r25, r27
     906:	71 f4       	brne	.+28     	; 0x924 <free+0x8c>
     908:	8d 91       	ld	r24, X+
     90a:	9c 91       	ld	r25, X
     90c:	11 97       	sbiw	r26, 0x01	; 1
     90e:	84 0f       	add	r24, r20
     910:	95 1f       	adc	r25, r21
     912:	02 96       	adiw	r24, 0x02	; 2
     914:	91 83       	std	Z+1, r25	; 0x01
     916:	80 83       	st	Z, r24
     918:	12 96       	adiw	r26, 0x02	; 2
     91a:	8d 91       	ld	r24, X+
     91c:	9c 91       	ld	r25, X
     91e:	13 97       	sbiw	r26, 0x03	; 3
     920:	93 83       	std	Z+3, r25	; 0x03
     922:	82 83       	std	Z+2, r24	; 0x02
     924:	21 15       	cp	r18, r1
     926:	31 05       	cpc	r19, r1
     928:	29 f4       	brne	.+10     	; 0x934 <free+0x9c>
     92a:	f0 93 fa 01 	sts	0x01FA, r31
     92e:	e0 93 f9 01 	sts	0x01F9, r30
     932:	3e c0       	rjmp	.+124    	; 0x9b0 <free+0x118>
     934:	d9 01       	movw	r26, r18
     936:	13 96       	adiw	r26, 0x03	; 3
     938:	fc 93       	st	X, r31
     93a:	ee 93       	st	-X, r30
     93c:	12 97       	sbiw	r26, 0x02	; 2
     93e:	4d 91       	ld	r20, X+
     940:	5d 91       	ld	r21, X+
     942:	a4 0f       	add	r26, r20
     944:	b5 1f       	adc	r27, r21
     946:	ea 17       	cp	r30, r26
     948:	fb 07       	cpc	r31, r27
     94a:	79 f4       	brne	.+30     	; 0x96a <free+0xd2>
     94c:	80 81       	ld	r24, Z
     94e:	91 81       	ldd	r25, Z+1	; 0x01
     950:	84 0f       	add	r24, r20
     952:	95 1f       	adc	r25, r21
     954:	02 96       	adiw	r24, 0x02	; 2
     956:	d9 01       	movw	r26, r18
     958:	11 96       	adiw	r26, 0x01	; 1
     95a:	9c 93       	st	X, r25
     95c:	8e 93       	st	-X, r24
     95e:	82 81       	ldd	r24, Z+2	; 0x02
     960:	93 81       	ldd	r25, Z+3	; 0x03
     962:	13 96       	adiw	r26, 0x03	; 3
     964:	9c 93       	st	X, r25
     966:	8e 93       	st	-X, r24
     968:	12 97       	sbiw	r26, 0x02	; 2
     96a:	e0 e0       	ldi	r30, 0x00	; 0
     96c:	f0 e0       	ldi	r31, 0x00	; 0
     96e:	8a 81       	ldd	r24, Y+2	; 0x02
     970:	9b 81       	ldd	r25, Y+3	; 0x03
     972:	00 97       	sbiw	r24, 0x00	; 0
     974:	19 f0       	breq	.+6      	; 0x97c <free+0xe4>
     976:	fe 01       	movw	r30, r28
     978:	ec 01       	movw	r28, r24
     97a:	f9 cf       	rjmp	.-14     	; 0x96e <free+0xd6>
     97c:	ce 01       	movw	r24, r28
     97e:	02 96       	adiw	r24, 0x02	; 2
     980:	28 81       	ld	r18, Y
     982:	39 81       	ldd	r19, Y+1	; 0x01
     984:	82 0f       	add	r24, r18
     986:	93 1f       	adc	r25, r19
     988:	20 91 f7 01 	lds	r18, 0x01F7
     98c:	30 91 f8 01 	lds	r19, 0x01F8
     990:	28 17       	cp	r18, r24
     992:	39 07       	cpc	r19, r25
     994:	69 f4       	brne	.+26     	; 0x9b0 <free+0x118>
     996:	30 97       	sbiw	r30, 0x00	; 0
     998:	29 f4       	brne	.+10     	; 0x9a4 <free+0x10c>
     99a:	10 92 fa 01 	sts	0x01FA, r1
     99e:	10 92 f9 01 	sts	0x01F9, r1
     9a2:	02 c0       	rjmp	.+4      	; 0x9a8 <free+0x110>
     9a4:	13 82       	std	Z+3, r1	; 0x03
     9a6:	12 82       	std	Z+2, r1	; 0x02
     9a8:	d0 93 f8 01 	sts	0x01F8, r29
     9ac:	c0 93 f7 01 	sts	0x01F7, r28
     9b0:	df 91       	pop	r29
     9b2:	cf 91       	pop	r28
     9b4:	08 95       	ret

000009b6 <fdevopen>:
     9b6:	0f 93       	push	r16
     9b8:	1f 93       	push	r17
     9ba:	cf 93       	push	r28
     9bc:	df 93       	push	r29
     9be:	ec 01       	movw	r28, r24
     9c0:	8b 01       	movw	r16, r22
     9c2:	00 97       	sbiw	r24, 0x00	; 0
     9c4:	31 f4       	brne	.+12     	; 0x9d2 <fdevopen+0x1c>
     9c6:	61 15       	cp	r22, r1
     9c8:	71 05       	cpc	r23, r1
     9ca:	19 f4       	brne	.+6      	; 0x9d2 <fdevopen+0x1c>
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	38 c0       	rjmp	.+112    	; 0xa42 <fdevopen+0x8c>
     9d2:	6e e0       	ldi	r22, 0x0E	; 14
     9d4:	70 e0       	ldi	r23, 0x00	; 0
     9d6:	81 e0       	ldi	r24, 0x01	; 1
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	0e 94 39 07 	call	0xe72	; 0xe72 <calloc>
     9de:	fc 01       	movw	r30, r24
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	a1 f3       	breq	.-24     	; 0x9cc <fdevopen+0x16>
     9e4:	80 e8       	ldi	r24, 0x80	; 128
     9e6:	83 83       	std	Z+3, r24	; 0x03
     9e8:	01 15       	cp	r16, r1
     9ea:	11 05       	cpc	r17, r1
     9ec:	71 f0       	breq	.+28     	; 0xa0a <fdevopen+0x54>
     9ee:	13 87       	std	Z+11, r17	; 0x0b
     9f0:	02 87       	std	Z+10, r16	; 0x0a
     9f2:	81 e8       	ldi	r24, 0x81	; 129
     9f4:	83 83       	std	Z+3, r24	; 0x03
     9f6:	80 91 fb 01 	lds	r24, 0x01FB
     9fa:	90 91 fc 01 	lds	r25, 0x01FC
     9fe:	89 2b       	or	r24, r25
     a00:	21 f4       	brne	.+8      	; 0xa0a <fdevopen+0x54>
     a02:	f0 93 fc 01 	sts	0x01FC, r31
     a06:	e0 93 fb 01 	sts	0x01FB, r30
     a0a:	20 97       	sbiw	r28, 0x00	; 0
     a0c:	c9 f0       	breq	.+50     	; 0xa40 <fdevopen+0x8a>
     a0e:	d1 87       	std	Z+9, r29	; 0x09
     a10:	c0 87       	std	Z+8, r28	; 0x08
     a12:	83 81       	ldd	r24, Z+3	; 0x03
     a14:	82 60       	ori	r24, 0x02	; 2
     a16:	83 83       	std	Z+3, r24	; 0x03
     a18:	80 91 fd 01 	lds	r24, 0x01FD
     a1c:	90 91 fe 01 	lds	r25, 0x01FE
     a20:	89 2b       	or	r24, r25
     a22:	71 f4       	brne	.+28     	; 0xa40 <fdevopen+0x8a>
     a24:	f0 93 fe 01 	sts	0x01FE, r31
     a28:	e0 93 fd 01 	sts	0x01FD, r30
     a2c:	80 91 ff 01 	lds	r24, 0x01FF
     a30:	90 91 00 02 	lds	r25, 0x0200
     a34:	89 2b       	or	r24, r25
     a36:	21 f4       	brne	.+8      	; 0xa40 <fdevopen+0x8a>
     a38:	f0 93 00 02 	sts	0x0200, r31
     a3c:	e0 93 ff 01 	sts	0x01FF, r30
     a40:	cf 01       	movw	r24, r30
     a42:	df 91       	pop	r29
     a44:	cf 91       	pop	r28
     a46:	1f 91       	pop	r17
     a48:	0f 91       	pop	r16
     a4a:	08 95       	ret

00000a4c <printf>:
     a4c:	a0 e0       	ldi	r26, 0x00	; 0
     a4e:	b0 e0       	ldi	r27, 0x00	; 0
     a50:	ec e2       	ldi	r30, 0x2C	; 44
     a52:	f5 e0       	ldi	r31, 0x05	; 5
     a54:	0c 94 12 08 	jmp	0x1024	; 0x1024 <__prologue_saves__+0x20>
     a58:	fe 01       	movw	r30, r28
     a5a:	35 96       	adiw	r30, 0x05	; 5
     a5c:	61 91       	ld	r22, Z+
     a5e:	71 91       	ld	r23, Z+
     a60:	af 01       	movw	r20, r30
     a62:	80 91 fd 01 	lds	r24, 0x01FD
     a66:	90 91 fe 01 	lds	r25, 0x01FE
     a6a:	0e 94 67 05 	call	0xace	; 0xace <vfprintf>
     a6e:	e2 e0       	ldi	r30, 0x02	; 2
     a70:	0c 94 2e 08 	jmp	0x105c	; 0x105c <__epilogue_restores__+0x20>

00000a74 <puts>:
     a74:	0f 93       	push	r16
     a76:	1f 93       	push	r17
     a78:	cf 93       	push	r28
     a7a:	df 93       	push	r29
     a7c:	e0 91 fd 01 	lds	r30, 0x01FD
     a80:	f0 91 fe 01 	lds	r31, 0x01FE
     a84:	23 81       	ldd	r18, Z+3	; 0x03
     a86:	21 ff       	sbrs	r18, 1
     a88:	1b c0       	rjmp	.+54     	; 0xac0 <puts+0x4c>
     a8a:	ec 01       	movw	r28, r24
     a8c:	00 e0       	ldi	r16, 0x00	; 0
     a8e:	10 e0       	ldi	r17, 0x00	; 0
     a90:	89 91       	ld	r24, Y+
     a92:	60 91 fd 01 	lds	r22, 0x01FD
     a96:	70 91 fe 01 	lds	r23, 0x01FE
     a9a:	db 01       	movw	r26, r22
     a9c:	18 96       	adiw	r26, 0x08	; 8
     a9e:	ed 91       	ld	r30, X+
     aa0:	fc 91       	ld	r31, X
     aa2:	19 97       	sbiw	r26, 0x09	; 9
     aa4:	88 23       	and	r24, r24
     aa6:	31 f0       	breq	.+12     	; 0xab4 <puts+0x40>
     aa8:	09 95       	icall
     aaa:	89 2b       	or	r24, r25
     aac:	89 f3       	breq	.-30     	; 0xa90 <puts+0x1c>
     aae:	0f ef       	ldi	r16, 0xFF	; 255
     ab0:	1f ef       	ldi	r17, 0xFF	; 255
     ab2:	ee cf       	rjmp	.-36     	; 0xa90 <puts+0x1c>
     ab4:	8a e0       	ldi	r24, 0x0A	; 10
     ab6:	09 95       	icall
     ab8:	89 2b       	or	r24, r25
     aba:	11 f4       	brne	.+4      	; 0xac0 <puts+0x4c>
     abc:	c8 01       	movw	r24, r16
     abe:	02 c0       	rjmp	.+4      	; 0xac4 <puts+0x50>
     ac0:	8f ef       	ldi	r24, 0xFF	; 255
     ac2:	9f ef       	ldi	r25, 0xFF	; 255
     ac4:	df 91       	pop	r29
     ac6:	cf 91       	pop	r28
     ac8:	1f 91       	pop	r17
     aca:	0f 91       	pop	r16
     acc:	08 95       	ret

00000ace <vfprintf>:
     ace:	ac e0       	ldi	r26, 0x0C	; 12
     ad0:	b0 e0       	ldi	r27, 0x00	; 0
     ad2:	ed e6       	ldi	r30, 0x6D	; 109
     ad4:	f5 e0       	ldi	r31, 0x05	; 5
     ad6:	0c 94 02 08 	jmp	0x1004	; 0x1004 <__prologue_saves__>
     ada:	7c 01       	movw	r14, r24
     adc:	6b 01       	movw	r12, r22
     ade:	8a 01       	movw	r16, r20
     ae0:	fc 01       	movw	r30, r24
     ae2:	17 82       	std	Z+7, r1	; 0x07
     ae4:	16 82       	std	Z+6, r1	; 0x06
     ae6:	83 81       	ldd	r24, Z+3	; 0x03
     ae8:	81 ff       	sbrs	r24, 1
     aea:	bd c1       	rjmp	.+890    	; 0xe66 <vfprintf+0x398>
     aec:	ce 01       	movw	r24, r28
     aee:	01 96       	adiw	r24, 0x01	; 1
     af0:	4c 01       	movw	r8, r24
     af2:	f7 01       	movw	r30, r14
     af4:	93 81       	ldd	r25, Z+3	; 0x03
     af6:	f6 01       	movw	r30, r12
     af8:	93 fd       	sbrc	r25, 3
     afa:	85 91       	lpm	r24, Z+
     afc:	93 ff       	sbrs	r25, 3
     afe:	81 91       	ld	r24, Z+
     b00:	6f 01       	movw	r12, r30
     b02:	88 23       	and	r24, r24
     b04:	09 f4       	brne	.+2      	; 0xb08 <vfprintf+0x3a>
     b06:	ab c1       	rjmp	.+854    	; 0xe5e <vfprintf+0x390>
     b08:	85 32       	cpi	r24, 0x25	; 37
     b0a:	39 f4       	brne	.+14     	; 0xb1a <vfprintf+0x4c>
     b0c:	93 fd       	sbrc	r25, 3
     b0e:	85 91       	lpm	r24, Z+
     b10:	93 ff       	sbrs	r25, 3
     b12:	81 91       	ld	r24, Z+
     b14:	6f 01       	movw	r12, r30
     b16:	85 32       	cpi	r24, 0x25	; 37
     b18:	29 f4       	brne	.+10     	; 0xb24 <vfprintf+0x56>
     b1a:	b7 01       	movw	r22, r14
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	0e 94 72 07 	call	0xee4	; 0xee4 <fputc>
     b22:	e7 cf       	rjmp	.-50     	; 0xaf2 <vfprintf+0x24>
     b24:	51 2c       	mov	r5, r1
     b26:	31 2c       	mov	r3, r1
     b28:	20 e0       	ldi	r18, 0x00	; 0
     b2a:	20 32       	cpi	r18, 0x20	; 32
     b2c:	a0 f4       	brcc	.+40     	; 0xb56 <vfprintf+0x88>
     b2e:	8b 32       	cpi	r24, 0x2B	; 43
     b30:	69 f0       	breq	.+26     	; 0xb4c <vfprintf+0x7e>
     b32:	30 f4       	brcc	.+12     	; 0xb40 <vfprintf+0x72>
     b34:	80 32       	cpi	r24, 0x20	; 32
     b36:	59 f0       	breq	.+22     	; 0xb4e <vfprintf+0x80>
     b38:	83 32       	cpi	r24, 0x23	; 35
     b3a:	69 f4       	brne	.+26     	; 0xb56 <vfprintf+0x88>
     b3c:	20 61       	ori	r18, 0x10	; 16
     b3e:	2c c0       	rjmp	.+88     	; 0xb98 <vfprintf+0xca>
     b40:	8d 32       	cpi	r24, 0x2D	; 45
     b42:	39 f0       	breq	.+14     	; 0xb52 <vfprintf+0x84>
     b44:	80 33       	cpi	r24, 0x30	; 48
     b46:	39 f4       	brne	.+14     	; 0xb56 <vfprintf+0x88>
     b48:	21 60       	ori	r18, 0x01	; 1
     b4a:	26 c0       	rjmp	.+76     	; 0xb98 <vfprintf+0xca>
     b4c:	22 60       	ori	r18, 0x02	; 2
     b4e:	24 60       	ori	r18, 0x04	; 4
     b50:	23 c0       	rjmp	.+70     	; 0xb98 <vfprintf+0xca>
     b52:	28 60       	ori	r18, 0x08	; 8
     b54:	21 c0       	rjmp	.+66     	; 0xb98 <vfprintf+0xca>
     b56:	27 fd       	sbrc	r18, 7
     b58:	27 c0       	rjmp	.+78     	; 0xba8 <vfprintf+0xda>
     b5a:	30 ed       	ldi	r19, 0xD0	; 208
     b5c:	38 0f       	add	r19, r24
     b5e:	3a 30       	cpi	r19, 0x0A	; 10
     b60:	78 f4       	brcc	.+30     	; 0xb80 <vfprintf+0xb2>
     b62:	26 ff       	sbrs	r18, 6
     b64:	06 c0       	rjmp	.+12     	; 0xb72 <vfprintf+0xa4>
     b66:	fa e0       	ldi	r31, 0x0A	; 10
     b68:	5f 9e       	mul	r5, r31
     b6a:	30 0d       	add	r19, r0
     b6c:	11 24       	eor	r1, r1
     b6e:	53 2e       	mov	r5, r19
     b70:	13 c0       	rjmp	.+38     	; 0xb98 <vfprintf+0xca>
     b72:	8a e0       	ldi	r24, 0x0A	; 10
     b74:	38 9e       	mul	r3, r24
     b76:	30 0d       	add	r19, r0
     b78:	11 24       	eor	r1, r1
     b7a:	33 2e       	mov	r3, r19
     b7c:	20 62       	ori	r18, 0x20	; 32
     b7e:	0c c0       	rjmp	.+24     	; 0xb98 <vfprintf+0xca>
     b80:	8e 32       	cpi	r24, 0x2E	; 46
     b82:	21 f4       	brne	.+8      	; 0xb8c <vfprintf+0xbe>
     b84:	26 fd       	sbrc	r18, 6
     b86:	6b c1       	rjmp	.+726    	; 0xe5e <vfprintf+0x390>
     b88:	20 64       	ori	r18, 0x40	; 64
     b8a:	06 c0       	rjmp	.+12     	; 0xb98 <vfprintf+0xca>
     b8c:	8c 36       	cpi	r24, 0x6C	; 108
     b8e:	11 f4       	brne	.+4      	; 0xb94 <vfprintf+0xc6>
     b90:	20 68       	ori	r18, 0x80	; 128
     b92:	02 c0       	rjmp	.+4      	; 0xb98 <vfprintf+0xca>
     b94:	88 36       	cpi	r24, 0x68	; 104
     b96:	41 f4       	brne	.+16     	; 0xba8 <vfprintf+0xda>
     b98:	f6 01       	movw	r30, r12
     b9a:	93 fd       	sbrc	r25, 3
     b9c:	85 91       	lpm	r24, Z+
     b9e:	93 ff       	sbrs	r25, 3
     ba0:	81 91       	ld	r24, Z+
     ba2:	6f 01       	movw	r12, r30
     ba4:	81 11       	cpse	r24, r1
     ba6:	c1 cf       	rjmp	.-126    	; 0xb2a <vfprintf+0x5c>
     ba8:	98 2f       	mov	r25, r24
     baa:	9f 7d       	andi	r25, 0xDF	; 223
     bac:	95 54       	subi	r25, 0x45	; 69
     bae:	93 30       	cpi	r25, 0x03	; 3
     bb0:	28 f4       	brcc	.+10     	; 0xbbc <vfprintf+0xee>
     bb2:	0c 5f       	subi	r16, 0xFC	; 252
     bb4:	1f 4f       	sbci	r17, 0xFF	; 255
     bb6:	ff e3       	ldi	r31, 0x3F	; 63
     bb8:	f9 83       	std	Y+1, r31	; 0x01
     bba:	0d c0       	rjmp	.+26     	; 0xbd6 <vfprintf+0x108>
     bbc:	83 36       	cpi	r24, 0x63	; 99
     bbe:	31 f0       	breq	.+12     	; 0xbcc <vfprintf+0xfe>
     bc0:	83 37       	cpi	r24, 0x73	; 115
     bc2:	71 f0       	breq	.+28     	; 0xbe0 <vfprintf+0x112>
     bc4:	83 35       	cpi	r24, 0x53	; 83
     bc6:	09 f0       	breq	.+2      	; 0xbca <vfprintf+0xfc>
     bc8:	5b c0       	rjmp	.+182    	; 0xc80 <vfprintf+0x1b2>
     bca:	22 c0       	rjmp	.+68     	; 0xc10 <vfprintf+0x142>
     bcc:	f8 01       	movw	r30, r16
     bce:	80 81       	ld	r24, Z
     bd0:	89 83       	std	Y+1, r24	; 0x01
     bd2:	0e 5f       	subi	r16, 0xFE	; 254
     bd4:	1f 4f       	sbci	r17, 0xFF	; 255
     bd6:	44 24       	eor	r4, r4
     bd8:	43 94       	inc	r4
     bda:	51 2c       	mov	r5, r1
     bdc:	54 01       	movw	r10, r8
     bde:	15 c0       	rjmp	.+42     	; 0xc0a <vfprintf+0x13c>
     be0:	38 01       	movw	r6, r16
     be2:	f2 e0       	ldi	r31, 0x02	; 2
     be4:	6f 0e       	add	r6, r31
     be6:	71 1c       	adc	r7, r1
     be8:	f8 01       	movw	r30, r16
     bea:	a0 80       	ld	r10, Z
     bec:	b1 80       	ldd	r11, Z+1	; 0x01
     bee:	26 ff       	sbrs	r18, 6
     bf0:	03 c0       	rjmp	.+6      	; 0xbf8 <vfprintf+0x12a>
     bf2:	65 2d       	mov	r22, r5
     bf4:	70 e0       	ldi	r23, 0x00	; 0
     bf6:	02 c0       	rjmp	.+4      	; 0xbfc <vfprintf+0x12e>
     bf8:	6f ef       	ldi	r22, 0xFF	; 255
     bfa:	7f ef       	ldi	r23, 0xFF	; 255
     bfc:	c5 01       	movw	r24, r10
     bfe:	2c 87       	std	Y+12, r18	; 0x0c
     c00:	0e 94 67 07 	call	0xece	; 0xece <strnlen>
     c04:	2c 01       	movw	r4, r24
     c06:	83 01       	movw	r16, r6
     c08:	2c 85       	ldd	r18, Y+12	; 0x0c
     c0a:	2f 77       	andi	r18, 0x7F	; 127
     c0c:	22 2e       	mov	r2, r18
     c0e:	17 c0       	rjmp	.+46     	; 0xc3e <vfprintf+0x170>
     c10:	38 01       	movw	r6, r16
     c12:	f2 e0       	ldi	r31, 0x02	; 2
     c14:	6f 0e       	add	r6, r31
     c16:	71 1c       	adc	r7, r1
     c18:	f8 01       	movw	r30, r16
     c1a:	a0 80       	ld	r10, Z
     c1c:	b1 80       	ldd	r11, Z+1	; 0x01
     c1e:	26 ff       	sbrs	r18, 6
     c20:	03 c0       	rjmp	.+6      	; 0xc28 <vfprintf+0x15a>
     c22:	65 2d       	mov	r22, r5
     c24:	70 e0       	ldi	r23, 0x00	; 0
     c26:	02 c0       	rjmp	.+4      	; 0xc2c <vfprintf+0x15e>
     c28:	6f ef       	ldi	r22, 0xFF	; 255
     c2a:	7f ef       	ldi	r23, 0xFF	; 255
     c2c:	c5 01       	movw	r24, r10
     c2e:	2c 87       	std	Y+12, r18	; 0x0c
     c30:	0e 94 55 07 	call	0xeaa	; 0xeaa <strnlen_P>
     c34:	2c 01       	movw	r4, r24
     c36:	2c 85       	ldd	r18, Y+12	; 0x0c
     c38:	20 68       	ori	r18, 0x80	; 128
     c3a:	22 2e       	mov	r2, r18
     c3c:	83 01       	movw	r16, r6
     c3e:	23 fc       	sbrc	r2, 3
     c40:	1b c0       	rjmp	.+54     	; 0xc78 <vfprintf+0x1aa>
     c42:	83 2d       	mov	r24, r3
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	48 16       	cp	r4, r24
     c48:	59 06       	cpc	r5, r25
     c4a:	b0 f4       	brcc	.+44     	; 0xc78 <vfprintf+0x1aa>
     c4c:	b7 01       	movw	r22, r14
     c4e:	80 e2       	ldi	r24, 0x20	; 32
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	0e 94 72 07 	call	0xee4	; 0xee4 <fputc>
     c56:	3a 94       	dec	r3
     c58:	f4 cf       	rjmp	.-24     	; 0xc42 <vfprintf+0x174>
     c5a:	f5 01       	movw	r30, r10
     c5c:	27 fc       	sbrc	r2, 7
     c5e:	85 91       	lpm	r24, Z+
     c60:	27 fe       	sbrs	r2, 7
     c62:	81 91       	ld	r24, Z+
     c64:	5f 01       	movw	r10, r30
     c66:	b7 01       	movw	r22, r14
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	0e 94 72 07 	call	0xee4	; 0xee4 <fputc>
     c6e:	31 10       	cpse	r3, r1
     c70:	3a 94       	dec	r3
     c72:	f1 e0       	ldi	r31, 0x01	; 1
     c74:	4f 1a       	sub	r4, r31
     c76:	51 08       	sbc	r5, r1
     c78:	41 14       	cp	r4, r1
     c7a:	51 04       	cpc	r5, r1
     c7c:	71 f7       	brne	.-36     	; 0xc5a <vfprintf+0x18c>
     c7e:	e5 c0       	rjmp	.+458    	; 0xe4a <vfprintf+0x37c>
     c80:	84 36       	cpi	r24, 0x64	; 100
     c82:	11 f0       	breq	.+4      	; 0xc88 <vfprintf+0x1ba>
     c84:	89 36       	cpi	r24, 0x69	; 105
     c86:	39 f5       	brne	.+78     	; 0xcd6 <vfprintf+0x208>
     c88:	f8 01       	movw	r30, r16
     c8a:	27 ff       	sbrs	r18, 7
     c8c:	07 c0       	rjmp	.+14     	; 0xc9c <vfprintf+0x1ce>
     c8e:	60 81       	ld	r22, Z
     c90:	71 81       	ldd	r23, Z+1	; 0x01
     c92:	82 81       	ldd	r24, Z+2	; 0x02
     c94:	93 81       	ldd	r25, Z+3	; 0x03
     c96:	0c 5f       	subi	r16, 0xFC	; 252
     c98:	1f 4f       	sbci	r17, 0xFF	; 255
     c9a:	08 c0       	rjmp	.+16     	; 0xcac <vfprintf+0x1de>
     c9c:	60 81       	ld	r22, Z
     c9e:	71 81       	ldd	r23, Z+1	; 0x01
     ca0:	88 27       	eor	r24, r24
     ca2:	77 fd       	sbrc	r23, 7
     ca4:	80 95       	com	r24
     ca6:	98 2f       	mov	r25, r24
     ca8:	0e 5f       	subi	r16, 0xFE	; 254
     caa:	1f 4f       	sbci	r17, 0xFF	; 255
     cac:	2f 76       	andi	r18, 0x6F	; 111
     cae:	b2 2e       	mov	r11, r18
     cb0:	97 ff       	sbrs	r25, 7
     cb2:	09 c0       	rjmp	.+18     	; 0xcc6 <vfprintf+0x1f8>
     cb4:	90 95       	com	r25
     cb6:	80 95       	com	r24
     cb8:	70 95       	com	r23
     cba:	61 95       	neg	r22
     cbc:	7f 4f       	sbci	r23, 0xFF	; 255
     cbe:	8f 4f       	sbci	r24, 0xFF	; 255
     cc0:	9f 4f       	sbci	r25, 0xFF	; 255
     cc2:	20 68       	ori	r18, 0x80	; 128
     cc4:	b2 2e       	mov	r11, r18
     cc6:	2a e0       	ldi	r18, 0x0A	; 10
     cc8:	30 e0       	ldi	r19, 0x00	; 0
     cca:	a4 01       	movw	r20, r8
     ccc:	0e 94 a4 07 	call	0xf48	; 0xf48 <__ultoa_invert>
     cd0:	a8 2e       	mov	r10, r24
     cd2:	a8 18       	sub	r10, r8
     cd4:	44 c0       	rjmp	.+136    	; 0xd5e <vfprintf+0x290>
     cd6:	85 37       	cpi	r24, 0x75	; 117
     cd8:	29 f4       	brne	.+10     	; 0xce4 <vfprintf+0x216>
     cda:	2f 7e       	andi	r18, 0xEF	; 239
     cdc:	b2 2e       	mov	r11, r18
     cde:	2a e0       	ldi	r18, 0x0A	; 10
     ce0:	30 e0       	ldi	r19, 0x00	; 0
     ce2:	25 c0       	rjmp	.+74     	; 0xd2e <vfprintf+0x260>
     ce4:	f2 2f       	mov	r31, r18
     ce6:	f9 7f       	andi	r31, 0xF9	; 249
     ce8:	bf 2e       	mov	r11, r31
     cea:	8f 36       	cpi	r24, 0x6F	; 111
     cec:	c1 f0       	breq	.+48     	; 0xd1e <vfprintf+0x250>
     cee:	18 f4       	brcc	.+6      	; 0xcf6 <vfprintf+0x228>
     cf0:	88 35       	cpi	r24, 0x58	; 88
     cf2:	79 f0       	breq	.+30     	; 0xd12 <vfprintf+0x244>
     cf4:	b4 c0       	rjmp	.+360    	; 0xe5e <vfprintf+0x390>
     cf6:	80 37       	cpi	r24, 0x70	; 112
     cf8:	19 f0       	breq	.+6      	; 0xd00 <vfprintf+0x232>
     cfa:	88 37       	cpi	r24, 0x78	; 120
     cfc:	21 f0       	breq	.+8      	; 0xd06 <vfprintf+0x238>
     cfe:	af c0       	rjmp	.+350    	; 0xe5e <vfprintf+0x390>
     d00:	2f 2f       	mov	r18, r31
     d02:	20 61       	ori	r18, 0x10	; 16
     d04:	b2 2e       	mov	r11, r18
     d06:	b4 fe       	sbrs	r11, 4
     d08:	0d c0       	rjmp	.+26     	; 0xd24 <vfprintf+0x256>
     d0a:	8b 2d       	mov	r24, r11
     d0c:	84 60       	ori	r24, 0x04	; 4
     d0e:	b8 2e       	mov	r11, r24
     d10:	09 c0       	rjmp	.+18     	; 0xd24 <vfprintf+0x256>
     d12:	24 ff       	sbrs	r18, 4
     d14:	0a c0       	rjmp	.+20     	; 0xd2a <vfprintf+0x25c>
     d16:	9f 2f       	mov	r25, r31
     d18:	96 60       	ori	r25, 0x06	; 6
     d1a:	b9 2e       	mov	r11, r25
     d1c:	06 c0       	rjmp	.+12     	; 0xd2a <vfprintf+0x25c>
     d1e:	28 e0       	ldi	r18, 0x08	; 8
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	05 c0       	rjmp	.+10     	; 0xd2e <vfprintf+0x260>
     d24:	20 e1       	ldi	r18, 0x10	; 16
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	02 c0       	rjmp	.+4      	; 0xd2e <vfprintf+0x260>
     d2a:	20 e1       	ldi	r18, 0x10	; 16
     d2c:	32 e0       	ldi	r19, 0x02	; 2
     d2e:	f8 01       	movw	r30, r16
     d30:	b7 fe       	sbrs	r11, 7
     d32:	07 c0       	rjmp	.+14     	; 0xd42 <vfprintf+0x274>
     d34:	60 81       	ld	r22, Z
     d36:	71 81       	ldd	r23, Z+1	; 0x01
     d38:	82 81       	ldd	r24, Z+2	; 0x02
     d3a:	93 81       	ldd	r25, Z+3	; 0x03
     d3c:	0c 5f       	subi	r16, 0xFC	; 252
     d3e:	1f 4f       	sbci	r17, 0xFF	; 255
     d40:	06 c0       	rjmp	.+12     	; 0xd4e <vfprintf+0x280>
     d42:	60 81       	ld	r22, Z
     d44:	71 81       	ldd	r23, Z+1	; 0x01
     d46:	80 e0       	ldi	r24, 0x00	; 0
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	0e 5f       	subi	r16, 0xFE	; 254
     d4c:	1f 4f       	sbci	r17, 0xFF	; 255
     d4e:	a4 01       	movw	r20, r8
     d50:	0e 94 a4 07 	call	0xf48	; 0xf48 <__ultoa_invert>
     d54:	a8 2e       	mov	r10, r24
     d56:	a8 18       	sub	r10, r8
     d58:	fb 2d       	mov	r31, r11
     d5a:	ff 77       	andi	r31, 0x7F	; 127
     d5c:	bf 2e       	mov	r11, r31
     d5e:	b6 fe       	sbrs	r11, 6
     d60:	0b c0       	rjmp	.+22     	; 0xd78 <vfprintf+0x2aa>
     d62:	2b 2d       	mov	r18, r11
     d64:	2e 7f       	andi	r18, 0xFE	; 254
     d66:	a5 14       	cp	r10, r5
     d68:	50 f4       	brcc	.+20     	; 0xd7e <vfprintf+0x2b0>
     d6a:	b4 fe       	sbrs	r11, 4
     d6c:	0a c0       	rjmp	.+20     	; 0xd82 <vfprintf+0x2b4>
     d6e:	b2 fc       	sbrc	r11, 2
     d70:	08 c0       	rjmp	.+16     	; 0xd82 <vfprintf+0x2b4>
     d72:	2b 2d       	mov	r18, r11
     d74:	2e 7e       	andi	r18, 0xEE	; 238
     d76:	05 c0       	rjmp	.+10     	; 0xd82 <vfprintf+0x2b4>
     d78:	7a 2c       	mov	r7, r10
     d7a:	2b 2d       	mov	r18, r11
     d7c:	03 c0       	rjmp	.+6      	; 0xd84 <vfprintf+0x2b6>
     d7e:	7a 2c       	mov	r7, r10
     d80:	01 c0       	rjmp	.+2      	; 0xd84 <vfprintf+0x2b6>
     d82:	75 2c       	mov	r7, r5
     d84:	24 ff       	sbrs	r18, 4
     d86:	0d c0       	rjmp	.+26     	; 0xda2 <vfprintf+0x2d4>
     d88:	fe 01       	movw	r30, r28
     d8a:	ea 0d       	add	r30, r10
     d8c:	f1 1d       	adc	r31, r1
     d8e:	80 81       	ld	r24, Z
     d90:	80 33       	cpi	r24, 0x30	; 48
     d92:	11 f4       	brne	.+4      	; 0xd98 <vfprintf+0x2ca>
     d94:	29 7e       	andi	r18, 0xE9	; 233
     d96:	09 c0       	rjmp	.+18     	; 0xdaa <vfprintf+0x2dc>
     d98:	22 ff       	sbrs	r18, 2
     d9a:	06 c0       	rjmp	.+12     	; 0xda8 <vfprintf+0x2da>
     d9c:	73 94       	inc	r7
     d9e:	73 94       	inc	r7
     da0:	04 c0       	rjmp	.+8      	; 0xdaa <vfprintf+0x2dc>
     da2:	82 2f       	mov	r24, r18
     da4:	86 78       	andi	r24, 0x86	; 134
     da6:	09 f0       	breq	.+2      	; 0xdaa <vfprintf+0x2dc>
     da8:	73 94       	inc	r7
     daa:	23 fd       	sbrc	r18, 3
     dac:	13 c0       	rjmp	.+38     	; 0xdd4 <vfprintf+0x306>
     dae:	20 ff       	sbrs	r18, 0
     db0:	06 c0       	rjmp	.+12     	; 0xdbe <vfprintf+0x2f0>
     db2:	5a 2c       	mov	r5, r10
     db4:	73 14       	cp	r7, r3
     db6:	18 f4       	brcc	.+6      	; 0xdbe <vfprintf+0x2f0>
     db8:	53 0c       	add	r5, r3
     dba:	57 18       	sub	r5, r7
     dbc:	73 2c       	mov	r7, r3
     dbe:	73 14       	cp	r7, r3
     dc0:	68 f4       	brcc	.+26     	; 0xddc <vfprintf+0x30e>
     dc2:	b7 01       	movw	r22, r14
     dc4:	80 e2       	ldi	r24, 0x20	; 32
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	2c 87       	std	Y+12, r18	; 0x0c
     dca:	0e 94 72 07 	call	0xee4	; 0xee4 <fputc>
     dce:	73 94       	inc	r7
     dd0:	2c 85       	ldd	r18, Y+12	; 0x0c
     dd2:	f5 cf       	rjmp	.-22     	; 0xdbe <vfprintf+0x2f0>
     dd4:	73 14       	cp	r7, r3
     dd6:	10 f4       	brcc	.+4      	; 0xddc <vfprintf+0x30e>
     dd8:	37 18       	sub	r3, r7
     dda:	01 c0       	rjmp	.+2      	; 0xdde <vfprintf+0x310>
     ddc:	31 2c       	mov	r3, r1
     dde:	24 ff       	sbrs	r18, 4
     de0:	12 c0       	rjmp	.+36     	; 0xe06 <vfprintf+0x338>
     de2:	b7 01       	movw	r22, r14
     de4:	80 e3       	ldi	r24, 0x30	; 48
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	2c 87       	std	Y+12, r18	; 0x0c
     dea:	0e 94 72 07 	call	0xee4	; 0xee4 <fputc>
     dee:	2c 85       	ldd	r18, Y+12	; 0x0c
     df0:	22 ff       	sbrs	r18, 2
     df2:	17 c0       	rjmp	.+46     	; 0xe22 <vfprintf+0x354>
     df4:	21 ff       	sbrs	r18, 1
     df6:	03 c0       	rjmp	.+6      	; 0xdfe <vfprintf+0x330>
     df8:	88 e5       	ldi	r24, 0x58	; 88
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	02 c0       	rjmp	.+4      	; 0xe02 <vfprintf+0x334>
     dfe:	88 e7       	ldi	r24, 0x78	; 120
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	b7 01       	movw	r22, r14
     e04:	0c c0       	rjmp	.+24     	; 0xe1e <vfprintf+0x350>
     e06:	82 2f       	mov	r24, r18
     e08:	86 78       	andi	r24, 0x86	; 134
     e0a:	59 f0       	breq	.+22     	; 0xe22 <vfprintf+0x354>
     e0c:	21 fd       	sbrc	r18, 1
     e0e:	02 c0       	rjmp	.+4      	; 0xe14 <vfprintf+0x346>
     e10:	80 e2       	ldi	r24, 0x20	; 32
     e12:	01 c0       	rjmp	.+2      	; 0xe16 <vfprintf+0x348>
     e14:	8b e2       	ldi	r24, 0x2B	; 43
     e16:	27 fd       	sbrc	r18, 7
     e18:	8d e2       	ldi	r24, 0x2D	; 45
     e1a:	b7 01       	movw	r22, r14
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	0e 94 72 07 	call	0xee4	; 0xee4 <fputc>
     e22:	a5 14       	cp	r10, r5
     e24:	38 f4       	brcc	.+14     	; 0xe34 <vfprintf+0x366>
     e26:	b7 01       	movw	r22, r14
     e28:	80 e3       	ldi	r24, 0x30	; 48
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	0e 94 72 07 	call	0xee4	; 0xee4 <fputc>
     e30:	5a 94       	dec	r5
     e32:	f7 cf       	rjmp	.-18     	; 0xe22 <vfprintf+0x354>
     e34:	aa 94       	dec	r10
     e36:	f4 01       	movw	r30, r8
     e38:	ea 0d       	add	r30, r10
     e3a:	f1 1d       	adc	r31, r1
     e3c:	80 81       	ld	r24, Z
     e3e:	b7 01       	movw	r22, r14
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	0e 94 72 07 	call	0xee4	; 0xee4 <fputc>
     e46:	a1 10       	cpse	r10, r1
     e48:	f5 cf       	rjmp	.-22     	; 0xe34 <vfprintf+0x366>
     e4a:	33 20       	and	r3, r3
     e4c:	09 f4       	brne	.+2      	; 0xe50 <vfprintf+0x382>
     e4e:	51 ce       	rjmp	.-862    	; 0xaf2 <vfprintf+0x24>
     e50:	b7 01       	movw	r22, r14
     e52:	80 e2       	ldi	r24, 0x20	; 32
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	0e 94 72 07 	call	0xee4	; 0xee4 <fputc>
     e5a:	3a 94       	dec	r3
     e5c:	f6 cf       	rjmp	.-20     	; 0xe4a <vfprintf+0x37c>
     e5e:	f7 01       	movw	r30, r14
     e60:	86 81       	ldd	r24, Z+6	; 0x06
     e62:	97 81       	ldd	r25, Z+7	; 0x07
     e64:	02 c0       	rjmp	.+4      	; 0xe6a <vfprintf+0x39c>
     e66:	8f ef       	ldi	r24, 0xFF	; 255
     e68:	9f ef       	ldi	r25, 0xFF	; 255
     e6a:	2c 96       	adiw	r28, 0x0c	; 12
     e6c:	e2 e1       	ldi	r30, 0x12	; 18
     e6e:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__epilogue_restores__>

00000e72 <calloc>:
     e72:	0f 93       	push	r16
     e74:	1f 93       	push	r17
     e76:	cf 93       	push	r28
     e78:	df 93       	push	r29
     e7a:	86 9f       	mul	r24, r22
     e7c:	80 01       	movw	r16, r0
     e7e:	87 9f       	mul	r24, r23
     e80:	10 0d       	add	r17, r0
     e82:	96 9f       	mul	r25, r22
     e84:	10 0d       	add	r17, r0
     e86:	11 24       	eor	r1, r1
     e88:	c8 01       	movw	r24, r16
     e8a:	0e 94 b4 03 	call	0x768	; 0x768 <malloc>
     e8e:	ec 01       	movw	r28, r24
     e90:	00 97       	sbiw	r24, 0x00	; 0
     e92:	29 f0       	breq	.+10     	; 0xe9e <calloc+0x2c>
     e94:	a8 01       	movw	r20, r16
     e96:	60 e0       	ldi	r22, 0x00	; 0
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	0e 94 60 07 	call	0xec0	; 0xec0 <memset>
     e9e:	ce 01       	movw	r24, r28
     ea0:	df 91       	pop	r29
     ea2:	cf 91       	pop	r28
     ea4:	1f 91       	pop	r17
     ea6:	0f 91       	pop	r16
     ea8:	08 95       	ret

00000eaa <strnlen_P>:
     eaa:	fc 01       	movw	r30, r24
     eac:	05 90       	lpm	r0, Z+
     eae:	61 50       	subi	r22, 0x01	; 1
     eb0:	70 40       	sbci	r23, 0x00	; 0
     eb2:	01 10       	cpse	r0, r1
     eb4:	d8 f7       	brcc	.-10     	; 0xeac <strnlen_P+0x2>
     eb6:	80 95       	com	r24
     eb8:	90 95       	com	r25
     eba:	8e 0f       	add	r24, r30
     ebc:	9f 1f       	adc	r25, r31
     ebe:	08 95       	ret

00000ec0 <memset>:
     ec0:	dc 01       	movw	r26, r24
     ec2:	01 c0       	rjmp	.+2      	; 0xec6 <memset+0x6>
     ec4:	6d 93       	st	X+, r22
     ec6:	41 50       	subi	r20, 0x01	; 1
     ec8:	50 40       	sbci	r21, 0x00	; 0
     eca:	e0 f7       	brcc	.-8      	; 0xec4 <memset+0x4>
     ecc:	08 95       	ret

00000ece <strnlen>:
     ece:	fc 01       	movw	r30, r24
     ed0:	61 50       	subi	r22, 0x01	; 1
     ed2:	70 40       	sbci	r23, 0x00	; 0
     ed4:	01 90       	ld	r0, Z+
     ed6:	01 10       	cpse	r0, r1
     ed8:	d8 f7       	brcc	.-10     	; 0xed0 <strnlen+0x2>
     eda:	80 95       	com	r24
     edc:	90 95       	com	r25
     ede:	8e 0f       	add	r24, r30
     ee0:	9f 1f       	adc	r25, r31
     ee2:	08 95       	ret

00000ee4 <fputc>:
     ee4:	0f 93       	push	r16
     ee6:	1f 93       	push	r17
     ee8:	cf 93       	push	r28
     eea:	df 93       	push	r29
     eec:	18 2f       	mov	r17, r24
     eee:	09 2f       	mov	r16, r25
     ef0:	eb 01       	movw	r28, r22
     ef2:	8b 81       	ldd	r24, Y+3	; 0x03
     ef4:	81 fd       	sbrc	r24, 1
     ef6:	03 c0       	rjmp	.+6      	; 0xefe <fputc+0x1a>
     ef8:	8f ef       	ldi	r24, 0xFF	; 255
     efa:	9f ef       	ldi	r25, 0xFF	; 255
     efc:	20 c0       	rjmp	.+64     	; 0xf3e <fputc+0x5a>
     efe:	82 ff       	sbrs	r24, 2
     f00:	10 c0       	rjmp	.+32     	; 0xf22 <fputc+0x3e>
     f02:	4e 81       	ldd	r20, Y+6	; 0x06
     f04:	5f 81       	ldd	r21, Y+7	; 0x07
     f06:	2c 81       	ldd	r18, Y+4	; 0x04
     f08:	3d 81       	ldd	r19, Y+5	; 0x05
     f0a:	42 17       	cp	r20, r18
     f0c:	53 07       	cpc	r21, r19
     f0e:	7c f4       	brge	.+30     	; 0xf2e <fputc+0x4a>
     f10:	e8 81       	ld	r30, Y
     f12:	f9 81       	ldd	r31, Y+1	; 0x01
     f14:	9f 01       	movw	r18, r30
     f16:	2f 5f       	subi	r18, 0xFF	; 255
     f18:	3f 4f       	sbci	r19, 0xFF	; 255
     f1a:	39 83       	std	Y+1, r19	; 0x01
     f1c:	28 83       	st	Y, r18
     f1e:	10 83       	st	Z, r17
     f20:	06 c0       	rjmp	.+12     	; 0xf2e <fputc+0x4a>
     f22:	e8 85       	ldd	r30, Y+8	; 0x08
     f24:	f9 85       	ldd	r31, Y+9	; 0x09
     f26:	81 2f       	mov	r24, r17
     f28:	09 95       	icall
     f2a:	89 2b       	or	r24, r25
     f2c:	29 f7       	brne	.-54     	; 0xef8 <fputc+0x14>
     f2e:	2e 81       	ldd	r18, Y+6	; 0x06
     f30:	3f 81       	ldd	r19, Y+7	; 0x07
     f32:	2f 5f       	subi	r18, 0xFF	; 255
     f34:	3f 4f       	sbci	r19, 0xFF	; 255
     f36:	3f 83       	std	Y+7, r19	; 0x07
     f38:	2e 83       	std	Y+6, r18	; 0x06
     f3a:	81 2f       	mov	r24, r17
     f3c:	90 2f       	mov	r25, r16
     f3e:	df 91       	pop	r29
     f40:	cf 91       	pop	r28
     f42:	1f 91       	pop	r17
     f44:	0f 91       	pop	r16
     f46:	08 95       	ret

00000f48 <__ultoa_invert>:
     f48:	fa 01       	movw	r30, r20
     f4a:	aa 27       	eor	r26, r26
     f4c:	28 30       	cpi	r18, 0x08	; 8
     f4e:	51 f1       	breq	.+84     	; 0xfa4 <__ultoa_invert+0x5c>
     f50:	20 31       	cpi	r18, 0x10	; 16
     f52:	81 f1       	breq	.+96     	; 0xfb4 <__ultoa_invert+0x6c>
     f54:	e8 94       	clt
     f56:	6f 93       	push	r22
     f58:	6e 7f       	andi	r22, 0xFE	; 254
     f5a:	6e 5f       	subi	r22, 0xFE	; 254
     f5c:	7f 4f       	sbci	r23, 0xFF	; 255
     f5e:	8f 4f       	sbci	r24, 0xFF	; 255
     f60:	9f 4f       	sbci	r25, 0xFF	; 255
     f62:	af 4f       	sbci	r26, 0xFF	; 255
     f64:	b1 e0       	ldi	r27, 0x01	; 1
     f66:	3e d0       	rcall	.+124    	; 0xfe4 <__ultoa_invert+0x9c>
     f68:	b4 e0       	ldi	r27, 0x04	; 4
     f6a:	3c d0       	rcall	.+120    	; 0xfe4 <__ultoa_invert+0x9c>
     f6c:	67 0f       	add	r22, r23
     f6e:	78 1f       	adc	r23, r24
     f70:	89 1f       	adc	r24, r25
     f72:	9a 1f       	adc	r25, r26
     f74:	a1 1d       	adc	r26, r1
     f76:	68 0f       	add	r22, r24
     f78:	79 1f       	adc	r23, r25
     f7a:	8a 1f       	adc	r24, r26
     f7c:	91 1d       	adc	r25, r1
     f7e:	a1 1d       	adc	r26, r1
     f80:	6a 0f       	add	r22, r26
     f82:	71 1d       	adc	r23, r1
     f84:	81 1d       	adc	r24, r1
     f86:	91 1d       	adc	r25, r1
     f88:	a1 1d       	adc	r26, r1
     f8a:	20 d0       	rcall	.+64     	; 0xfcc <__ultoa_invert+0x84>
     f8c:	09 f4       	brne	.+2      	; 0xf90 <__ultoa_invert+0x48>
     f8e:	68 94       	set
     f90:	3f 91       	pop	r19
     f92:	2a e0       	ldi	r18, 0x0A	; 10
     f94:	26 9f       	mul	r18, r22
     f96:	11 24       	eor	r1, r1
     f98:	30 19       	sub	r19, r0
     f9a:	30 5d       	subi	r19, 0xD0	; 208
     f9c:	31 93       	st	Z+, r19
     f9e:	de f6       	brtc	.-74     	; 0xf56 <__ultoa_invert+0xe>
     fa0:	cf 01       	movw	r24, r30
     fa2:	08 95       	ret
     fa4:	46 2f       	mov	r20, r22
     fa6:	47 70       	andi	r20, 0x07	; 7
     fa8:	40 5d       	subi	r20, 0xD0	; 208
     faa:	41 93       	st	Z+, r20
     fac:	b3 e0       	ldi	r27, 0x03	; 3
     fae:	0f d0       	rcall	.+30     	; 0xfce <__ultoa_invert+0x86>
     fb0:	c9 f7       	brne	.-14     	; 0xfa4 <__ultoa_invert+0x5c>
     fb2:	f6 cf       	rjmp	.-20     	; 0xfa0 <__ultoa_invert+0x58>
     fb4:	46 2f       	mov	r20, r22
     fb6:	4f 70       	andi	r20, 0x0F	; 15
     fb8:	40 5d       	subi	r20, 0xD0	; 208
     fba:	4a 33       	cpi	r20, 0x3A	; 58
     fbc:	18 f0       	brcs	.+6      	; 0xfc4 <__ultoa_invert+0x7c>
     fbe:	49 5d       	subi	r20, 0xD9	; 217
     fc0:	31 fd       	sbrc	r19, 1
     fc2:	40 52       	subi	r20, 0x20	; 32
     fc4:	41 93       	st	Z+, r20
     fc6:	02 d0       	rcall	.+4      	; 0xfcc <__ultoa_invert+0x84>
     fc8:	a9 f7       	brne	.-22     	; 0xfb4 <__ultoa_invert+0x6c>
     fca:	ea cf       	rjmp	.-44     	; 0xfa0 <__ultoa_invert+0x58>
     fcc:	b4 e0       	ldi	r27, 0x04	; 4
     fce:	a6 95       	lsr	r26
     fd0:	97 95       	ror	r25
     fd2:	87 95       	ror	r24
     fd4:	77 95       	ror	r23
     fd6:	67 95       	ror	r22
     fd8:	ba 95       	dec	r27
     fda:	c9 f7       	brne	.-14     	; 0xfce <__ultoa_invert+0x86>
     fdc:	00 97       	sbiw	r24, 0x00	; 0
     fde:	61 05       	cpc	r22, r1
     fe0:	71 05       	cpc	r23, r1
     fe2:	08 95       	ret
     fe4:	9b 01       	movw	r18, r22
     fe6:	ac 01       	movw	r20, r24
     fe8:	0a 2e       	mov	r0, r26
     fea:	06 94       	lsr	r0
     fec:	57 95       	ror	r21
     fee:	47 95       	ror	r20
     ff0:	37 95       	ror	r19
     ff2:	27 95       	ror	r18
     ff4:	ba 95       	dec	r27
     ff6:	c9 f7       	brne	.-14     	; 0xfea <__ultoa_invert+0xa2>
     ff8:	62 0f       	add	r22, r18
     ffa:	73 1f       	adc	r23, r19
     ffc:	84 1f       	adc	r24, r20
     ffe:	95 1f       	adc	r25, r21
    1000:	a0 1d       	adc	r26, r0
    1002:	08 95       	ret

00001004 <__prologue_saves__>:
    1004:	2f 92       	push	r2
    1006:	3f 92       	push	r3
    1008:	4f 92       	push	r4
    100a:	5f 92       	push	r5
    100c:	6f 92       	push	r6
    100e:	7f 92       	push	r7
    1010:	8f 92       	push	r8
    1012:	9f 92       	push	r9
    1014:	af 92       	push	r10
    1016:	bf 92       	push	r11
    1018:	cf 92       	push	r12
    101a:	df 92       	push	r13
    101c:	ef 92       	push	r14
    101e:	ff 92       	push	r15
    1020:	0f 93       	push	r16
    1022:	1f 93       	push	r17
    1024:	cf 93       	push	r28
    1026:	df 93       	push	r29
    1028:	cd b7       	in	r28, 0x3d	; 61
    102a:	de b7       	in	r29, 0x3e	; 62
    102c:	ca 1b       	sub	r28, r26
    102e:	db 0b       	sbc	r29, r27
    1030:	0f b6       	in	r0, 0x3f	; 63
    1032:	f8 94       	cli
    1034:	de bf       	out	0x3e, r29	; 62
    1036:	0f be       	out	0x3f, r0	; 63
    1038:	cd bf       	out	0x3d, r28	; 61
    103a:	09 94       	ijmp

0000103c <__epilogue_restores__>:
    103c:	2a 88       	ldd	r2, Y+18	; 0x12
    103e:	39 88       	ldd	r3, Y+17	; 0x11
    1040:	48 88       	ldd	r4, Y+16	; 0x10
    1042:	5f 84       	ldd	r5, Y+15	; 0x0f
    1044:	6e 84       	ldd	r6, Y+14	; 0x0e
    1046:	7d 84       	ldd	r7, Y+13	; 0x0d
    1048:	8c 84       	ldd	r8, Y+12	; 0x0c
    104a:	9b 84       	ldd	r9, Y+11	; 0x0b
    104c:	aa 84       	ldd	r10, Y+10	; 0x0a
    104e:	b9 84       	ldd	r11, Y+9	; 0x09
    1050:	c8 84       	ldd	r12, Y+8	; 0x08
    1052:	df 80       	ldd	r13, Y+7	; 0x07
    1054:	ee 80       	ldd	r14, Y+6	; 0x06
    1056:	fd 80       	ldd	r15, Y+5	; 0x05
    1058:	0c 81       	ldd	r16, Y+4	; 0x04
    105a:	1b 81       	ldd	r17, Y+3	; 0x03
    105c:	aa 81       	ldd	r26, Y+2	; 0x02
    105e:	b9 81       	ldd	r27, Y+1	; 0x01
    1060:	ce 0f       	add	r28, r30
    1062:	d1 1d       	adc	r29, r1
    1064:	0f b6       	in	r0, 0x3f	; 63
    1066:	f8 94       	cli
    1068:	de bf       	out	0x3e, r29	; 62
    106a:	0f be       	out	0x3f, r0	; 63
    106c:	cd bf       	out	0x3d, r28	; 61
    106e:	ed 01       	movw	r28, r26
    1070:	08 95       	ret

00001072 <_exit>:
    1072:	f8 94       	cli

00001074 <__stop_program>:
    1074:	ff cf       	rjmp	.-2      	; 0x1074 <__stop_program>
