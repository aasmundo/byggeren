
rs232.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000160  00800100  00001704  00001798  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001704  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004b  00800260  00800260  000018f8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000018f8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002e0  00000000  00000000  00001954  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000244d  00000000  00000000  00001c34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000100d  00000000  00000000  00004081  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000dbb  00000000  00000000  0000508e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000784  00000000  00000000  00005e4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000083b  00000000  00000000  000065d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001391  00000000  00000000  00006e0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000230  00000000  00000000  0000819c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bc 01 	jmp	0x378	; 0x378 <__ctors_end>
       4:	0c 94 20 06 	jmp	0xc40	; 0xc40 <__vector_1>
       8:	0c 94 75 06 	jmp	0xcea	; 0xcea <__vector_2>
       c:	0c 94 aa 06 	jmp	0xd54	; 0xd54 <__vector_3>
      10:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      14:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      18:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      1c:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      20:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      24:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      28:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      2c:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      30:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      34:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__vector_13>
      38:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      3c:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      40:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      44:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      48:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      4c:	0c 94 ea 06 	jmp	0xdd4	; 0xdd4 <__vector_19>
      50:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      54:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      58:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      5c:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      60:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      64:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      68:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>
      6c:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	7f 3e       	cpi	r23, 0xEF	; 239
      74:	1c 08       	sbc	r1, r12
      76:	00 00       	nop
      78:	ff ff       	.word	0xffff	; ????
      7a:	7e 7e       	andi	r23, 0xEE	; 238
      7c:	3c 3c       	cpi	r19, 0xCC	; 204
      7e:	18 18       	sub	r1, r8
	...
      88:	00 06       	cpc	r0, r16
      8a:	5f 5f       	subi	r21, 0xFF	; 255
      8c:	06 00       	.word	0x0006	; ????
      8e:	00 00       	nop
      90:	00 07       	cpc	r16, r16
      92:	07 00       	.word	0x0007	; ????
      94:	07 07       	cpc	r16, r23
      96:	00 00       	nop
      98:	14 7f       	andi	r17, 0xF4	; 244
      9a:	7f 14       	cp	r7, r15
      9c:	7f 7f       	andi	r23, 0xFF	; 255
      9e:	14 00       	.word	0x0014	; ????
      a0:	24 2e       	mov	r2, r20
      a2:	6b 6b       	ori	r22, 0xBB	; 187
      a4:	3a 12       	cpse	r3, r26
      a6:	00 00       	nop
      a8:	46 66       	ori	r20, 0x66	; 102
      aa:	30 18       	sub	r3, r0
      ac:	0c 66       	ori	r16, 0x6C	; 108
      ae:	62 00       	.word	0x0062	; ????
      b0:	30 7a       	andi	r19, 0xA0	; 160
      b2:	4f 5d       	subi	r20, 0xDF	; 223
      b4:	37 7a       	andi	r19, 0xA7	; 167
      b6:	48 00       	.word	0x0048	; ????
      b8:	04 07       	cpc	r16, r20
      ba:	03 00       	.word	0x0003	; ????
      bc:	00 00       	nop
      be:	00 00       	nop
      c0:	00 1c       	adc	r0, r0
      c2:	3e 63       	ori	r19, 0x3E	; 62
      c4:	41 00       	.word	0x0041	; ????
      c6:	00 00       	nop
      c8:	00 41       	sbci	r16, 0x10	; 16
      ca:	63 3e       	cpi	r22, 0xE3	; 227
      cc:	1c 00       	.word	0x001c	; ????
      ce:	00 00       	nop
      d0:	08 2a       	or	r0, r24
      d2:	3e 1c       	adc	r3, r14
      d4:	1c 3e       	cpi	r17, 0xEC	; 236
      d6:	2a 08       	sbc	r2, r10
      d8:	08 08       	sbc	r0, r8
      da:	3e 3e       	cpi	r19, 0xEE	; 238
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 a0       	ldd	r0, Z+32	; 0x20
      e2:	e0 60       	ori	r30, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	08 08       	sbc	r0, r8
      ea:	08 08       	sbc	r0, r8
      ec:	08 08       	sbc	r0, r8
      ee:	00 00       	nop
      f0:	00 00       	nop
      f2:	60 60       	ori	r22, 0x00	; 0
      f4:	00 00       	nop
      f6:	00 00       	nop
      f8:	60 30       	cpi	r22, 0x00	; 0
      fa:	18 0c       	add	r1, r8
      fc:	06 03       	mulsu	r16, r22
      fe:	01 00       	.word	0x0001	; ????
     100:	3e 7f       	andi	r19, 0xFE	; 254
     102:	59 4d       	sbci	r21, 0xD9	; 217
     104:	7f 3e       	cpi	r23, 0xEF	; 239
     106:	00 00       	nop
     108:	42 42       	sbci	r20, 0x22	; 34
     10a:	7f 7f       	andi	r23, 0xFF	; 255
     10c:	40 40       	sbci	r20, 0x00	; 0
     10e:	00 00       	nop
     110:	62 73       	andi	r22, 0x32	; 50
     112:	59 49       	sbci	r21, 0x99	; 153
     114:	6f 66       	ori	r22, 0x6F	; 111
     116:	00 00       	nop
     118:	22 63       	ori	r18, 0x32	; 50
     11a:	49 49       	sbci	r20, 0x99	; 153
     11c:	7f 36       	cpi	r23, 0x6F	; 111
     11e:	00 00       	nop
     120:	18 1c       	adc	r1, r8
     122:	16 13       	cpse	r17, r22
     124:	7f 7f       	andi	r23, 0xFF	; 255
     126:	10 00       	.word	0x0010	; ????
     128:	27 67       	ori	r18, 0x77	; 119
     12a:	45 45       	sbci	r20, 0x55	; 85
     12c:	7d 39       	cpi	r23, 0x9D	; 157
     12e:	00 00       	nop
     130:	3c 7e       	andi	r19, 0xEC	; 236
     132:	4b 49       	sbci	r20, 0x9B	; 155
     134:	79 30       	cpi	r23, 0x09	; 9
     136:	00 00       	nop
     138:	03 63       	ori	r16, 0x33	; 51
     13a:	71 19       	sub	r23, r1
     13c:	0f 07       	cpc	r16, r31
     13e:	00 00       	nop
     140:	36 7f       	andi	r19, 0xF6	; 246
     142:	49 49       	sbci	r20, 0x99	; 153
     144:	7f 36       	cpi	r23, 0x6F	; 111
     146:	00 00       	nop
     148:	06 4f       	sbci	r16, 0xF6	; 246
     14a:	49 69       	ori	r20, 0x99	; 153
     14c:	3f 1e       	adc	r3, r31
     14e:	00 00       	nop
     150:	00 00       	nop
     152:	6c 6c       	ori	r22, 0xCC	; 204
     154:	00 00       	nop
     156:	00 00       	nop
     158:	00 a0       	ldd	r0, Z+32	; 0x20
     15a:	ec 6c       	ori	r30, 0xCC	; 204
     15c:	00 00       	nop
     15e:	00 00       	nop
     160:	08 1c       	adc	r0, r8
     162:	36 63       	ori	r19, 0x36	; 54
     164:	41 00       	.word	0x0041	; ????
     166:	00 00       	nop
     168:	14 14       	cp	r1, r4
     16a:	14 14       	cp	r1, r4
     16c:	14 14       	cp	r1, r4
     16e:	00 00       	nop
     170:	00 41       	sbci	r16, 0x10	; 16
     172:	63 36       	cpi	r22, 0x63	; 99
     174:	1c 08       	sbc	r1, r12
     176:	00 00       	nop
     178:	02 03       	mulsu	r16, r18
     17a:	51 59       	subi	r21, 0x91	; 145
     17c:	0f 06       	cpc	r0, r31
     17e:	00 00       	nop
     180:	3e 7f       	andi	r19, 0xFE	; 254
     182:	41 5d       	subi	r20, 0xD1	; 209
     184:	5d 1f       	adc	r21, r29
     186:	1e 00       	.word	0x001e	; ????
     188:	7c 7e       	andi	r23, 0xEC	; 236
     18a:	13 13       	cpse	r17, r19
     18c:	7e 7c       	andi	r23, 0xCE	; 206
     18e:	00 00       	nop
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 49       	sbci	r23, 0x9F	; 159
     194:	49 7f       	andi	r20, 0xF9	; 249
     196:	36 00       	.word	0x0036	; ????
     198:	1c 3e       	cpi	r17, 0xEC	; 236
     19a:	63 41       	sbci	r22, 0x13	; 19
     19c:	41 63       	ori	r20, 0x31	; 49
     19e:	22 00       	.word	0x0022	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 41       	sbci	r23, 0x1F	; 31
     1a4:	63 7f       	andi	r22, 0xF3	; 243
     1a6:	1c 00       	.word	0x001c	; ????
     1a8:	41 7f       	andi	r20, 0xF1	; 241
     1aa:	7f 49       	sbci	r23, 0x9F	; 159
     1ac:	5d 41       	sbci	r21, 0x1D	; 29
     1ae:	63 00       	.word	0x0063	; ????
     1b0:	41 7f       	andi	r20, 0xF1	; 241
     1b2:	7f 49       	sbci	r23, 0x9F	; 159
     1b4:	1d 01       	movw	r2, r26
     1b6:	03 00       	.word	0x0003	; ????
     1b8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ba:	63 41       	sbci	r22, 0x13	; 19
     1bc:	51 73       	andi	r21, 0x31	; 49
     1be:	72 00       	.word	0x0072	; ????
     1c0:	7f 7f       	andi	r23, 0xFF	; 255
     1c2:	08 08       	sbc	r0, r8
     1c4:	7f 7f       	andi	r23, 0xFF	; 255
     1c6:	00 00       	nop
     1c8:	00 41       	sbci	r16, 0x10	; 16
     1ca:	7f 7f       	andi	r23, 0xFF	; 255
     1cc:	41 00       	.word	0x0041	; ????
     1ce:	00 00       	nop
     1d0:	30 70       	andi	r19, 0x00	; 0
     1d2:	40 41       	sbci	r20, 0x10	; 16
     1d4:	7f 3f       	cpi	r23, 0xFF	; 255
     1d6:	01 00       	.word	0x0001	; ????
     1d8:	41 7f       	andi	r20, 0xF1	; 241
     1da:	7f 08       	sbc	r7, r15
     1dc:	1c 77       	andi	r17, 0x7C	; 124
     1de:	63 00       	.word	0x0063	; ????
     1e0:	41 7f       	andi	r20, 0xF1	; 241
     1e2:	7f 41       	sbci	r23, 0x1F	; 31
     1e4:	40 60       	ori	r20, 0x00	; 0
     1e6:	70 00       	.word	0x0070	; ????
     1e8:	7f 7f       	andi	r23, 0xFF	; 255
     1ea:	06 0c       	add	r0, r6
     1ec:	06 7f       	andi	r16, 0xF6	; 246
     1ee:	7f 00       	.word	0x007f	; ????
     1f0:	7f 7f       	andi	r23, 0xFF	; 255
     1f2:	06 0c       	add	r0, r6
     1f4:	18 7f       	andi	r17, 0xF8	; 248
     1f6:	7f 00       	.word	0x007f	; ????
     1f8:	1c 3e       	cpi	r17, 0xEC	; 236
     1fa:	63 41       	sbci	r22, 0x13	; 19
     1fc:	63 3e       	cpi	r22, 0xE3	; 227
     1fe:	1c 00       	.word	0x001c	; ????
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 49       	sbci	r23, 0x9F	; 159
     204:	09 0f       	add	r16, r25
     206:	06 00       	.word	0x0006	; ????
     208:	1e 3f       	cpi	r17, 0xFE	; 254
     20a:	21 71       	andi	r18, 0x11	; 17
     20c:	7f 5e       	subi	r23, 0xEF	; 239
     20e:	00 00       	nop
     210:	41 7f       	andi	r20, 0xF1	; 241
     212:	7f 19       	sub	r23, r15
     214:	39 6f       	ori	r19, 0xF9	; 249
     216:	46 00       	.word	0x0046	; ????
     218:	26 67       	ori	r18, 0x76	; 118
     21a:	4d 59       	subi	r20, 0x9D	; 157
     21c:	7b 32       	cpi	r23, 0x2B	; 43
     21e:	00 00       	nop
     220:	03 41       	sbci	r16, 0x13	; 19
     222:	7f 7f       	andi	r23, 0xFF	; 255
     224:	41 03       	mulsu	r20, r17
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	7f 7f       	andi	r23, 0xFF	; 255
     22e:	00 00       	nop
     230:	1f 3f       	cpi	r17, 0xFF	; 255
     232:	60 60       	ori	r22, 0x00	; 0
     234:	3f 1f       	adc	r19, r31
     236:	00 00       	nop
     238:	7f 7f       	andi	r23, 0xFF	; 255
     23a:	30 18       	sub	r3, r0
     23c:	30 7f       	andi	r19, 0xF0	; 240
     23e:	7f 00       	.word	0x007f	; ????
     240:	63 77       	andi	r22, 0x73	; 115
     242:	1c 08       	sbc	r1, r12
     244:	1c 77       	andi	r17, 0x7C	; 124
     246:	63 00       	.word	0x0063	; ????
     248:	07 4f       	sbci	r16, 0xF7	; 247
     24a:	78 78       	andi	r23, 0x88	; 136
     24c:	4f 07       	cpc	r20, r31
     24e:	00 00       	nop
     250:	67 73       	andi	r22, 0x37	; 55
     252:	59 4d       	sbci	r21, 0xD9	; 217
     254:	47 63       	ori	r20, 0x37	; 55
     256:	71 00       	.word	0x0071	; ????
     258:	00 7f       	andi	r16, 0xF0	; 240
     25a:	7f 41       	sbci	r23, 0x1F	; 31
     25c:	41 00       	.word	0x0041	; ????
     25e:	00 00       	nop
     260:	01 03       	mulsu	r16, r17
     262:	06 0c       	add	r0, r6
     264:	18 30       	cpi	r17, 0x08	; 8
     266:	60 00       	.word	0x0060	; ????
     268:	00 41       	sbci	r16, 0x10	; 16
     26a:	41 7f       	andi	r20, 0xF1	; 241
     26c:	7f 00       	.word	0x007f	; ????
     26e:	00 00       	nop
     270:	08 0c       	add	r0, r8
     272:	06 03       	mulsu	r16, r22
     274:	06 0c       	add	r0, r6
     276:	08 00       	.word	0x0008	; ????
     278:	80 80       	ld	r8, Z
     27a:	80 80       	ld	r8, Z
     27c:	80 80       	ld	r8, Z
     27e:	80 80       	ld	r8, Z
     280:	00 00       	nop
     282:	03 07       	cpc	r16, r19
     284:	04 00       	.word	0x0004	; ????
     286:	00 00       	nop
     288:	20 74       	andi	r18, 0x40	; 64
     28a:	54 54       	subi	r21, 0x44	; 68
     28c:	3c 78       	andi	r19, 0x8C	; 140
     28e:	40 00       	.word	0x0040	; ????
     290:	41 3f       	cpi	r20, 0xF1	; 241
     292:	7f 44       	sbci	r23, 0x4F	; 79
     294:	44 7c       	andi	r20, 0xC4	; 196
     296:	38 00       	.word	0x0038	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	44 44       	sbci	r20, 0x44	; 68
     29c:	6c 28       	or	r6, r12
     29e:	00 00       	nop
     2a0:	30 78       	andi	r19, 0x80	; 128
     2a2:	48 49       	sbci	r20, 0x98	; 152
     2a4:	3f 7f       	andi	r19, 0xFF	; 255
     2a6:	40 00       	.word	0x0040	; ????
     2a8:	38 7c       	andi	r19, 0xC8	; 200
     2aa:	54 54       	subi	r21, 0x44	; 68
     2ac:	5c 18       	sub	r5, r12
     2ae:	00 00       	nop
     2b0:	48 7e       	andi	r20, 0xE8	; 232
     2b2:	7f 49       	sbci	r23, 0x9F	; 159
     2b4:	03 02       	muls	r16, r19
     2b6:	00 00       	nop
     2b8:	98 bc       	out	0x28, r9	; 40
     2ba:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2bc:	f8 7c       	andi	r31, 0xC8	; 200
     2be:	04 00       	.word	0x0004	; ????
     2c0:	41 7f       	andi	r20, 0xF1	; 241
     2c2:	7f 08       	sbc	r7, r15
     2c4:	04 7c       	andi	r16, 0xC4	; 196
     2c6:	78 00       	.word	0x0078	; ????
     2c8:	00 44       	sbci	r16, 0x40	; 64
     2ca:	7d 7d       	andi	r23, 0xDD	; 221
     2cc:	40 00       	.word	0x0040	; ????
     2ce:	00 00       	nop
     2d0:	40 c4       	rjmp	.+2176   	; 0xb52 <main+0x4c>
     2d2:	84 fd       	sbrc	r24, 4
     2d4:	7d 00       	.word	0x007d	; ????
     2d6:	00 00       	nop
     2d8:	41 7f       	andi	r20, 0xF1	; 241
     2da:	7f 10       	cpse	r7, r15
     2dc:	38 6c       	ori	r19, 0xC8	; 200
     2de:	44 00       	.word	0x0044	; ????
     2e0:	00 41       	sbci	r16, 0x10	; 16
     2e2:	7f 7f       	andi	r23, 0xFF	; 255
     2e4:	40 00       	.word	0x0040	; ????
     2e6:	00 00       	nop
     2e8:	7c 7c       	andi	r23, 0xCC	; 204
     2ea:	0c 18       	sub	r0, r12
     2ec:	0c 7c       	andi	r16, 0xCC	; 204
     2ee:	78 00       	.word	0x0078	; ????
     2f0:	7c 7c       	andi	r23, 0xCC	; 204
     2f2:	04 04       	cpc	r0, r4
     2f4:	7c 78       	andi	r23, 0x8C	; 140
     2f6:	00 00       	nop
     2f8:	38 7c       	andi	r19, 0xC8	; 200
     2fa:	44 44       	sbci	r20, 0x44	; 68
     2fc:	7c 38       	cpi	r23, 0x8C	; 140
     2fe:	00 00       	nop
     300:	84 fc       	sbrc	r8, 4
     302:	f8 a4       	ldd	r15, Y+40	; 0x28
     304:	24 3c       	cpi	r18, 0xC4	; 196
     306:	18 00       	.word	0x0018	; ????
     308:	18 3c       	cpi	r17, 0xC8	; 200
     30a:	24 a4       	ldd	r2, Z+44	; 0x2c
     30c:	f8 fc       	.word	0xfcf8	; ????
     30e:	84 00       	.word	0x0084	; ????
     310:	44 7c       	andi	r20, 0xC4	; 196
     312:	78 44       	sbci	r23, 0x48	; 72
     314:	1c 18       	sub	r1, r12
     316:	00 00       	nop
     318:	48 5c       	subi	r20, 0xC8	; 200
     31a:	54 54       	subi	r21, 0x44	; 68
     31c:	74 24       	eor	r7, r4
     31e:	00 00       	nop
     320:	00 04       	cpc	r0, r0
     322:	3e 7f       	andi	r19, 0xFE	; 254
     324:	44 24       	eor	r4, r4
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	40 40       	sbci	r20, 0x00	; 0
     32c:	3c 7c       	andi	r19, 0xCC	; 204
     32e:	40 00       	.word	0x0040	; ????
     330:	1c 3c       	cpi	r17, 0xCC	; 204
     332:	60 60       	ori	r22, 0x00	; 0
     334:	3c 1c       	adc	r3, r12
     336:	00 00       	nop
     338:	3c 7c       	andi	r19, 0xCC	; 204
     33a:	60 30       	cpi	r22, 0x00	; 0
     33c:	60 7c       	andi	r22, 0xC0	; 192
     33e:	3c 00       	.word	0x003c	; ????
     340:	44 6c       	ori	r20, 0xC4	; 196
     342:	38 10       	cpse	r3, r8
     344:	38 6c       	ori	r19, 0xC8	; 200
     346:	44 00       	.word	0x0044	; ????
     348:	9c bc       	out	0x2c, r9	; 44
     34a:	a0 a0       	ldd	r10, Z+32	; 0x20
     34c:	fc 7c       	andi	r31, 0xCC	; 204
     34e:	00 00       	nop
     350:	4c 64       	ori	r20, 0x4C	; 76
     352:	74 5c       	subi	r23, 0xC4	; 196
     354:	4c 64       	ori	r20, 0x4C	; 76
     356:	00 00       	nop
     358:	08 08       	sbc	r0, r8
     35a:	3e 77       	andi	r19, 0x7E	; 126
     35c:	41 41       	sbci	r20, 0x11	; 17
     35e:	00 00       	nop
     360:	00 00       	nop
     362:	00 77       	andi	r16, 0x70	; 112
     364:	77 00       	.word	0x0077	; ????
     366:	00 00       	nop
     368:	41 41       	sbci	r20, 0x11	; 17
     36a:	77 3e       	cpi	r23, 0xE7	; 231
     36c:	08 08       	sbc	r0, r8
     36e:	00 00       	nop
     370:	02 03       	mulsu	r16, r18
     372:	01 03       	mulsu	r16, r17
     374:	02 03       	mulsu	r16, r18
     376:	01 00       	.word	0x0001	; ????

00000378 <__ctors_end>:
     378:	11 24       	eor	r1, r1
     37a:	1f be       	out	0x3f, r1	; 63
     37c:	cf ef       	ldi	r28, 0xFF	; 255
     37e:	d4 e0       	ldi	r29, 0x04	; 4
     380:	de bf       	out	0x3e, r29	; 62
     382:	cd bf       	out	0x3d, r28	; 61

00000384 <__do_copy_data>:
     384:	12 e0       	ldi	r17, 0x02	; 2
     386:	a0 e0       	ldi	r26, 0x00	; 0
     388:	b1 e0       	ldi	r27, 0x01	; 1
     38a:	e4 e0       	ldi	r30, 0x04	; 4
     38c:	f7 e1       	ldi	r31, 0x17	; 23
     38e:	02 c0       	rjmp	.+4      	; 0x394 <__do_copy_data+0x10>
     390:	05 90       	lpm	r0, Z+
     392:	0d 92       	st	X+, r0
     394:	a0 36       	cpi	r26, 0x60	; 96
     396:	b1 07       	cpc	r27, r17
     398:	d9 f7       	brne	.-10     	; 0x390 <__do_copy_data+0xc>

0000039a <__do_clear_bss>:
     39a:	22 e0       	ldi	r18, 0x02	; 2
     39c:	a0 e6       	ldi	r26, 0x60	; 96
     39e:	b2 e0       	ldi	r27, 0x02	; 2
     3a0:	01 c0       	rjmp	.+2      	; 0x3a4 <.do_clear_bss_start>

000003a2 <.do_clear_bss_loop>:
     3a2:	1d 92       	st	X+, r1

000003a4 <.do_clear_bss_start>:
     3a4:	ab 3a       	cpi	r26, 0xAB	; 171
     3a6:	b2 07       	cpc	r27, r18
     3a8:	e1 f7       	brne	.-8      	; 0x3a2 <.do_clear_bss_loop>
     3aa:	0e 94 83 05 	call	0xb06	; 0xb06 <main>
     3ae:	0c 94 80 0b 	jmp	0x1700	; 0x1700 <_exit>

000003b2 <__bad_interrupt>:
     3b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003b6 <ADC_busy>:
     3b6:	80 91 60 02 	lds	r24, 0x0260
     3ba:	08 95       	ret

000003bc <ADC_init>:
     3bc:	8b b7       	in	r24, 0x3b	; 59
     3be:	80 64       	ori	r24, 0x40	; 64
     3c0:	8b bf       	out	0x3b, r24	; 59
     3c2:	85 b7       	in	r24, 0x35	; 53
     3c4:	82 60       	ori	r24, 0x02	; 2
     3c6:	85 bf       	out	0x35, r24	; 53
     3c8:	85 b7       	in	r24, 0x35	; 53
     3ca:	8e 7f       	andi	r24, 0xFE	; 254
     3cc:	85 bf       	out	0x35, r24	; 53
     3ce:	78 94       	sei
     3d0:	8d e0       	ldi	r24, 0x0D	; 13
     3d2:	91 e0       	ldi	r25, 0x01	; 1
     3d4:	0e 94 81 08 	call	0x1102	; 0x1102 <puts>
     3d8:	08 95       	ret

000003da <ADC_read>:
     3da:	cf 93       	push	r28
     3dc:	df 93       	push	r29
     3de:	ec 01       	movw	r28, r24
     3e0:	01 97       	sbiw	r24, 0x01	; 1
     3e2:	04 97       	sbiw	r24, 0x04	; 4
     3e4:	68 f0       	brcs	.+26     	; 0x400 <ADC_read+0x26>
     3e6:	df 93       	push	r29
     3e8:	cf 93       	push	r28
     3ea:	8e e1       	ldi	r24, 0x1E	; 30
     3ec:	91 e0       	ldi	r25, 0x01	; 1
     3ee:	9f 93       	push	r25
     3f0:	8f 93       	push	r24
     3f2:	0e 94 6d 08 	call	0x10da	; 0x10da <printf>
     3f6:	0f 90       	pop	r0
     3f8:	0f 90       	pop	r0
     3fa:	0f 90       	pop	r0
     3fc:	0f 90       	pop	r0
     3fe:	0c c0       	rjmp	.+24     	; 0x418 <ADC_read+0x3e>
     400:	81 e0       	ldi	r24, 0x01	; 1
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	0e 94 db 01 	call	0x3b6	; 0x3b6 <ADC_busy>
     408:	fe 01       	movw	r30, r28
     40a:	ed 5f       	subi	r30, 0xFD	; 253
     40c:	fb 4e       	sbci	r31, 0xEB	; 235
     40e:	8c 2f       	mov	r24, r28
     410:	8d 5f       	subi	r24, 0xFD	; 253
     412:	80 83       	st	Z, r24
     414:	c0 93 06 01 	sts	0x0106, r28
     418:	df 91       	pop	r29
     41a:	cf 91       	pop	r28
     41c:	08 95       	ret

0000041e <CAN_init>:
#define RXB0CTRL 0x60
 

void CAN_init()
{
		MCP2515_reset(); 
     41e:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <MCP2515_reset>
		
		MCP2515_bit_modify(CANINTE, 0b00000011, 0b11111111);
     422:	4f ef       	ldi	r20, 0xFF	; 255
     424:	63 e0       	ldi	r22, 0x03	; 3
     426:	8b e2       	ldi	r24, 0x2B	; 43
     428:	0e 94 ba 02 	call	0x574	; 0x574 <MCP2515_bit_modify>
		MCP2515_bit_modify(TXB0CTRL, 0b00000011, 0b11111111); //setter prio til highest message priority
     42c:	4f ef       	ldi	r20, 0xFF	; 255
     42e:	63 e0       	ldi	r22, 0x03	; 3
     430:	80 e3       	ldi	r24, 0x30	; 48
     432:	0e 94 ba 02 	call	0x574	; 0x574 <MCP2515_bit_modify>
		MCP2515_bit_modify(RXB0CTRL, 0b01100100, 0b11111111);
     436:	4f ef       	ldi	r20, 0xFF	; 255
     438:	64 e6       	ldi	r22, 0x64	; 100
     43a:	80 e6       	ldi	r24, 0x60	; 96
     43c:	0e 94 ba 02 	call	0x574	; 0x574 <MCP2515_bit_modify>
		MCP2515_bit_modify(RXB1CTRL, 0b01100000, 0b11111111);
     440:	4f ef       	ldi	r20, 0xFF	; 255
     442:	60 e6       	ldi	r22, 0x60	; 96
     444:	80 e7       	ldi	r24, 0x70	; 112
     446:	0e 94 ba 02 	call	0x574	; 0x574 <MCP2515_bit_modify>
		//MCP2515_write(MCP_REG_RXM0SIDH, 0x00);
		MCP2515_bit_modify(CANCTRL, 0b11100000, 0b01000000);
     44a:	40 e4       	ldi	r20, 0x40	; 64
     44c:	60 ee       	ldi	r22, 0xE0	; 224
     44e:	8f e0       	ldi	r24, 0x0F	; 15
     450:	0e 94 ba 02 	call	0x574	; 0x574 <MCP2515_bit_modify>
		printf("CAN initialized \n");
     454:	8f e3       	ldi	r24, 0x3F	; 63
     456:	91 e0       	ldi	r25, 0x01	; 1
     458:	0e 94 81 08 	call	0x1102	; 0x1102 <puts>
     45c:	08 95       	ret

0000045e <CAN_receive>:
	}
	MCP2515_RTS(0);	
}

union can_msg_t CAN_receive()
{
     45e:	1f 93       	push	r17
     460:	cf 93       	push	r28
     462:	df 93       	push	r29
     464:	ec 01       	movw	r28, r24
	uint8_t CANINTF_copy = MCP2515_read(CANINTF);
     466:	8c e2       	ldi	r24, 0x2C	; 44
     468:	0e 94 67 02 	call	0x4ce	; 0x4ce <MCP2515_read>
	uint8_t RX_num;
	if(test_bit(CANINTF_copy, RX0IF))
     46c:	80 fd       	sbrc	r24, 0
     46e:	0f c0       	rjmp	.+30     	; 0x48e <CAN_receive+0x30>
	{
		RX_num = 0;
	}else if(test_bit(CANINTF_copy, RX1IF))
     470:	81 fd       	sbrc	r24, 1
     472:	0f c0       	rjmp	.+30     	; 0x492 <CAN_receive+0x34>
	{
		RX_num = 1;
	}else
	{
		printf("Error, INT2, ingen av int flaggene i CAN var satt :S, %x \n", CANINTF_copy);
     474:	1f 92       	push	r1
     476:	8f 93       	push	r24
     478:	80 e5       	ldi	r24, 0x50	; 80
     47a:	91 e0       	ldi	r25, 0x01	; 1
     47c:	9f 93       	push	r25
     47e:	8f 93       	push	r24
     480:	0e 94 6d 08 	call	0x10da	; 0x10da <printf>
     484:	0f 90       	pop	r0
     486:	0f 90       	pop	r0
     488:	0f 90       	pop	r0
     48a:	0f 90       	pop	r0
     48c:	03 c0       	rjmp	.+6      	; 0x494 <CAN_receive+0x36>
{
	uint8_t CANINTF_copy = MCP2515_read(CANINTF);
	uint8_t RX_num;
	if(test_bit(CANINTF_copy, RX0IF))
	{
		RX_num = 0;
     48e:	10 e0       	ldi	r17, 0x00	; 0
     490:	01 c0       	rjmp	.+2      	; 0x494 <CAN_receive+0x36>
	}else if(test_bit(CANINTF_copy, RX1IF))
	{
		RX_num = 1;
     492:	11 e0       	ldi	r17, 0x01	; 1
	}else
	{
		printf("Error, INT2, ingen av int flaggene i CAN var satt :S, %x \n", CANINTF_copy);
	}
	
	return MCP2515_RX_read(RX_num);
     494:	61 2f       	mov	r22, r17
     496:	ce 01       	movw	r24, r28
     498:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <MCP2515_RX_read>
}
     49c:	ce 01       	movw	r24, r28
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	1f 91       	pop	r17
     4a4:	08 95       	ret

000004a6 <joy_button_init>:
     4a6:	8b b7       	in	r24, 0x3b	; 59
     4a8:	80 68       	ori	r24, 0x80	; 128
     4aa:	8b bf       	out	0x3b, r24	; 59
     4ac:	85 b7       	in	r24, 0x35	; 53
     4ae:	88 60       	ori	r24, 0x08	; 8
     4b0:	85 bf       	out	0x35, r24	; 53
     4b2:	85 b7       	in	r24, 0x35	; 53
     4b4:	8b 7f       	andi	r24, 0xFB	; 251
     4b6:	85 bf       	out	0x35, r24	; 53
     4b8:	78 94       	sei
     4ba:	8b e8       	ldi	r24, 0x8B	; 139
     4bc:	91 e0       	ldi	r25, 0x01	; 1
     4be:	0e 94 81 08 	call	0x1102	; 0x1102 <puts>
     4c2:	08 95       	ret

000004c4 <y_pos>:
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0e 94 ed 01 	call	0x3da	; 0x3da <ADC_read>
     4cc:	08 95       	ret

000004ce <MCP2515_read>:
#include "MCP2515.h"
#include "SPI.h"
#include "CAN.h"

uint8_t MCP2515_read(uint8_t address)
{
     4ce:	cf 93       	push	r28
     4d0:	c8 2f       	mov	r28, r24
	SPI_CS_low();
     4d2:	0e 94 b9 06 	call	0xd72	; 0xd72 <SPI_CS_low>
	SPI_data(0x03);
     4d6:	83 e0       	ldi	r24, 0x03	; 3
     4d8:	0e 94 c9 06 	call	0xd92	; 0xd92 <SPI_data>
	SPI_data(address);
     4dc:	8c 2f       	mov	r24, r28
     4de:	0e 94 c9 06 	call	0xd92	; 0xd92 <SPI_data>
	uint8_t temp = SPI_data(address);
     4e2:	8c 2f       	mov	r24, r28
     4e4:	0e 94 c9 06 	call	0xd92	; 0xd92 <SPI_data>
     4e8:	c8 2f       	mov	r28, r24
	SPI_CS_high();
     4ea:	0e 94 bb 06 	call	0xd76	; 0xd76 <SPI_CS_high>
	return temp;
}
     4ee:	8c 2f       	mov	r24, r28
     4f0:	cf 91       	pop	r28
     4f2:	08 95       	ret

000004f4 <MCP2515_RX_read>:

union can_msg_t MCP2515_RX_read(uint8_t RX_num)
{
     4f4:	cf 92       	push	r12
     4f6:	df 92       	push	r13
     4f8:	ef 92       	push	r14
     4fa:	ff 92       	push	r15
     4fc:	0f 93       	push	r16
     4fe:	1f 93       	push	r17
     500:	cf 93       	push	r28
     502:	df 93       	push	r29
     504:	cd b7       	in	r28, 0x3d	; 61
     506:	de b7       	in	r29, 0x3e	; 62
     508:	2d 97       	sbiw	r28, 0x0d	; 13
     50a:	0f b6       	in	r0, 0x3f	; 63
     50c:	f8 94       	cli
     50e:	de bf       	out	0x3e, r29	; 62
     510:	0f be       	out	0x3f, r0	; 63
     512:	cd bf       	out	0x3d, r28	; 61
     514:	6c 01       	movw	r12, r24
		instruction = 0b10010000;
	}else
	{
		instruction = 0b10010100;
	}
	SPI_CS_low();
     516:	0e 94 b9 06 	call	0xd72	; 0xd72 <SPI_CS_low>
	SPI_data(instruction);
     51a:	84 e9       	ldi	r24, 0x94	; 148
     51c:	0e 94 c9 06 	call	0xd92	; 0xd92 <SPI_data>
     520:	8e 01       	movw	r16, r28
     522:	0f 5f       	subi	r16, 0xFF	; 255
     524:	1f 4f       	sbci	r17, 0xFF	; 255
     526:	7e 01       	movw	r14, r28
     528:	8e e0       	ldi	r24, 0x0E	; 14
     52a:	e8 0e       	add	r14, r24
     52c:	f1 1c       	adc	r15, r1
	for(int i=0;i<13;i++)
	{
		msg.array[i] = SPI_data(instruction);
     52e:	84 e9       	ldi	r24, 0x94	; 148
     530:	0e 94 c9 06 	call	0xd92	; 0xd92 <SPI_data>
     534:	f8 01       	movw	r30, r16
     536:	81 93       	st	Z+, r24
     538:	8f 01       	movw	r16, r30
	{
		instruction = 0b10010100;
	}
	SPI_CS_low();
	SPI_data(instruction);
	for(int i=0;i<13;i++)
     53a:	ee 15       	cp	r30, r14
     53c:	ff 05       	cpc	r31, r15
     53e:	b9 f7       	brne	.-18     	; 0x52e <__stack+0x2f>
	{
		msg.array[i] = SPI_data(instruction);
	}
	SPI_CS_high();
     540:	0e 94 bb 06 	call	0xd76	; 0xd76 <SPI_CS_high>
	return msg;
     544:	8d e0       	ldi	r24, 0x0D	; 13
     546:	fe 01       	movw	r30, r28
     548:	31 96       	adiw	r30, 0x01	; 1
     54a:	d6 01       	movw	r26, r12
     54c:	01 90       	ld	r0, Z+
     54e:	0d 92       	st	X+, r0
     550:	8a 95       	dec	r24
     552:	e1 f7       	brne	.-8      	; 0x54c <__stack+0x4d>
}
     554:	c6 01       	movw	r24, r12
     556:	2d 96       	adiw	r28, 0x0d	; 13
     558:	0f b6       	in	r0, 0x3f	; 63
     55a:	f8 94       	cli
     55c:	de bf       	out	0x3e, r29	; 62
     55e:	0f be       	out	0x3f, r0	; 63
     560:	cd bf       	out	0x3d, r28	; 61
     562:	df 91       	pop	r29
     564:	cf 91       	pop	r28
     566:	1f 91       	pop	r17
     568:	0f 91       	pop	r16
     56a:	ff 90       	pop	r15
     56c:	ef 90       	pop	r14
     56e:	df 90       	pop	r13
     570:	cf 90       	pop	r12
     572:	08 95       	ret

00000574 <MCP2515_bit_modify>:
	SPI_CS_high();
	return temp;
}

void MCP2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data)
{
     574:	1f 93       	push	r17
     576:	cf 93       	push	r28
     578:	df 93       	push	r29
     57a:	18 2f       	mov	r17, r24
     57c:	d6 2f       	mov	r29, r22
     57e:	c4 2f       	mov	r28, r20
	SPI_CS_low();
     580:	0e 94 b9 06 	call	0xd72	; 0xd72 <SPI_CS_low>
	SPI_data(0x05);
     584:	85 e0       	ldi	r24, 0x05	; 5
     586:	0e 94 c9 06 	call	0xd92	; 0xd92 <SPI_data>
	SPI_data(address);
     58a:	81 2f       	mov	r24, r17
     58c:	0e 94 c9 06 	call	0xd92	; 0xd92 <SPI_data>
	SPI_data(mask);
     590:	8d 2f       	mov	r24, r29
     592:	0e 94 c9 06 	call	0xd92	; 0xd92 <SPI_data>
	SPI_data(data);
     596:	8c 2f       	mov	r24, r28
     598:	0e 94 c9 06 	call	0xd92	; 0xd92 <SPI_data>
	SPI_CS_high();
     59c:	0e 94 bb 06 	call	0xd76	; 0xd76 <SPI_CS_high>
}
     5a0:	df 91       	pop	r29
     5a2:	cf 91       	pop	r28
     5a4:	1f 91       	pop	r17
     5a6:	08 95       	ret

000005a8 <MCP2515_reset>:

void MCP2515_reset()
{
	SPI_CS_low();
     5a8:	0e 94 b9 06 	call	0xd72	; 0xd72 <SPI_CS_low>
	SPI_data(0b11000000);
     5ac:	80 ec       	ldi	r24, 0xC0	; 192
     5ae:	0e 94 c9 06 	call	0xd92	; 0xd92 <SPI_data>
	SPI_CS_high();
     5b2:	0e 94 bb 06 	call	0xd76	; 0xd76 <SPI_CS_high>
     5b6:	08 95       	ret

000005b8 <menu_init>:
uint8_t start = 0;
uint8_t stop = 7;

void menu_init()
{
	TCCR1B |= (1 << WGM12); // Configure timer 1 for CTC mode
     5b8:	8e b5       	in	r24, 0x2e	; 46
     5ba:	88 60       	ori	r24, 0x08	; 8
     5bc:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1 << OCIE1A); // Enable CTC interrupt
     5be:	89 b7       	in	r24, 0x39	; 57
     5c0:	80 64       	ori	r24, 0x40	; 64
     5c2:	89 bf       	out	0x39, r24	; 57
	OCR1A = 1600; // Set CTC compare value to 1Hz at 1MHz AVR clock, with a prescaler of 64
     5c4:	80 e4       	ldi	r24, 0x40	; 64
     5c6:	96 e0       	ldi	r25, 0x06	; 6
     5c8:	9b bd       	out	0x2b, r25	; 43
     5ca:	8a bd       	out	0x2a, r24	; 42
	TCCR1B |= ((1 << CS10) | (1 << CS11)); // Start timer at Fcpu/64
     5cc:	8e b5       	in	r24, 0x2e	; 46
     5ce:	83 60       	ori	r24, 0x03	; 3
     5d0:	8e bd       	out	0x2e, r24	; 46
     5d2:	08 95       	ret

000005d4 <menu_up_or_down>:
}

void menu_up_or_down(int up_down)
{
	//uint8_t last_pos = arrow_pos;
	arrow_pos += up_down;
     5d4:	20 91 62 02 	lds	r18, 0x0262
     5d8:	30 91 63 02 	lds	r19, 0x0263
     5dc:	82 0f       	add	r24, r18
     5de:	93 1f       	adc	r25, r19
     5e0:	90 93 63 02 	sts	0x0263, r25
     5e4:	80 93 62 02 	sts	0x0262, r24
	if(current_menu->prev_menu == NULL){
     5e8:	e0 91 6a 02 	lds	r30, 0x026A
     5ec:	f0 91 6b 02 	lds	r31, 0x026B
     5f0:	81 a1       	ldd	r24, Z+33	; 0x21
     5f2:	92 a1       	ldd	r25, Z+34	; 0x22
     5f4:	89 2b       	or	r24, r25
     5f6:	d1 f4       	brne	.+52     	; 0x62c <menu_up_or_down+0x58>
		if(arrow_pos >=current_menu->num_submenus)
     5f8:	82 81       	ldd	r24, Z+2	; 0x02
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	20 91 62 02 	lds	r18, 0x0262
     600:	30 91 63 02 	lds	r19, 0x0263
     604:	28 17       	cp	r18, r24
     606:	39 07       	cpc	r19, r25
     608:	2c f0       	brlt	.+10     	; 0x614 <menu_up_or_down+0x40>
		{
			//arrow_pos = last_pos;
			arrow_pos = 0;
     60a:	10 92 63 02 	sts	0x0263, r1
     60e:	10 92 62 02 	sts	0x0262, r1
     612:	08 95       	ret
		}else if(arrow_pos < 0)
     614:	20 91 62 02 	lds	r18, 0x0262
     618:	30 91 63 02 	lds	r19, 0x0263
     61c:	33 23       	and	r19, r19
     61e:	0c f5       	brge	.+66     	; 0x662 <menu_up_or_down+0x8e>
		{
			arrow_pos = current_menu->num_submenus-1;
     620:	01 97       	sbiw	r24, 0x01	; 1
     622:	90 93 63 02 	sts	0x0263, r25
     626:	80 93 62 02 	sts	0x0262, r24
     62a:	08 95       	ret
		}	
	}
	else{
		if(arrow_pos >=current_menu->num_submenus+1)
     62c:	82 81       	ldd	r24, Z+2	; 0x02
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	20 91 62 02 	lds	r18, 0x0262
     634:	30 91 63 02 	lds	r19, 0x0263
     638:	ac 01       	movw	r20, r24
     63a:	4f 5f       	subi	r20, 0xFF	; 255
     63c:	5f 4f       	sbci	r21, 0xFF	; 255
     63e:	24 17       	cp	r18, r20
     640:	35 07       	cpc	r19, r21
     642:	2c f0       	brlt	.+10     	; 0x64e <menu_up_or_down+0x7a>
		{
			//arrow_pos = last_pos;
			arrow_pos = 0;
     644:	10 92 63 02 	sts	0x0263, r1
     648:	10 92 62 02 	sts	0x0262, r1
     64c:	08 95       	ret
		}else if(arrow_pos < 0)
     64e:	20 91 62 02 	lds	r18, 0x0262
     652:	30 91 63 02 	lds	r19, 0x0263
     656:	33 23       	and	r19, r19
     658:	24 f4       	brge	.+8      	; 0x662 <menu_up_or_down+0x8e>
		{
			arrow_pos = current_menu->num_submenus;
     65a:	90 93 63 02 	sts	0x0263, r25
     65e:	80 93 62 02 	sts	0x0262, r24
     662:	08 95       	ret

00000664 <print_menu>:
		add_menu("hallo\n", main_menu);
		add_menu("asdfjkjfsagf\n", main_menu);
		add_menu("menu scroll\n", main_menu);
}

void print_menu(){
     664:	cf 93       	push	r28
     666:	df 93       	push	r29
	
	clear_oled();
     668:	0e 94 c4 04 	call	0x988	; 0x988 <clear_oled>
	oled_address_reset();
     66c:	0e 94 99 04 	call	0x932	; 0x932 <oled_address_reset>
	oled_string_print(current_menu->title);
     670:	e0 91 6a 02 	lds	r30, 0x026A
     674:	f0 91 6b 02 	lds	r31, 0x026B
     678:	80 81       	ld	r24, Z
     67a:	91 81       	ldd	r25, Z+1	; 0x01
     67c:	0e 94 72 05 	call	0xae4	; 0xae4 <oled_string_print>
	
	
	if(current_menu->prev_menu == NULL && current_menu->num_submenus <8){
     680:	e0 91 6a 02 	lds	r30, 0x026A
     684:	f0 91 6b 02 	lds	r31, 0x026B
     688:	81 a1       	ldd	r24, Z+33	; 0x21
     68a:	92 a1       	ldd	r25, Z+34	; 0x22
     68c:	89 2b       	or	r24, r25
     68e:	41 f4       	brne	.+16     	; 0x6a0 <print_menu+0x3c>
     690:	82 81       	ldd	r24, Z+2	; 0x02
     692:	88 30       	cpi	r24, 0x08	; 8
     694:	28 f4       	brcc	.+10     	; 0x6a0 <print_menu+0x3c>
		start = 0;
     696:	10 92 61 02 	sts	0x0261, r1
		stop = current_menu->num_submenus;
     69a:	80 93 07 01 	sts	0x0107, r24
     69e:	32 c0       	rjmp	.+100    	; 0x704 <print_menu+0xa0>
	}
	else if(current_menu->num_submenus < 7){
     6a0:	82 81       	ldd	r24, Z+2	; 0x02
     6a2:	87 30       	cpi	r24, 0x07	; 7
     6a4:	30 f4       	brcc	.+12     	; 0x6b2 <print_menu+0x4e>
		start = 0;
     6a6:	10 92 61 02 	sts	0x0261, r1
		stop = current_menu->num_submenus+1;
     6aa:	8f 5f       	subi	r24, 0xFF	; 255
     6ac:	80 93 07 01 	sts	0x0107, r24
     6b0:	29 c0       	rjmp	.+82     	; 0x704 <print_menu+0xa0>
	}
	else
	{
		if(arrow_pos<start)
     6b2:	80 91 62 02 	lds	r24, 0x0262
     6b6:	90 91 63 02 	lds	r25, 0x0263
     6ba:	20 91 61 02 	lds	r18, 0x0261
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	82 17       	cp	r24, r18
     6c2:	93 07       	cpc	r25, r19
     6c4:	54 f4       	brge	.+20     	; 0x6da <print_menu+0x76>
		{
			start = arrow_pos;
     6c6:	80 91 62 02 	lds	r24, 0x0262
     6ca:	90 91 63 02 	lds	r25, 0x0263
     6ce:	80 93 61 02 	sts	0x0261, r24
			stop = start + 7;
     6d2:	89 5f       	subi	r24, 0xF9	; 249
     6d4:	80 93 07 01 	sts	0x0107, r24
     6d8:	15 c0       	rjmp	.+42     	; 0x704 <print_menu+0xa0>
		}else if(arrow_pos>=stop)
     6da:	80 91 62 02 	lds	r24, 0x0262
     6de:	90 91 63 02 	lds	r25, 0x0263
     6e2:	20 91 07 01 	lds	r18, 0x0107
     6e6:	30 e0       	ldi	r19, 0x00	; 0
     6e8:	82 17       	cp	r24, r18
     6ea:	93 07       	cpc	r25, r19
     6ec:	5c f0       	brlt	.+22     	; 0x704 <print_menu+0xa0>
		{
			stop = arrow_pos+1;
     6ee:	80 91 62 02 	lds	r24, 0x0262
     6f2:	90 91 63 02 	lds	r25, 0x0263
     6f6:	91 e0       	ldi	r25, 0x01	; 1
     6f8:	98 0f       	add	r25, r24
     6fa:	90 93 07 01 	sts	0x0107, r25
			start = stop - 7;
     6fe:	86 50       	subi	r24, 0x06	; 6
     700:	80 93 61 02 	sts	0x0261, r24
		}
	}
	
	for(int i = start; i < stop; i++){
     704:	c0 91 61 02 	lds	r28, 0x0261
     708:	d0 e0       	ldi	r29, 0x00	; 0
     70a:	80 91 07 01 	lds	r24, 0x0107
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	c8 17       	cp	r28, r24
     712:	d9 07       	cpc	r29, r25
     714:	94 f5       	brge	.+100    	; 0x77a <print_menu+0x116>
		if(arrow_pos == i){
     716:	80 91 62 02 	lds	r24, 0x0262
     71a:	90 91 63 02 	lds	r25, 0x0263
     71e:	8c 17       	cp	r24, r28
     720:	9d 07       	cpc	r25, r29
     722:	21 f4       	brne	.+8      	; 0x72c <print_menu+0xc8>
			oled_char_print((char) 30);
     724:	8e e1       	ldi	r24, 0x1E	; 30
     726:	0e 94 2b 05 	call	0xa56	; 0xa56 <oled_char_print>
     72a:	03 c0       	rjmp	.+6      	; 0x732 <print_menu+0xce>
		}
		else{
			oled_char_print(' ');
     72c:	80 e2       	ldi	r24, 0x20	; 32
     72e:	0e 94 2b 05 	call	0xa56	; 0xa56 <oled_char_print>
		}
		
		if(current_menu->submenu[i] == NULL && current_menu->prev_menu != NULL){
     732:	a0 91 6a 02 	lds	r26, 0x026A
     736:	b0 91 6b 02 	lds	r27, 0x026B
     73a:	fe 01       	movw	r30, r28
     73c:	ee 0f       	add	r30, r30
     73e:	ff 1f       	adc	r31, r31
     740:	ea 0f       	add	r30, r26
     742:	fb 1f       	adc	r31, r27
     744:	03 80       	ldd	r0, Z+3	; 0x03
     746:	f4 81       	ldd	r31, Z+4	; 0x04
     748:	e0 2d       	mov	r30, r0
     74a:	30 97       	sbiw	r30, 0x00	; 0
     74c:	59 f4       	brne	.+22     	; 0x764 <print_menu+0x100>
     74e:	91 96       	adiw	r26, 0x21	; 33
     750:	8d 91       	ld	r24, X+
     752:	9c 91       	ld	r25, X
     754:	92 97       	sbiw	r26, 0x22	; 34
     756:	89 2b       	or	r24, r25
     758:	29 f0       	breq	.+10     	; 0x764 <print_menu+0x100>
			oled_string_print("Back\n");
     75a:	88 ea       	ldi	r24, 0xA8	; 168
     75c:	91 e0       	ldi	r25, 0x01	; 1
     75e:	0e 94 72 05 	call	0xae4	; 0xae4 <oled_string_print>
     762:	04 c0       	rjmp	.+8      	; 0x76c <print_menu+0x108>
		}
		else{
			oled_string_print(current_menu->submenu[i]->title);
     764:	80 81       	ld	r24, Z
     766:	91 81       	ldd	r25, Z+1	; 0x01
     768:	0e 94 72 05 	call	0xae4	; 0xae4 <oled_string_print>
			stop = arrow_pos+1;
			start = stop - 7;
		}
	}
	
	for(int i = start; i < stop; i++){
     76c:	21 96       	adiw	r28, 0x01	; 1
     76e:	80 91 07 01 	lds	r24, 0x0107
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	c8 17       	cp	r28, r24
     776:	d9 07       	cpc	r29, r25
     778:	74 f2       	brlt	.-100    	; 0x716 <print_menu+0xb2>
			oled_string_print(current_menu->submenu[i]->title);
		}
		
	}

}
     77a:	df 91       	pop	r29
     77c:	cf 91       	pop	r28
     77e:	08 95       	ret

00000780 <menu_enter>:

void menu_enter()
{	
	if (arrow_pos == current_menu->num_submenus){
     780:	e0 91 6a 02 	lds	r30, 0x026A
     784:	f0 91 6b 02 	lds	r31, 0x026B
     788:	42 81       	ldd	r20, Z+2	; 0x02
     78a:	80 91 62 02 	lds	r24, 0x0262
     78e:	90 91 63 02 	lds	r25, 0x0263
     792:	24 2f       	mov	r18, r20
     794:	30 e0       	ldi	r19, 0x00	; 0
     796:	28 17       	cp	r18, r24
     798:	39 07       	cpc	r19, r25
     79a:	39 f4       	brne	.+14     	; 0x7aa <menu_enter+0x2a>
		current_menu = current_menu->prev_menu;
     79c:	81 a1       	ldd	r24, Z+33	; 0x21
     79e:	92 a1       	ldd	r25, Z+34	; 0x22
     7a0:	90 93 6b 02 	sts	0x026B, r25
     7a4:	80 93 6a 02 	sts	0x026A, r24
     7a8:	10 c0       	rjmp	.+32     	; 0x7ca <menu_enter+0x4a>
	}
	else if(current_menu->num_submenus != 0){
     7aa:	44 23       	and	r20, r20
     7ac:	c9 f0       	breq	.+50     	; 0x7e0 <menu_enter+0x60>
		
		current_menu = current_menu->submenu[arrow_pos];
     7ae:	80 91 62 02 	lds	r24, 0x0262
     7b2:	90 91 63 02 	lds	r25, 0x0263
     7b6:	88 0f       	add	r24, r24
     7b8:	99 1f       	adc	r25, r25
     7ba:	e8 0f       	add	r30, r24
     7bc:	f9 1f       	adc	r31, r25
     7be:	83 81       	ldd	r24, Z+3	; 0x03
     7c0:	94 81       	ldd	r25, Z+4	; 0x04
     7c2:	90 93 6b 02 	sts	0x026B, r25
     7c6:	80 93 6a 02 	sts	0x026A, r24
	}
	if(current_menu->num_submenus > 6)
     7ca:	e0 91 6a 02 	lds	r30, 0x026A
     7ce:	f0 91 6b 02 	lds	r31, 0x026B
     7d2:	42 81       	ldd	r20, Z+2	; 0x02
     7d4:	47 30       	cpi	r20, 0x07	; 7
     7d6:	20 f0       	brcs	.+8      	; 0x7e0 <menu_enter+0x60>
	{
		stop = 7;
     7d8:	87 e0       	ldi	r24, 0x07	; 7
     7da:	80 93 07 01 	sts	0x0107, r24
     7de:	03 c0       	rjmp	.+6      	; 0x7e6 <menu_enter+0x66>
	}else
	{
		stop = current_menu->num_submenus + 1;
     7e0:	4f 5f       	subi	r20, 0xFF	; 255
     7e2:	40 93 07 01 	sts	0x0107, r20
	}
	
	start = 0;
     7e6:	10 92 61 02 	sts	0x0261, r1
	arrow_pos = 0;
     7ea:	10 92 63 02 	sts	0x0263, r1
     7ee:	10 92 62 02 	sts	0x0262, r1
     7f2:	08 95       	ret

000007f4 <add_menu>:
}


struct menu *add_menu(char *name, struct menu *parent){
     7f4:	0f 93       	push	r16
     7f6:	1f 93       	push	r17
     7f8:	cf 93       	push	r28
     7fa:	df 93       	push	r29
     7fc:	8c 01       	movw	r16, r24
     7fe:	eb 01       	movw	r28, r22
	struct menu *new_menu = malloc(sizeof(struct menu));
     800:	83 e2       	ldi	r24, 0x23	; 35
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <malloc>
     808:	fc 01       	movw	r30, r24
	new_menu->title = name;
     80a:	11 83       	std	Z+1, r17	; 0x01
     80c:	00 83       	st	Z, r16
	new_menu->num_submenus = 0;
     80e:	12 82       	std	Z+2, r1	; 0x02
	new_menu->prev_menu = parent;
     810:	d2 a3       	std	Z+34, r29	; 0x22
     812:	c1 a3       	std	Z+33, r28	; 0x21
	
	if(parent != NULL){
     814:	20 97       	sbiw	r28, 0x00	; 0
     816:	71 f0       	breq	.+28     	; 0x834 <add_menu+0x40>
		parent->submenu[parent->num_submenus] = new_menu;
     818:	8a 81       	ldd	r24, Y+2	; 0x02
     81a:	a8 2f       	mov	r26, r24
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	aa 0f       	add	r26, r26
     820:	bb 1f       	adc	r27, r27
     822:	ac 0f       	add	r26, r28
     824:	bd 1f       	adc	r27, r29
     826:	14 96       	adiw	r26, 0x04	; 4
     828:	fc 93       	st	X, r31
     82a:	ee 93       	st	-X, r30
     82c:	13 97       	sbiw	r26, 0x03	; 3
		parent->num_submenus += 1;
     82e:	8f 5f       	subi	r24, 0xFF	; 255
     830:	8a 83       	std	Y+2, r24	; 0x02
     832:	04 c0       	rjmp	.+8      	; 0x83c <add_menu+0x48>
		
	}
	else{
		current_menu = new_menu;
     834:	90 93 6b 02 	sts	0x026B, r25
     838:	80 93 6a 02 	sts	0x026A, r24
	}
	return new_menu;
     83c:	cf 01       	movw	r24, r30
     83e:	df 91       	pop	r29
     840:	cf 91       	pop	r28
     842:	1f 91       	pop	r17
     844:	0f 91       	pop	r16
     846:	08 95       	ret

00000848 <create_menu>:
			arrow_pos = current_menu->num_submenus;
		}
	}
}

void create_menu(){
     848:	0f 93       	push	r16
     84a:	1f 93       	push	r17
     84c:	cf 93       	push	r28
     84e:	df 93       	push	r29
	struct menu *main_menu = add_menu("Main menu\n", NULL);
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	8e ea       	ldi	r24, 0xAE	; 174
     856:	91 e0       	ldi	r25, 0x01	; 1
     858:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
     85c:	ec 01       	movw	r28, r24
		struct menu *sub = add_menu("Aasmund er kul\n", main_menu);
     85e:	bc 01       	movw	r22, r24
     860:	89 eb       	ldi	r24, 0xB9	; 185
     862:	91 e0       	ldi	r25, 0x01	; 1
     864:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
     868:	8c 01       	movw	r16, r24
			struct menu *hehe = add_menu("Bare tulla\n", sub);
     86a:	bc 01       	movw	r22, r24
     86c:	89 ec       	ldi	r24, 0xC9	; 201
     86e:	91 e0       	ldi	r25, 0x01	; 1
     870:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
				add_menu("lol\n", hehe);
     874:	bc 01       	movw	r22, r24
     876:	85 ed       	ldi	r24, 0xD5	; 213
     878:	91 e0       	ldi	r25, 0x01	; 1
     87a:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
			add_menu("gunnarerkulere\n", sub);
     87e:	b8 01       	movw	r22, r16
     880:	8a ed       	ldi	r24, 0xDA	; 218
     882:	91 e0       	ldi	r25, 0x01	; 1
     884:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
			add_menu("jon er kulest\n", sub);
     888:	b8 01       	movw	r22, r16
     88a:	8a ee       	ldi	r24, 0xEA	; 234
     88c:	91 e0       	ldi	r25, 0x01	; 1
     88e:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
		add_menu("Gunnarliker is\n", main_menu);
     892:	be 01       	movw	r22, r28
     894:	89 ef       	ldi	r24, 0xF9	; 249
     896:	91 e0       	ldi	r25, 0x01	; 1
     898:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
		add_menu("Jonlikerdumle\n", main_menu);
     89c:	be 01       	movw	r22, r28
     89e:	89 e0       	ldi	r24, 0x09	; 9
     8a0:	92 e0       	ldi	r25, 0x02	; 2
     8a2:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
		add_menu("Jonspiserfisk\n", main_menu);
     8a6:	be 01       	movw	r22, r28
     8a8:	88 e1       	ldi	r24, 0x18	; 24
     8aa:	92 e0       	ldi	r25, 0x02	; 2
     8ac:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
		add_menu("hei\n", main_menu);
     8b0:	be 01       	movw	r22, r28
     8b2:	87 e2       	ldi	r24, 0x27	; 39
     8b4:	92 e0       	ldi	r25, 0x02	; 2
     8b6:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
		add_menu("hallo\n", main_menu);
     8ba:	be 01       	movw	r22, r28
     8bc:	8c e2       	ldi	r24, 0x2C	; 44
     8be:	92 e0       	ldi	r25, 0x02	; 2
     8c0:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
		add_menu("asdfjkjfsagf\n", main_menu);
     8c4:	be 01       	movw	r22, r28
     8c6:	83 e3       	ldi	r24, 0x33	; 51
     8c8:	92 e0       	ldi	r25, 0x02	; 2
     8ca:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
		add_menu("menu scroll\n", main_menu);
     8ce:	be 01       	movw	r22, r28
     8d0:	81 e4       	ldi	r24, 0x41	; 65
     8d2:	92 e0       	ldi	r25, 0x02	; 2
     8d4:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <add_menu>
}
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	1f 91       	pop	r17
     8de:	0f 91       	pop	r16
     8e0:	08 95       	ret

000008e2 <write_c>:
     8e2:	e0 91 0a 01 	lds	r30, 0x010A
     8e6:	f0 91 0b 01 	lds	r31, 0x010B
     8ea:	e8 0f       	add	r30, r24
     8ec:	f1 1d       	adc	r31, r1
     8ee:	80 83       	st	Z, r24
     8f0:	08 95       	ret

000008f2 <oled_set_column_address>:
     8f2:	cf 93       	push	r28
     8f4:	df 93       	push	r29
     8f6:	d8 2f       	mov	r29, r24
     8f8:	c6 2f       	mov	r28, r22
     8fa:	81 e2       	ldi	r24, 0x21	; 33
     8fc:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     900:	8d 2f       	mov	r24, r29
     902:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     906:	8c 2f       	mov	r24, r28
     908:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     90c:	df 91       	pop	r29
     90e:	cf 91       	pop	r28
     910:	08 95       	ret

00000912 <oled_set_page_address>:
     912:	cf 93       	push	r28
     914:	df 93       	push	r29
     916:	d8 2f       	mov	r29, r24
     918:	c6 2f       	mov	r28, r22
     91a:	82 e2       	ldi	r24, 0x22	; 34
     91c:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     920:	8d 2f       	mov	r24, r29
     922:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     926:	8c 2f       	mov	r24, r28
     928:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     92c:	df 91       	pop	r29
     92e:	cf 91       	pop	r28
     930:	08 95       	ret

00000932 <oled_address_reset>:
     932:	10 92 6d 02 	sts	0x026D, r1
     936:	10 92 6c 02 	sts	0x026C, r1
     93a:	6f e7       	ldi	r22, 0x7F	; 127
     93c:	80 e0       	ldi	r24, 0x00	; 0
     93e:	0e 94 79 04 	call	0x8f2	; 0x8f2 <oled_set_column_address>
     942:	67 e0       	ldi	r22, 0x07	; 7
     944:	80 e0       	ldi	r24, 0x00	; 0
     946:	0e 94 89 04 	call	0x912	; 0x912 <oled_set_page_address>
     94a:	08 95       	ret

0000094c <oled_clear_and_go_to_line>:
     94c:	80 93 6d 02 	sts	0x026D, r24
     950:	10 92 6c 02 	sts	0x026C, r1
     954:	6f e7       	ldi	r22, 0x7F	; 127
     956:	80 e0       	ldi	r24, 0x00	; 0
     958:	0e 94 79 04 	call	0x8f2	; 0x8f2 <oled_set_column_address>
     95c:	67 e0       	ldi	r22, 0x07	; 7
     95e:	80 91 6d 02 	lds	r24, 0x026D
     962:	0e 94 89 04 	call	0x912	; 0x912 <oled_set_page_address>
     966:	80 e8       	ldi	r24, 0x80	; 128
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	e0 91 08 01 	lds	r30, 0x0108
     96e:	f0 91 09 01 	lds	r31, 0x0109
     972:	10 82       	st	Z, r1
     974:	01 97       	sbiw	r24, 0x01	; 1
     976:	00 97       	sbiw	r24, 0x00	; 0
     978:	c1 f7       	brne	.-16     	; 0x96a <oled_clear_and_go_to_line+0x1e>
     97a:	6f e7       	ldi	r22, 0x7F	; 127
     97c:	80 e0       	ldi	r24, 0x00	; 0
     97e:	0e 94 79 04 	call	0x8f2	; 0x8f2 <oled_set_column_address>
     982:	10 92 6c 02 	sts	0x026C, r1
     986:	08 95       	ret

00000988 <clear_oled>:
     988:	cf 93       	push	r28
     98a:	df 93       	push	r29
     98c:	c0 e0       	ldi	r28, 0x00	; 0
     98e:	d0 e0       	ldi	r29, 0x00	; 0
     990:	ce 01       	movw	r24, r28
     992:	0e 94 a6 04 	call	0x94c	; 0x94c <oled_clear_and_go_to_line>
     996:	21 96       	adiw	r28, 0x01	; 1
     998:	c8 30       	cpi	r28, 0x08	; 8
     99a:	d1 05       	cpc	r29, r1
     99c:	c9 f7       	brne	.-14     	; 0x990 <clear_oled+0x8>
     99e:	df 91       	pop	r29
     9a0:	cf 91       	pop	r28
     9a2:	08 95       	ret

000009a4 <oled_init>:
     9a4:	8e ea       	ldi	r24, 0xAE	; 174
     9a6:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9aa:	81 ea       	ldi	r24, 0xA1	; 161
     9ac:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9b0:	8a ed       	ldi	r24, 0xDA	; 218
     9b2:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9b6:	82 e1       	ldi	r24, 0x12	; 18
     9b8:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9bc:	88 ec       	ldi	r24, 0xC8	; 200
     9be:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9c2:	88 ea       	ldi	r24, 0xA8	; 168
     9c4:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9c8:	8f e3       	ldi	r24, 0x3F	; 63
     9ca:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9ce:	85 ed       	ldi	r24, 0xD5	; 213
     9d0:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9d4:	80 e8       	ldi	r24, 0x80	; 128
     9d6:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9da:	81 e8       	ldi	r24, 0x81	; 129
     9dc:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9e0:	80 e5       	ldi	r24, 0x50	; 80
     9e2:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9e6:	89 ed       	ldi	r24, 0xD9	; 217
     9e8:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9ec:	81 e2       	ldi	r24, 0x21	; 33
     9ee:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9f2:	80 e2       	ldi	r24, 0x20	; 32
     9f4:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9f8:	82 e0       	ldi	r24, 0x02	; 2
     9fa:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     9fe:	8b ed       	ldi	r24, 0xDB	; 219
     a00:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     a04:	80 e3       	ldi	r24, 0x30	; 48
     a06:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     a0a:	8d ea       	ldi	r24, 0xAD	; 173
     a0c:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     a16:	84 ea       	ldi	r24, 0xA4	; 164
     a18:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     a1c:	86 ea       	ldi	r24, 0xA6	; 166
     a1e:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     a22:	8f ea       	ldi	r24, 0xAF	; 175
     a24:	0e 94 71 04 	call	0x8e2	; 0x8e2 <write_c>
     a28:	0e 94 c4 04 	call	0x988	; 0x988 <clear_oled>
     a2c:	0e 94 99 04 	call	0x932	; 0x932 <oled_address_reset>
     a30:	8e e4       	ldi	r24, 0x4E	; 78
     a32:	92 e0       	ldi	r25, 0x02	; 2
     a34:	0e 94 81 08 	call	0x1102	; 0x1102 <puts>
     a38:	08 95       	ret

00000a3a <oled_go_to_line>:
     a3a:	80 93 6d 02 	sts	0x026D, r24
     a3e:	10 92 6c 02 	sts	0x026C, r1
     a42:	6f e7       	ldi	r22, 0x7F	; 127
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	0e 94 79 04 	call	0x8f2	; 0x8f2 <oled_set_column_address>
     a4a:	67 e0       	ldi	r22, 0x07	; 7
     a4c:	80 91 6d 02 	lds	r24, 0x026D
     a50:	0e 94 89 04 	call	0x912	; 0x912 <oled_set_page_address>
     a54:	08 95       	ret

00000a56 <oled_char_print>:
     a56:	cf 93       	push	r28
     a58:	c8 2f       	mov	r28, r24
     a5a:	8a 30       	cpi	r24, 0x0A	; 10
     a5c:	39 f1       	breq	.+78     	; 0xaac <oled_char_print+0x56>
     a5e:	80 91 6c 02 	lds	r24, 0x026C
     a62:	8f 5f       	subi	r24, 0xFF	; 255
     a64:	80 31       	cpi	r24, 0x10	; 16
     a66:	69 f5       	brne	.+90     	; 0xac2 <oled_char_print+0x6c>
     a68:	10 92 6c 02 	sts	0x026C, r1
     a6c:	80 91 6d 02 	lds	r24, 0x026D
     a70:	8f 5f       	subi	r24, 0xFF	; 255
     a72:	88 30       	cpi	r24, 0x08	; 8
     a74:	19 f0       	breq	.+6      	; 0xa7c <oled_char_print+0x26>
     a76:	80 93 6d 02 	sts	0x026D, r24
     a7a:	02 c0       	rjmp	.+4      	; 0xa80 <oled_char_print+0x2a>
     a7c:	10 92 6d 02 	sts	0x026D, r1
     a80:	6f e7       	ldi	r22, 0x7F	; 127
     a82:	80 e0       	ldi	r24, 0x00	; 0
     a84:	0e 94 79 04 	call	0x8f2	; 0x8f2 <oled_set_column_address>
     a88:	67 e0       	ldi	r22, 0x07	; 7
     a8a:	80 91 6d 02 	lds	r24, 0x026D
     a8e:	0e 94 89 04 	call	0x912	; 0x912 <oled_set_page_address>
     a92:	19 c0       	rjmp	.+50     	; 0xac6 <oled_char_print+0x70>
     a94:	24 91       	lpm	r18, Z
     a96:	a0 91 08 01 	lds	r26, 0x0108
     a9a:	b0 91 09 01 	lds	r27, 0x0109
     a9e:	2c 93       	st	X, r18
     aa0:	01 96       	adiw	r24, 0x01	; 1
     aa2:	31 96       	adiw	r30, 0x01	; 1
     aa4:	88 30       	cpi	r24, 0x08	; 8
     aa6:	91 05       	cpc	r25, r1
     aa8:	a9 f7       	brne	.-22     	; 0xa94 <oled_char_print+0x3e>
     aaa:	1a c0       	rjmp	.+52     	; 0xae0 <oled_char_print+0x8a>
     aac:	80 91 6d 02 	lds	r24, 0x026D
     ab0:	8f 5f       	subi	r24, 0xFF	; 255
     ab2:	80 93 6d 02 	sts	0x026D, r24
     ab6:	10 92 6c 02 	sts	0x026C, r1
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	0e 94 1d 05 	call	0xa3a	; 0xa3a <oled_go_to_line>
     ac0:	0f c0       	rjmp	.+30     	; 0xae0 <oled_char_print+0x8a>
     ac2:	80 93 6c 02 	sts	0x026C, r24
     ac6:	ec 2f       	mov	r30, r28
     ac8:	f0 e0       	ldi	r31, 0x00	; 0
     aca:	ee 0f       	add	r30, r30
     acc:	ff 1f       	adc	r31, r31
     ace:	ee 0f       	add	r30, r30
     ad0:	ff 1f       	adc	r31, r31
     ad2:	ee 0f       	add	r30, r30
     ad4:	ff 1f       	adc	r31, r31
     ad6:	e0 58       	subi	r30, 0x80	; 128
     ad8:	f0 40       	sbci	r31, 0x00	; 0
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	da cf       	rjmp	.-76     	; 0xa94 <oled_char_print+0x3e>
     ae0:	cf 91       	pop	r28
     ae2:	08 95       	ret

00000ae4 <oled_string_print>:
     ae4:	cf 93       	push	r28
     ae6:	df 93       	push	r29
     ae8:	ec 01       	movw	r28, r24
     aea:	88 81       	ld	r24, Y
     aec:	8a 30       	cpi	r24, 0x0A	; 10
     aee:	31 f0       	breq	.+12     	; 0xafc <oled_string_print+0x18>
     af0:	21 96       	adiw	r28, 0x01	; 1
     af2:	0e 94 2b 05 	call	0xa56	; 0xa56 <oled_char_print>
     af6:	89 91       	ld	r24, Y+
     af8:	8a 30       	cpi	r24, 0x0A	; 10
     afa:	d9 f7       	brne	.-10     	; 0xaf2 <oled_string_print+0xe>
     afc:	0e 94 2b 05 	call	0xa56	; 0xa56 <oled_char_print>
     b00:	df 91       	pop	r29
     b02:	cf 91       	pop	r28
     b04:	08 95       	ret

00000b06 <main>:
volatile long int timer = 0;
volatile uint8_t cool_down = 0;
volatile uint8_t dirty_display = 1;
volatile uint8_t CAN_ready = 0;
int main(void)
{
     b06:	cf 93       	push	r28
     b08:	df 93       	push	r29
     b0a:	cd b7       	in	r28, 0x3d	; 61
     b0c:	de b7       	in	r29, 0x3e	; 62
     b0e:	2d 97       	sbiw	r28, 0x0d	; 13
     b10:	0f b6       	in	r0, 0x3f	; 63
     b12:	f8 94       	cli
     b14:	de bf       	out	0x3e, r29	; 62
     b16:	0f be       	out	0x3f, r0	; 63
     b18:	cd bf       	out	0x3d, r28	; 61
	set_bit(DDRB,DDB0);
     b1a:	b8 9a       	sbi	0x17, 0	; 23
	SPI_master_init();
     b1c:	0e 94 bd 06 	call	0xd7a	; 0xd7a <SPI_master_init>
	//SPI_transmit(0xAA);
	USART_Init(MYUBRR);
     b20:	8f e1       	ldi	r24, 0x1F	; 31
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <USART_Init>
	Enable_UAR0_Interrupt();
     b28:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <Enable_UAR0_Interrupt>
	SRAM_init();
     b2c:	0e 94 ce 06 	call	0xd9c	; 0xd9c <SRAM_init>
	ADC_init();
     b30:	0e 94 de 01 	call	0x3bc	; 0x3bc <ADC_init>
	joy_button_init();
     b34:	0e 94 53 02 	call	0x4a6	; 0x4a6 <joy_button_init>
	oled_init();
     b38:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <oled_init>
	menu_init();
     b3c:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <menu_init>
	create_menu();
     b40:	0e 94 24 04 	call	0x848	; 0x848 <create_menu>
	CAN_init();
     b44:	0e 94 0f 02 	call	0x41e	; 0x41e <CAN_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b48:	8f ef       	ldi	r24, 0xFF	; 255
     b4a:	9f e2       	ldi	r25, 0x2F	; 47
     b4c:	01 97       	sbiw	r24, 0x01	; 1
     b4e:	f1 f7       	brne	.-4      	; 0xb4c <main+0x46>
     b50:	00 c0       	rjmp	.+0      	; 0xb52 <main+0x4c>
     b52:	00 00       	nop
		
		
		
		//CAN_send(message);
		_delay_ms(10);
		if(CAN_ready==1)
     b54:	80 91 64 02 	lds	r24, 0x0264
     b58:	81 30       	cpi	r24, 0x01	; 1
     b5a:	31 f4       	brne	.+12     	; 0xb68 <main+0x62>
		{
			CAN_ready = 0;
     b5c:	10 92 64 02 	sts	0x0264, r1
			union can_msg_t temp = CAN_receive();
     b60:	ce 01       	movw	r24, r28
     b62:	01 96       	adiw	r24, 0x01	; 1
     b64:	0e 94 2f 02 	call	0x45e	; 0x45e <CAN_receive>
     b68:	9f ef       	ldi	r25, 0xFF	; 255
     b6a:	2f ef       	ldi	r18, 0xFF	; 255
     b6c:	85 e9       	ldi	r24, 0x95	; 149
     b6e:	91 50       	subi	r25, 0x01	; 1
     b70:	20 40       	sbci	r18, 0x00	; 0
     b72:	80 40       	sbci	r24, 0x00	; 0
     b74:	e1 f7       	brne	.-8      	; 0xb6e <main+0x68>
     b76:	00 c0       	rjmp	.+0      	; 0xb78 <main+0x72>
     b78:	00 00       	nop
     b7a:	e6 cf       	rjmp	.-52     	; 0xb48 <main+0x42>

00000b7c <__vector_13>:
	}

}
/* timer interrupt ~50hz */
ISR(TIMER1_COMPA_vect)
{
     b7c:	1f 92       	push	r1
     b7e:	0f 92       	push	r0
     b80:	0f b6       	in	r0, 0x3f	; 63
     b82:	0f 92       	push	r0
     b84:	11 24       	eor	r1, r1
     b86:	2f 93       	push	r18
     b88:	3f 93       	push	r19
     b8a:	4f 93       	push	r20
     b8c:	5f 93       	push	r21
     b8e:	6f 93       	push	r22
     b90:	7f 93       	push	r23
     b92:	8f 93       	push	r24
     b94:	9f 93       	push	r25
     b96:	af 93       	push	r26
     b98:	bf 93       	push	r27
     b9a:	ef 93       	push	r30
     b9c:	ff 93       	push	r31
	PORTB ^= 0x01; // Toggle the LED
     b9e:	98 b3       	in	r25, 0x18	; 24
     ba0:	81 e0       	ldi	r24, 0x01	; 1
     ba2:	89 27       	eor	r24, r25
     ba4:	88 bb       	out	0x18, r24	; 24
	if(cool_down == 1 && timer <12)
     ba6:	80 91 65 02 	lds	r24, 0x0265
     baa:	81 30       	cpi	r24, 0x01	; 1
     bac:	01 f5       	brne	.+64     	; 0xbee <__vector_13+0x72>
     bae:	80 91 66 02 	lds	r24, 0x0266
     bb2:	90 91 67 02 	lds	r25, 0x0267
     bb6:	a0 91 68 02 	lds	r26, 0x0268
     bba:	b0 91 69 02 	lds	r27, 0x0269
     bbe:	0c 97       	sbiw	r24, 0x0c	; 12
     bc0:	a1 05       	cpc	r26, r1
     bc2:	b1 05       	cpc	r27, r1
     bc4:	a4 f4       	brge	.+40     	; 0xbee <__vector_13+0x72>
	{
		timer++;
     bc6:	80 91 66 02 	lds	r24, 0x0266
     bca:	90 91 67 02 	lds	r25, 0x0267
     bce:	a0 91 68 02 	lds	r26, 0x0268
     bd2:	b0 91 69 02 	lds	r27, 0x0269
     bd6:	01 96       	adiw	r24, 0x01	; 1
     bd8:	a1 1d       	adc	r26, r1
     bda:	b1 1d       	adc	r27, r1
     bdc:	80 93 66 02 	sts	0x0266, r24
     be0:	90 93 67 02 	sts	0x0267, r25
     be4:	a0 93 68 02 	sts	0x0268, r26
     be8:	b0 93 69 02 	sts	0x0269, r27
     bec:	0a c0       	rjmp	.+20     	; 0xc02 <__vector_13+0x86>
	}else
	{
		timer = 0;
     bee:	10 92 66 02 	sts	0x0266, r1
     bf2:	10 92 67 02 	sts	0x0267, r1
     bf6:	10 92 68 02 	sts	0x0268, r1
     bfa:	10 92 69 02 	sts	0x0269, r1
		cool_down = 0;
     bfe:	10 92 65 02 	sts	0x0265, r1
	}
	if(ADC_busy() == 0)
     c02:	0e 94 db 01 	call	0x3b6	; 0x3b6 <ADC_busy>
     c06:	81 11       	cpse	r24, r1
     c08:	0a c0       	rjmp	.+20     	; 0xc1e <__vector_13+0xa2>
	{
		if(dirty_display != 0)
     c0a:	80 91 0c 01 	lds	r24, 0x010C
     c0e:	88 23       	and	r24, r24
     c10:	21 f0       	breq	.+8      	; 0xc1a <__vector_13+0x9e>
		{
			print_menu();
     c12:	0e 94 32 03 	call	0x664	; 0x664 <print_menu>
			dirty_display = 0;
     c16:	10 92 0c 01 	sts	0x010C, r1
		}
		y_pos();	
     c1a:	0e 94 62 02 	call	0x4c4	; 0x4c4 <y_pos>
	}
	
}
     c1e:	ff 91       	pop	r31
     c20:	ef 91       	pop	r30
     c22:	bf 91       	pop	r27
     c24:	af 91       	pop	r26
     c26:	9f 91       	pop	r25
     c28:	8f 91       	pop	r24
     c2a:	7f 91       	pop	r23
     c2c:	6f 91       	pop	r22
     c2e:	5f 91       	pop	r21
     c30:	4f 91       	pop	r20
     c32:	3f 91       	pop	r19
     c34:	2f 91       	pop	r18
     c36:	0f 90       	pop	r0
     c38:	0f be       	out	0x3f, r0	; 63
     c3a:	0f 90       	pop	r0
     c3c:	1f 90       	pop	r1
     c3e:	18 95       	reti

00000c40 <__vector_1>:
/* ADC interrupt */
ISR(INT0_vect){
     c40:	1f 92       	push	r1
     c42:	0f 92       	push	r0
     c44:	0f b6       	in	r0, 0x3f	; 63
     c46:	0f 92       	push	r0
     c48:	11 24       	eor	r1, r1
     c4a:	2f 93       	push	r18
     c4c:	3f 93       	push	r19
     c4e:	4f 93       	push	r20
     c50:	5f 93       	push	r21
     c52:	6f 93       	push	r22
     c54:	7f 93       	push	r23
     c56:	8f 93       	push	r24
     c58:	9f 93       	push	r25
     c5a:	af 93       	push	r26
     c5c:	bf 93       	push	r27
     c5e:	ef 93       	push	r30
     c60:	ff 93       	push	r31
	volatile char *ext_adc = (char *) 0x1403;
	if(cool_down == 0)
     c62:	80 91 65 02 	lds	r24, 0x0265
     c66:	81 11       	cpse	r24, r1
     c68:	2b c0       	rjmp	.+86     	; 0xcc0 <__vector_1+0x80>
	{
		if(ext_adc[0] < 10)
     c6a:	80 91 03 14 	lds	r24, 0x1403
     c6e:	8a 30       	cpi	r24, 0x0A	; 10
     c70:	90 f4       	brcc	.+36     	; 0xc96 <__vector_1+0x56>
		{
			menu_up_or_down(1);
     c72:	81 e0       	ldi	r24, 0x01	; 1
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <menu_up_or_down>
			cool_down = 1;
     c7a:	81 e0       	ldi	r24, 0x01	; 1
     c7c:	80 93 65 02 	sts	0x0265, r24
			timer = 0;
     c80:	10 92 66 02 	sts	0x0266, r1
     c84:	10 92 67 02 	sts	0x0267, r1
     c88:	10 92 68 02 	sts	0x0268, r1
     c8c:	10 92 69 02 	sts	0x0269, r1
			dirty_display = 1;
     c90:	80 93 0c 01 	sts	0x010C, r24
     c94:	15 c0       	rjmp	.+42     	; 0xcc0 <__vector_1+0x80>
		}else if(ext_adc[0]>245)
     c96:	80 91 03 14 	lds	r24, 0x1403
     c9a:	86 3f       	cpi	r24, 0xF6	; 246
     c9c:	88 f0       	brcs	.+34     	; 0xcc0 <__vector_1+0x80>
		{
			menu_up_or_down(-1);
     c9e:	8f ef       	ldi	r24, 0xFF	; 255
     ca0:	9f ef       	ldi	r25, 0xFF	; 255
     ca2:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <menu_up_or_down>
			cool_down = 1;
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	80 93 65 02 	sts	0x0265, r24
			timer = 0;
     cac:	10 92 66 02 	sts	0x0266, r1
     cb0:	10 92 67 02 	sts	0x0267, r1
     cb4:	10 92 68 02 	sts	0x0268, r1
     cb8:	10 92 69 02 	sts	0x0269, r1
			dirty_display = 1;
     cbc:	80 93 0c 01 	sts	0x010C, r24
		}
	}
	
	ADC_busy(0);
     cc0:	80 e0       	ldi	r24, 0x00	; 0
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	0e 94 db 01 	call	0x3b6	; 0x3b6 <ADC_busy>
}
     cc8:	ff 91       	pop	r31
     cca:	ef 91       	pop	r30
     ccc:	bf 91       	pop	r27
     cce:	af 91       	pop	r26
     cd0:	9f 91       	pop	r25
     cd2:	8f 91       	pop	r24
     cd4:	7f 91       	pop	r23
     cd6:	6f 91       	pop	r22
     cd8:	5f 91       	pop	r21
     cda:	4f 91       	pop	r20
     cdc:	3f 91       	pop	r19
     cde:	2f 91       	pop	r18
     ce0:	0f 90       	pop	r0
     ce2:	0f be       	out	0x3f, r0	; 63
     ce4:	0f 90       	pop	r0
     ce6:	1f 90       	pop	r1
     ce8:	18 95       	reti

00000cea <__vector_2>:
/* jOYSTICK BUTTON */
ISR(INT1_vect){
     cea:	1f 92       	push	r1
     cec:	0f 92       	push	r0
     cee:	0f b6       	in	r0, 0x3f	; 63
     cf0:	0f 92       	push	r0
     cf2:	11 24       	eor	r1, r1
     cf4:	2f 93       	push	r18
     cf6:	3f 93       	push	r19
     cf8:	4f 93       	push	r20
     cfa:	5f 93       	push	r21
     cfc:	6f 93       	push	r22
     cfe:	7f 93       	push	r23
     d00:	8f 93       	push	r24
     d02:	9f 93       	push	r25
     d04:	af 93       	push	r26
     d06:	bf 93       	push	r27
     d08:	ef 93       	push	r30
     d0a:	ff 93       	push	r31

	if(cool_down == 0)
     d0c:	80 91 65 02 	lds	r24, 0x0265
     d10:	81 11       	cpse	r24, r1
     d12:	0f c0       	rjmp	.+30     	; 0xd32 <__vector_2+0x48>
	{
		menu_enter();
     d14:	0e 94 c0 03 	call	0x780	; 0x780 <menu_enter>
		cool_down = 1;
     d18:	81 e0       	ldi	r24, 0x01	; 1
     d1a:	80 93 65 02 	sts	0x0265, r24
		timer = 0;
     d1e:	10 92 66 02 	sts	0x0266, r1
     d22:	10 92 67 02 	sts	0x0267, r1
     d26:	10 92 68 02 	sts	0x0268, r1
     d2a:	10 92 69 02 	sts	0x0269, r1
		dirty_display = 1;
     d2e:	80 93 0c 01 	sts	0x010C, r24
	}
	
	return;
}
     d32:	ff 91       	pop	r31
     d34:	ef 91       	pop	r30
     d36:	bf 91       	pop	r27
     d38:	af 91       	pop	r26
     d3a:	9f 91       	pop	r25
     d3c:	8f 91       	pop	r24
     d3e:	7f 91       	pop	r23
     d40:	6f 91       	pop	r22
     d42:	5f 91       	pop	r21
     d44:	4f 91       	pop	r20
     d46:	3f 91       	pop	r19
     d48:	2f 91       	pop	r18
     d4a:	0f 90       	pop	r0
     d4c:	0f be       	out	0x3f, r0	; 63
     d4e:	0f 90       	pop	r0
     d50:	1f 90       	pop	r1
     d52:	18 95       	reti

00000d54 <__vector_3>:

/* CAN INTERRUPT */
ISR(INT2_vect){
     d54:	1f 92       	push	r1
     d56:	0f 92       	push	r0
     d58:	0f b6       	in	r0, 0x3f	; 63
     d5a:	0f 92       	push	r0
     d5c:	11 24       	eor	r1, r1
     d5e:	8f 93       	push	r24
	CAN_ready = 1;
     d60:	81 e0       	ldi	r24, 0x01	; 1
     d62:	80 93 64 02 	sts	0x0264, r24

     d66:	8f 91       	pop	r24
     d68:	0f 90       	pop	r0
     d6a:	0f be       	out	0x3f, r0	; 63
     d6c:	0f 90       	pop	r0
     d6e:	1f 90       	pop	r1
     d70:	18 95       	reti

00000d72 <SPI_CS_low>:
     d72:	c4 98       	cbi	0x18, 4	; 24
     d74:	08 95       	ret

00000d76 <SPI_CS_high>:
     d76:	c4 9a       	sbi	0x18, 4	; 24
     d78:	08 95       	ret

00000d7a <SPI_master_init>:
     d7a:	8b b7       	in	r24, 0x3b	; 59
     d7c:	80 62       	ori	r24, 0x20	; 32
     d7e:	8b bf       	out	0x3b, r24	; 59
     d80:	bc 9a       	sbi	0x17, 4	; 23
     d82:	0e 94 bb 06 	call	0xd76	; 0xd76 <SPI_CS_high>
     d86:	bd 9a       	sbi	0x17, 5	; 23
     d88:	bf 9a       	sbi	0x17, 7	; 23
     d8a:	6e 9a       	sbi	0x0d, 6	; 13
     d8c:	6c 9a       	sbi	0x0d, 4	; 13
     d8e:	68 9a       	sbi	0x0d, 0	; 13
     d90:	08 95       	ret

00000d92 <SPI_data>:
     d92:	8f b9       	out	0x0f, r24	; 15
     d94:	77 9b       	sbis	0x0e, 7	; 14
     d96:	fe cf       	rjmp	.-4      	; 0xd94 <SPI_data+0x2>
     d98:	8f b1       	in	r24, 0x0f	; 15
     d9a:	08 95       	ret

00000d9c <SRAM_init>:
     d9c:	85 b7       	in	r24, 0x35	; 53
     d9e:	80 68       	ori	r24, 0x80	; 128
     da0:	85 bf       	out	0x35, r24	; 53
     da2:	08 95       	ret

00000da4 <USART0_Receive>:
     da4:	80 91 6e 02 	lds	r24, 0x026E
     da8:	08 95       	ret

00000daa <USART0_Transmit>:
     daa:	5d 9b       	sbis	0x0b, 5	; 11
     dac:	fe cf       	rjmp	.-4      	; 0xdaa <USART0_Transmit>
     dae:	8c b9       	out	0x0c, r24	; 12
     db0:	08 95       	ret

00000db2 <USART_Init>:
     db2:	90 bd       	out	0x20, r25	; 32
     db4:	89 b9       	out	0x09, r24	; 9
     db6:	88 e1       	ldi	r24, 0x18	; 24
     db8:	8a b9       	out	0x0a, r24	; 10
     dba:	86 e8       	ldi	r24, 0x86	; 134
     dbc:	80 bd       	out	0x20, r24	; 32
     dbe:	40 e0       	ldi	r20, 0x00	; 0
     dc0:	50 e0       	ldi	r21, 0x00	; 0
     dc2:	62 ed       	ldi	r22, 0xD2	; 210
     dc4:	76 e0       	ldi	r23, 0x06	; 6
     dc6:	85 ed       	ldi	r24, 0xD5	; 213
     dc8:	96 e0       	ldi	r25, 0x06	; 6
     dca:	0e 94 22 08 	call	0x1044	; 0x1044 <fdevopen>
     dce:	08 95       	ret

00000dd0 <Enable_UAR0_Interrupt>:
     dd0:	57 9a       	sbi	0x0a, 7	; 10
     dd2:	08 95       	ret

00000dd4 <__vector_19>:
     dd4:	1f 92       	push	r1
     dd6:	0f 92       	push	r0
     dd8:	0f b6       	in	r0, 0x3f	; 63
     dda:	0f 92       	push	r0
     ddc:	11 24       	eor	r1, r1
     dde:	8f 93       	push	r24
     de0:	8c b1       	in	r24, 0x0c	; 12
     de2:	8a 30       	cpi	r24, 0x0A	; 10
     de4:	11 f0       	breq	.+4      	; 0xdea <__vector_19+0x16>
     de6:	80 93 6e 02 	sts	0x026E, r24
     dea:	8f 91       	pop	r24
     dec:	0f 90       	pop	r0
     dee:	0f be       	out	0x3f, r0	; 63
     df0:	0f 90       	pop	r0
     df2:	1f 90       	pop	r1
     df4:	18 95       	reti

00000df6 <malloc>:
     df6:	cf 93       	push	r28
     df8:	df 93       	push	r29
     dfa:	82 30       	cpi	r24, 0x02	; 2
     dfc:	91 05       	cpc	r25, r1
     dfe:	10 f4       	brcc	.+4      	; 0xe04 <malloc+0xe>
     e00:	82 e0       	ldi	r24, 0x02	; 2
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	e0 91 a3 02 	lds	r30, 0x02A3
     e08:	f0 91 a4 02 	lds	r31, 0x02A4
     e0c:	20 e0       	ldi	r18, 0x00	; 0
     e0e:	30 e0       	ldi	r19, 0x00	; 0
     e10:	a0 e0       	ldi	r26, 0x00	; 0
     e12:	b0 e0       	ldi	r27, 0x00	; 0
     e14:	30 97       	sbiw	r30, 0x00	; 0
     e16:	39 f1       	breq	.+78     	; 0xe66 <malloc+0x70>
     e18:	40 81       	ld	r20, Z
     e1a:	51 81       	ldd	r21, Z+1	; 0x01
     e1c:	48 17       	cp	r20, r24
     e1e:	59 07       	cpc	r21, r25
     e20:	b8 f0       	brcs	.+46     	; 0xe50 <malloc+0x5a>
     e22:	48 17       	cp	r20, r24
     e24:	59 07       	cpc	r21, r25
     e26:	71 f4       	brne	.+28     	; 0xe44 <malloc+0x4e>
     e28:	82 81       	ldd	r24, Z+2	; 0x02
     e2a:	93 81       	ldd	r25, Z+3	; 0x03
     e2c:	10 97       	sbiw	r26, 0x00	; 0
     e2e:	29 f0       	breq	.+10     	; 0xe3a <malloc+0x44>
     e30:	13 96       	adiw	r26, 0x03	; 3
     e32:	9c 93       	st	X, r25
     e34:	8e 93       	st	-X, r24
     e36:	12 97       	sbiw	r26, 0x02	; 2
     e38:	2c c0       	rjmp	.+88     	; 0xe92 <malloc+0x9c>
     e3a:	90 93 a4 02 	sts	0x02A4, r25
     e3e:	80 93 a3 02 	sts	0x02A3, r24
     e42:	27 c0       	rjmp	.+78     	; 0xe92 <malloc+0x9c>
     e44:	21 15       	cp	r18, r1
     e46:	31 05       	cpc	r19, r1
     e48:	31 f0       	breq	.+12     	; 0xe56 <malloc+0x60>
     e4a:	42 17       	cp	r20, r18
     e4c:	53 07       	cpc	r21, r19
     e4e:	18 f0       	brcs	.+6      	; 0xe56 <malloc+0x60>
     e50:	a9 01       	movw	r20, r18
     e52:	db 01       	movw	r26, r22
     e54:	01 c0       	rjmp	.+2      	; 0xe58 <malloc+0x62>
     e56:	ef 01       	movw	r28, r30
     e58:	9a 01       	movw	r18, r20
     e5a:	bd 01       	movw	r22, r26
     e5c:	df 01       	movw	r26, r30
     e5e:	02 80       	ldd	r0, Z+2	; 0x02
     e60:	f3 81       	ldd	r31, Z+3	; 0x03
     e62:	e0 2d       	mov	r30, r0
     e64:	d7 cf       	rjmp	.-82     	; 0xe14 <malloc+0x1e>
     e66:	21 15       	cp	r18, r1
     e68:	31 05       	cpc	r19, r1
     e6a:	f9 f0       	breq	.+62     	; 0xeaa <malloc+0xb4>
     e6c:	28 1b       	sub	r18, r24
     e6e:	39 0b       	sbc	r19, r25
     e70:	24 30       	cpi	r18, 0x04	; 4
     e72:	31 05       	cpc	r19, r1
     e74:	80 f4       	brcc	.+32     	; 0xe96 <malloc+0xa0>
     e76:	8a 81       	ldd	r24, Y+2	; 0x02
     e78:	9b 81       	ldd	r25, Y+3	; 0x03
     e7a:	61 15       	cp	r22, r1
     e7c:	71 05       	cpc	r23, r1
     e7e:	21 f0       	breq	.+8      	; 0xe88 <malloc+0x92>
     e80:	fb 01       	movw	r30, r22
     e82:	93 83       	std	Z+3, r25	; 0x03
     e84:	82 83       	std	Z+2, r24	; 0x02
     e86:	04 c0       	rjmp	.+8      	; 0xe90 <malloc+0x9a>
     e88:	90 93 a4 02 	sts	0x02A4, r25
     e8c:	80 93 a3 02 	sts	0x02A3, r24
     e90:	fe 01       	movw	r30, r28
     e92:	32 96       	adiw	r30, 0x02	; 2
     e94:	44 c0       	rjmp	.+136    	; 0xf1e <malloc+0x128>
     e96:	fe 01       	movw	r30, r28
     e98:	e2 0f       	add	r30, r18
     e9a:	f3 1f       	adc	r31, r19
     e9c:	81 93       	st	Z+, r24
     e9e:	91 93       	st	Z+, r25
     ea0:	22 50       	subi	r18, 0x02	; 2
     ea2:	31 09       	sbc	r19, r1
     ea4:	39 83       	std	Y+1, r19	; 0x01
     ea6:	28 83       	st	Y, r18
     ea8:	3a c0       	rjmp	.+116    	; 0xf1e <malloc+0x128>
     eaa:	20 91 a1 02 	lds	r18, 0x02A1
     eae:	30 91 a2 02 	lds	r19, 0x02A2
     eb2:	23 2b       	or	r18, r19
     eb4:	41 f4       	brne	.+16     	; 0xec6 <malloc+0xd0>
     eb6:	20 91 02 01 	lds	r18, 0x0102
     eba:	30 91 03 01 	lds	r19, 0x0103
     ebe:	30 93 a2 02 	sts	0x02A2, r19
     ec2:	20 93 a1 02 	sts	0x02A1, r18
     ec6:	20 91 00 01 	lds	r18, 0x0100
     eca:	30 91 01 01 	lds	r19, 0x0101
     ece:	21 15       	cp	r18, r1
     ed0:	31 05       	cpc	r19, r1
     ed2:	41 f4       	brne	.+16     	; 0xee4 <malloc+0xee>
     ed4:	2d b7       	in	r18, 0x3d	; 61
     ed6:	3e b7       	in	r19, 0x3e	; 62
     ed8:	40 91 04 01 	lds	r20, 0x0104
     edc:	50 91 05 01 	lds	r21, 0x0105
     ee0:	24 1b       	sub	r18, r20
     ee2:	35 0b       	sbc	r19, r21
     ee4:	e0 91 a1 02 	lds	r30, 0x02A1
     ee8:	f0 91 a2 02 	lds	r31, 0x02A2
     eec:	e2 17       	cp	r30, r18
     eee:	f3 07       	cpc	r31, r19
     ef0:	a0 f4       	brcc	.+40     	; 0xf1a <malloc+0x124>
     ef2:	2e 1b       	sub	r18, r30
     ef4:	3f 0b       	sbc	r19, r31
     ef6:	28 17       	cp	r18, r24
     ef8:	39 07       	cpc	r19, r25
     efa:	78 f0       	brcs	.+30     	; 0xf1a <malloc+0x124>
     efc:	ac 01       	movw	r20, r24
     efe:	4e 5f       	subi	r20, 0xFE	; 254
     f00:	5f 4f       	sbci	r21, 0xFF	; 255
     f02:	24 17       	cp	r18, r20
     f04:	35 07       	cpc	r19, r21
     f06:	48 f0       	brcs	.+18     	; 0xf1a <malloc+0x124>
     f08:	4e 0f       	add	r20, r30
     f0a:	5f 1f       	adc	r21, r31
     f0c:	50 93 a2 02 	sts	0x02A2, r21
     f10:	40 93 a1 02 	sts	0x02A1, r20
     f14:	81 93       	st	Z+, r24
     f16:	91 93       	st	Z+, r25
     f18:	02 c0       	rjmp	.+4      	; 0xf1e <malloc+0x128>
     f1a:	e0 e0       	ldi	r30, 0x00	; 0
     f1c:	f0 e0       	ldi	r31, 0x00	; 0
     f1e:	cf 01       	movw	r24, r30
     f20:	df 91       	pop	r29
     f22:	cf 91       	pop	r28
     f24:	08 95       	ret

00000f26 <free>:
     f26:	cf 93       	push	r28
     f28:	df 93       	push	r29
     f2a:	00 97       	sbiw	r24, 0x00	; 0
     f2c:	09 f4       	brne	.+2      	; 0xf30 <free+0xa>
     f2e:	87 c0       	rjmp	.+270    	; 0x103e <free+0x118>
     f30:	fc 01       	movw	r30, r24
     f32:	32 97       	sbiw	r30, 0x02	; 2
     f34:	13 82       	std	Z+3, r1	; 0x03
     f36:	12 82       	std	Z+2, r1	; 0x02
     f38:	c0 91 a3 02 	lds	r28, 0x02A3
     f3c:	d0 91 a4 02 	lds	r29, 0x02A4
     f40:	20 97       	sbiw	r28, 0x00	; 0
     f42:	81 f4       	brne	.+32     	; 0xf64 <free+0x3e>
     f44:	20 81       	ld	r18, Z
     f46:	31 81       	ldd	r19, Z+1	; 0x01
     f48:	28 0f       	add	r18, r24
     f4a:	39 1f       	adc	r19, r25
     f4c:	80 91 a1 02 	lds	r24, 0x02A1
     f50:	90 91 a2 02 	lds	r25, 0x02A2
     f54:	82 17       	cp	r24, r18
     f56:	93 07       	cpc	r25, r19
     f58:	79 f5       	brne	.+94     	; 0xfb8 <free+0x92>
     f5a:	f0 93 a2 02 	sts	0x02A2, r31
     f5e:	e0 93 a1 02 	sts	0x02A1, r30
     f62:	6d c0       	rjmp	.+218    	; 0x103e <free+0x118>
     f64:	de 01       	movw	r26, r28
     f66:	20 e0       	ldi	r18, 0x00	; 0
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	ae 17       	cp	r26, r30
     f6c:	bf 07       	cpc	r27, r31
     f6e:	50 f4       	brcc	.+20     	; 0xf84 <free+0x5e>
     f70:	12 96       	adiw	r26, 0x02	; 2
     f72:	4d 91       	ld	r20, X+
     f74:	5c 91       	ld	r21, X
     f76:	13 97       	sbiw	r26, 0x03	; 3
     f78:	9d 01       	movw	r18, r26
     f7a:	41 15       	cp	r20, r1
     f7c:	51 05       	cpc	r21, r1
     f7e:	09 f1       	breq	.+66     	; 0xfc2 <free+0x9c>
     f80:	da 01       	movw	r26, r20
     f82:	f3 cf       	rjmp	.-26     	; 0xf6a <free+0x44>
     f84:	b3 83       	std	Z+3, r27	; 0x03
     f86:	a2 83       	std	Z+2, r26	; 0x02
     f88:	40 81       	ld	r20, Z
     f8a:	51 81       	ldd	r21, Z+1	; 0x01
     f8c:	84 0f       	add	r24, r20
     f8e:	95 1f       	adc	r25, r21
     f90:	8a 17       	cp	r24, r26
     f92:	9b 07       	cpc	r25, r27
     f94:	71 f4       	brne	.+28     	; 0xfb2 <free+0x8c>
     f96:	8d 91       	ld	r24, X+
     f98:	9c 91       	ld	r25, X
     f9a:	11 97       	sbiw	r26, 0x01	; 1
     f9c:	84 0f       	add	r24, r20
     f9e:	95 1f       	adc	r25, r21
     fa0:	02 96       	adiw	r24, 0x02	; 2
     fa2:	91 83       	std	Z+1, r25	; 0x01
     fa4:	80 83       	st	Z, r24
     fa6:	12 96       	adiw	r26, 0x02	; 2
     fa8:	8d 91       	ld	r24, X+
     faa:	9c 91       	ld	r25, X
     fac:	13 97       	sbiw	r26, 0x03	; 3
     fae:	93 83       	std	Z+3, r25	; 0x03
     fb0:	82 83       	std	Z+2, r24	; 0x02
     fb2:	21 15       	cp	r18, r1
     fb4:	31 05       	cpc	r19, r1
     fb6:	29 f4       	brne	.+10     	; 0xfc2 <free+0x9c>
     fb8:	f0 93 a4 02 	sts	0x02A4, r31
     fbc:	e0 93 a3 02 	sts	0x02A3, r30
     fc0:	3e c0       	rjmp	.+124    	; 0x103e <free+0x118>
     fc2:	d9 01       	movw	r26, r18
     fc4:	13 96       	adiw	r26, 0x03	; 3
     fc6:	fc 93       	st	X, r31
     fc8:	ee 93       	st	-X, r30
     fca:	12 97       	sbiw	r26, 0x02	; 2
     fcc:	4d 91       	ld	r20, X+
     fce:	5d 91       	ld	r21, X+
     fd0:	a4 0f       	add	r26, r20
     fd2:	b5 1f       	adc	r27, r21
     fd4:	ea 17       	cp	r30, r26
     fd6:	fb 07       	cpc	r31, r27
     fd8:	79 f4       	brne	.+30     	; 0xff8 <free+0xd2>
     fda:	80 81       	ld	r24, Z
     fdc:	91 81       	ldd	r25, Z+1	; 0x01
     fde:	84 0f       	add	r24, r20
     fe0:	95 1f       	adc	r25, r21
     fe2:	02 96       	adiw	r24, 0x02	; 2
     fe4:	d9 01       	movw	r26, r18
     fe6:	11 96       	adiw	r26, 0x01	; 1
     fe8:	9c 93       	st	X, r25
     fea:	8e 93       	st	-X, r24
     fec:	82 81       	ldd	r24, Z+2	; 0x02
     fee:	93 81       	ldd	r25, Z+3	; 0x03
     ff0:	13 96       	adiw	r26, 0x03	; 3
     ff2:	9c 93       	st	X, r25
     ff4:	8e 93       	st	-X, r24
     ff6:	12 97       	sbiw	r26, 0x02	; 2
     ff8:	e0 e0       	ldi	r30, 0x00	; 0
     ffa:	f0 e0       	ldi	r31, 0x00	; 0
     ffc:	8a 81       	ldd	r24, Y+2	; 0x02
     ffe:	9b 81       	ldd	r25, Y+3	; 0x03
    1000:	00 97       	sbiw	r24, 0x00	; 0
    1002:	19 f0       	breq	.+6      	; 0x100a <free+0xe4>
    1004:	fe 01       	movw	r30, r28
    1006:	ec 01       	movw	r28, r24
    1008:	f9 cf       	rjmp	.-14     	; 0xffc <free+0xd6>
    100a:	ce 01       	movw	r24, r28
    100c:	02 96       	adiw	r24, 0x02	; 2
    100e:	28 81       	ld	r18, Y
    1010:	39 81       	ldd	r19, Y+1	; 0x01
    1012:	82 0f       	add	r24, r18
    1014:	93 1f       	adc	r25, r19
    1016:	20 91 a1 02 	lds	r18, 0x02A1
    101a:	30 91 a2 02 	lds	r19, 0x02A2
    101e:	28 17       	cp	r18, r24
    1020:	39 07       	cpc	r19, r25
    1022:	69 f4       	brne	.+26     	; 0x103e <free+0x118>
    1024:	30 97       	sbiw	r30, 0x00	; 0
    1026:	29 f4       	brne	.+10     	; 0x1032 <free+0x10c>
    1028:	10 92 a4 02 	sts	0x02A4, r1
    102c:	10 92 a3 02 	sts	0x02A3, r1
    1030:	02 c0       	rjmp	.+4      	; 0x1036 <free+0x110>
    1032:	13 82       	std	Z+3, r1	; 0x03
    1034:	12 82       	std	Z+2, r1	; 0x02
    1036:	d0 93 a2 02 	sts	0x02A2, r29
    103a:	c0 93 a1 02 	sts	0x02A1, r28
    103e:	df 91       	pop	r29
    1040:	cf 91       	pop	r28
    1042:	08 95       	ret

00001044 <fdevopen>:
    1044:	0f 93       	push	r16
    1046:	1f 93       	push	r17
    1048:	cf 93       	push	r28
    104a:	df 93       	push	r29
    104c:	ec 01       	movw	r28, r24
    104e:	8b 01       	movw	r16, r22
    1050:	00 97       	sbiw	r24, 0x00	; 0
    1052:	31 f4       	brne	.+12     	; 0x1060 <fdevopen+0x1c>
    1054:	61 15       	cp	r22, r1
    1056:	71 05       	cpc	r23, r1
    1058:	19 f4       	brne	.+6      	; 0x1060 <fdevopen+0x1c>
    105a:	80 e0       	ldi	r24, 0x00	; 0
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	38 c0       	rjmp	.+112    	; 0x10d0 <fdevopen+0x8c>
    1060:	6e e0       	ldi	r22, 0x0E	; 14
    1062:	70 e0       	ldi	r23, 0x00	; 0
    1064:	81 e0       	ldi	r24, 0x01	; 1
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	0e 94 80 0a 	call	0x1500	; 0x1500 <calloc>
    106c:	fc 01       	movw	r30, r24
    106e:	00 97       	sbiw	r24, 0x00	; 0
    1070:	a1 f3       	breq	.-24     	; 0x105a <fdevopen+0x16>
    1072:	80 e8       	ldi	r24, 0x80	; 128
    1074:	83 83       	std	Z+3, r24	; 0x03
    1076:	01 15       	cp	r16, r1
    1078:	11 05       	cpc	r17, r1
    107a:	71 f0       	breq	.+28     	; 0x1098 <fdevopen+0x54>
    107c:	13 87       	std	Z+11, r17	; 0x0b
    107e:	02 87       	std	Z+10, r16	; 0x0a
    1080:	81 e8       	ldi	r24, 0x81	; 129
    1082:	83 83       	std	Z+3, r24	; 0x03
    1084:	80 91 a5 02 	lds	r24, 0x02A5
    1088:	90 91 a6 02 	lds	r25, 0x02A6
    108c:	89 2b       	or	r24, r25
    108e:	21 f4       	brne	.+8      	; 0x1098 <fdevopen+0x54>
    1090:	f0 93 a6 02 	sts	0x02A6, r31
    1094:	e0 93 a5 02 	sts	0x02A5, r30
    1098:	20 97       	sbiw	r28, 0x00	; 0
    109a:	c9 f0       	breq	.+50     	; 0x10ce <fdevopen+0x8a>
    109c:	d1 87       	std	Z+9, r29	; 0x09
    109e:	c0 87       	std	Z+8, r28	; 0x08
    10a0:	83 81       	ldd	r24, Z+3	; 0x03
    10a2:	82 60       	ori	r24, 0x02	; 2
    10a4:	83 83       	std	Z+3, r24	; 0x03
    10a6:	80 91 a7 02 	lds	r24, 0x02A7
    10aa:	90 91 a8 02 	lds	r25, 0x02A8
    10ae:	89 2b       	or	r24, r25
    10b0:	71 f4       	brne	.+28     	; 0x10ce <fdevopen+0x8a>
    10b2:	f0 93 a8 02 	sts	0x02A8, r31
    10b6:	e0 93 a7 02 	sts	0x02A7, r30
    10ba:	80 91 a9 02 	lds	r24, 0x02A9
    10be:	90 91 aa 02 	lds	r25, 0x02AA
    10c2:	89 2b       	or	r24, r25
    10c4:	21 f4       	brne	.+8      	; 0x10ce <fdevopen+0x8a>
    10c6:	f0 93 aa 02 	sts	0x02AA, r31
    10ca:	e0 93 a9 02 	sts	0x02A9, r30
    10ce:	cf 01       	movw	r24, r30
    10d0:	df 91       	pop	r29
    10d2:	cf 91       	pop	r28
    10d4:	1f 91       	pop	r17
    10d6:	0f 91       	pop	r16
    10d8:	08 95       	ret

000010da <printf>:
    10da:	a0 e0       	ldi	r26, 0x00	; 0
    10dc:	b0 e0       	ldi	r27, 0x00	; 0
    10de:	e3 e7       	ldi	r30, 0x73	; 115
    10e0:	f8 e0       	ldi	r31, 0x08	; 8
    10e2:	0c 94 59 0b 	jmp	0x16b2	; 0x16b2 <__prologue_saves__+0x20>
    10e6:	fe 01       	movw	r30, r28
    10e8:	35 96       	adiw	r30, 0x05	; 5
    10ea:	61 91       	ld	r22, Z+
    10ec:	71 91       	ld	r23, Z+
    10ee:	af 01       	movw	r20, r30
    10f0:	80 91 a7 02 	lds	r24, 0x02A7
    10f4:	90 91 a8 02 	lds	r25, 0x02A8
    10f8:	0e 94 ae 08 	call	0x115c	; 0x115c <vfprintf>
    10fc:	e2 e0       	ldi	r30, 0x02	; 2
    10fe:	0c 94 75 0b 	jmp	0x16ea	; 0x16ea <__epilogue_restores__+0x20>

00001102 <puts>:
    1102:	0f 93       	push	r16
    1104:	1f 93       	push	r17
    1106:	cf 93       	push	r28
    1108:	df 93       	push	r29
    110a:	e0 91 a7 02 	lds	r30, 0x02A7
    110e:	f0 91 a8 02 	lds	r31, 0x02A8
    1112:	23 81       	ldd	r18, Z+3	; 0x03
    1114:	21 ff       	sbrs	r18, 1
    1116:	1b c0       	rjmp	.+54     	; 0x114e <puts+0x4c>
    1118:	ec 01       	movw	r28, r24
    111a:	00 e0       	ldi	r16, 0x00	; 0
    111c:	10 e0       	ldi	r17, 0x00	; 0
    111e:	89 91       	ld	r24, Y+
    1120:	60 91 a7 02 	lds	r22, 0x02A7
    1124:	70 91 a8 02 	lds	r23, 0x02A8
    1128:	db 01       	movw	r26, r22
    112a:	18 96       	adiw	r26, 0x08	; 8
    112c:	ed 91       	ld	r30, X+
    112e:	fc 91       	ld	r31, X
    1130:	19 97       	sbiw	r26, 0x09	; 9
    1132:	88 23       	and	r24, r24
    1134:	31 f0       	breq	.+12     	; 0x1142 <puts+0x40>
    1136:	09 95       	icall
    1138:	89 2b       	or	r24, r25
    113a:	89 f3       	breq	.-30     	; 0x111e <puts+0x1c>
    113c:	0f ef       	ldi	r16, 0xFF	; 255
    113e:	1f ef       	ldi	r17, 0xFF	; 255
    1140:	ee cf       	rjmp	.-36     	; 0x111e <puts+0x1c>
    1142:	8a e0       	ldi	r24, 0x0A	; 10
    1144:	09 95       	icall
    1146:	89 2b       	or	r24, r25
    1148:	11 f4       	brne	.+4      	; 0x114e <puts+0x4c>
    114a:	c8 01       	movw	r24, r16
    114c:	02 c0       	rjmp	.+4      	; 0x1152 <puts+0x50>
    114e:	8f ef       	ldi	r24, 0xFF	; 255
    1150:	9f ef       	ldi	r25, 0xFF	; 255
    1152:	df 91       	pop	r29
    1154:	cf 91       	pop	r28
    1156:	1f 91       	pop	r17
    1158:	0f 91       	pop	r16
    115a:	08 95       	ret

0000115c <vfprintf>:
    115c:	ac e0       	ldi	r26, 0x0C	; 12
    115e:	b0 e0       	ldi	r27, 0x00	; 0
    1160:	e4 eb       	ldi	r30, 0xB4	; 180
    1162:	f8 e0       	ldi	r31, 0x08	; 8
    1164:	0c 94 49 0b 	jmp	0x1692	; 0x1692 <__prologue_saves__>
    1168:	7c 01       	movw	r14, r24
    116a:	6b 01       	movw	r12, r22
    116c:	8a 01       	movw	r16, r20
    116e:	fc 01       	movw	r30, r24
    1170:	17 82       	std	Z+7, r1	; 0x07
    1172:	16 82       	std	Z+6, r1	; 0x06
    1174:	83 81       	ldd	r24, Z+3	; 0x03
    1176:	81 ff       	sbrs	r24, 1
    1178:	bd c1       	rjmp	.+890    	; 0x14f4 <vfprintf+0x398>
    117a:	ce 01       	movw	r24, r28
    117c:	01 96       	adiw	r24, 0x01	; 1
    117e:	4c 01       	movw	r8, r24
    1180:	f7 01       	movw	r30, r14
    1182:	93 81       	ldd	r25, Z+3	; 0x03
    1184:	f6 01       	movw	r30, r12
    1186:	93 fd       	sbrc	r25, 3
    1188:	85 91       	lpm	r24, Z+
    118a:	93 ff       	sbrs	r25, 3
    118c:	81 91       	ld	r24, Z+
    118e:	6f 01       	movw	r12, r30
    1190:	88 23       	and	r24, r24
    1192:	09 f4       	brne	.+2      	; 0x1196 <vfprintf+0x3a>
    1194:	ab c1       	rjmp	.+854    	; 0x14ec <vfprintf+0x390>
    1196:	85 32       	cpi	r24, 0x25	; 37
    1198:	39 f4       	brne	.+14     	; 0x11a8 <vfprintf+0x4c>
    119a:	93 fd       	sbrc	r25, 3
    119c:	85 91       	lpm	r24, Z+
    119e:	93 ff       	sbrs	r25, 3
    11a0:	81 91       	ld	r24, Z+
    11a2:	6f 01       	movw	r12, r30
    11a4:	85 32       	cpi	r24, 0x25	; 37
    11a6:	29 f4       	brne	.+10     	; 0x11b2 <vfprintf+0x56>
    11a8:	b7 01       	movw	r22, r14
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
    11b0:	e7 cf       	rjmp	.-50     	; 0x1180 <vfprintf+0x24>
    11b2:	51 2c       	mov	r5, r1
    11b4:	31 2c       	mov	r3, r1
    11b6:	20 e0       	ldi	r18, 0x00	; 0
    11b8:	20 32       	cpi	r18, 0x20	; 32
    11ba:	a0 f4       	brcc	.+40     	; 0x11e4 <vfprintf+0x88>
    11bc:	8b 32       	cpi	r24, 0x2B	; 43
    11be:	69 f0       	breq	.+26     	; 0x11da <vfprintf+0x7e>
    11c0:	30 f4       	brcc	.+12     	; 0x11ce <vfprintf+0x72>
    11c2:	80 32       	cpi	r24, 0x20	; 32
    11c4:	59 f0       	breq	.+22     	; 0x11dc <vfprintf+0x80>
    11c6:	83 32       	cpi	r24, 0x23	; 35
    11c8:	69 f4       	brne	.+26     	; 0x11e4 <vfprintf+0x88>
    11ca:	20 61       	ori	r18, 0x10	; 16
    11cc:	2c c0       	rjmp	.+88     	; 0x1226 <vfprintf+0xca>
    11ce:	8d 32       	cpi	r24, 0x2D	; 45
    11d0:	39 f0       	breq	.+14     	; 0x11e0 <vfprintf+0x84>
    11d2:	80 33       	cpi	r24, 0x30	; 48
    11d4:	39 f4       	brne	.+14     	; 0x11e4 <vfprintf+0x88>
    11d6:	21 60       	ori	r18, 0x01	; 1
    11d8:	26 c0       	rjmp	.+76     	; 0x1226 <vfprintf+0xca>
    11da:	22 60       	ori	r18, 0x02	; 2
    11dc:	24 60       	ori	r18, 0x04	; 4
    11de:	23 c0       	rjmp	.+70     	; 0x1226 <vfprintf+0xca>
    11e0:	28 60       	ori	r18, 0x08	; 8
    11e2:	21 c0       	rjmp	.+66     	; 0x1226 <vfprintf+0xca>
    11e4:	27 fd       	sbrc	r18, 7
    11e6:	27 c0       	rjmp	.+78     	; 0x1236 <vfprintf+0xda>
    11e8:	30 ed       	ldi	r19, 0xD0	; 208
    11ea:	38 0f       	add	r19, r24
    11ec:	3a 30       	cpi	r19, 0x0A	; 10
    11ee:	78 f4       	brcc	.+30     	; 0x120e <vfprintf+0xb2>
    11f0:	26 ff       	sbrs	r18, 6
    11f2:	06 c0       	rjmp	.+12     	; 0x1200 <vfprintf+0xa4>
    11f4:	fa e0       	ldi	r31, 0x0A	; 10
    11f6:	5f 9e       	mul	r5, r31
    11f8:	30 0d       	add	r19, r0
    11fa:	11 24       	eor	r1, r1
    11fc:	53 2e       	mov	r5, r19
    11fe:	13 c0       	rjmp	.+38     	; 0x1226 <vfprintf+0xca>
    1200:	8a e0       	ldi	r24, 0x0A	; 10
    1202:	38 9e       	mul	r3, r24
    1204:	30 0d       	add	r19, r0
    1206:	11 24       	eor	r1, r1
    1208:	33 2e       	mov	r3, r19
    120a:	20 62       	ori	r18, 0x20	; 32
    120c:	0c c0       	rjmp	.+24     	; 0x1226 <vfprintf+0xca>
    120e:	8e 32       	cpi	r24, 0x2E	; 46
    1210:	21 f4       	brne	.+8      	; 0x121a <vfprintf+0xbe>
    1212:	26 fd       	sbrc	r18, 6
    1214:	6b c1       	rjmp	.+726    	; 0x14ec <vfprintf+0x390>
    1216:	20 64       	ori	r18, 0x40	; 64
    1218:	06 c0       	rjmp	.+12     	; 0x1226 <vfprintf+0xca>
    121a:	8c 36       	cpi	r24, 0x6C	; 108
    121c:	11 f4       	brne	.+4      	; 0x1222 <vfprintf+0xc6>
    121e:	20 68       	ori	r18, 0x80	; 128
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <vfprintf+0xca>
    1222:	88 36       	cpi	r24, 0x68	; 104
    1224:	41 f4       	brne	.+16     	; 0x1236 <vfprintf+0xda>
    1226:	f6 01       	movw	r30, r12
    1228:	93 fd       	sbrc	r25, 3
    122a:	85 91       	lpm	r24, Z+
    122c:	93 ff       	sbrs	r25, 3
    122e:	81 91       	ld	r24, Z+
    1230:	6f 01       	movw	r12, r30
    1232:	81 11       	cpse	r24, r1
    1234:	c1 cf       	rjmp	.-126    	; 0x11b8 <vfprintf+0x5c>
    1236:	98 2f       	mov	r25, r24
    1238:	9f 7d       	andi	r25, 0xDF	; 223
    123a:	95 54       	subi	r25, 0x45	; 69
    123c:	93 30       	cpi	r25, 0x03	; 3
    123e:	28 f4       	brcc	.+10     	; 0x124a <vfprintf+0xee>
    1240:	0c 5f       	subi	r16, 0xFC	; 252
    1242:	1f 4f       	sbci	r17, 0xFF	; 255
    1244:	ff e3       	ldi	r31, 0x3F	; 63
    1246:	f9 83       	std	Y+1, r31	; 0x01
    1248:	0d c0       	rjmp	.+26     	; 0x1264 <vfprintf+0x108>
    124a:	83 36       	cpi	r24, 0x63	; 99
    124c:	31 f0       	breq	.+12     	; 0x125a <vfprintf+0xfe>
    124e:	83 37       	cpi	r24, 0x73	; 115
    1250:	71 f0       	breq	.+28     	; 0x126e <vfprintf+0x112>
    1252:	83 35       	cpi	r24, 0x53	; 83
    1254:	09 f0       	breq	.+2      	; 0x1258 <vfprintf+0xfc>
    1256:	5b c0       	rjmp	.+182    	; 0x130e <vfprintf+0x1b2>
    1258:	22 c0       	rjmp	.+68     	; 0x129e <vfprintf+0x142>
    125a:	f8 01       	movw	r30, r16
    125c:	80 81       	ld	r24, Z
    125e:	89 83       	std	Y+1, r24	; 0x01
    1260:	0e 5f       	subi	r16, 0xFE	; 254
    1262:	1f 4f       	sbci	r17, 0xFF	; 255
    1264:	44 24       	eor	r4, r4
    1266:	43 94       	inc	r4
    1268:	51 2c       	mov	r5, r1
    126a:	54 01       	movw	r10, r8
    126c:	15 c0       	rjmp	.+42     	; 0x1298 <vfprintf+0x13c>
    126e:	38 01       	movw	r6, r16
    1270:	f2 e0       	ldi	r31, 0x02	; 2
    1272:	6f 0e       	add	r6, r31
    1274:	71 1c       	adc	r7, r1
    1276:	f8 01       	movw	r30, r16
    1278:	a0 80       	ld	r10, Z
    127a:	b1 80       	ldd	r11, Z+1	; 0x01
    127c:	26 ff       	sbrs	r18, 6
    127e:	03 c0       	rjmp	.+6      	; 0x1286 <vfprintf+0x12a>
    1280:	65 2d       	mov	r22, r5
    1282:	70 e0       	ldi	r23, 0x00	; 0
    1284:	02 c0       	rjmp	.+4      	; 0x128a <vfprintf+0x12e>
    1286:	6f ef       	ldi	r22, 0xFF	; 255
    1288:	7f ef       	ldi	r23, 0xFF	; 255
    128a:	c5 01       	movw	r24, r10
    128c:	2c 87       	std	Y+12, r18	; 0x0c
    128e:	0e 94 ae 0a 	call	0x155c	; 0x155c <strnlen>
    1292:	2c 01       	movw	r4, r24
    1294:	83 01       	movw	r16, r6
    1296:	2c 85       	ldd	r18, Y+12	; 0x0c
    1298:	2f 77       	andi	r18, 0x7F	; 127
    129a:	22 2e       	mov	r2, r18
    129c:	17 c0       	rjmp	.+46     	; 0x12cc <vfprintf+0x170>
    129e:	38 01       	movw	r6, r16
    12a0:	f2 e0       	ldi	r31, 0x02	; 2
    12a2:	6f 0e       	add	r6, r31
    12a4:	71 1c       	adc	r7, r1
    12a6:	f8 01       	movw	r30, r16
    12a8:	a0 80       	ld	r10, Z
    12aa:	b1 80       	ldd	r11, Z+1	; 0x01
    12ac:	26 ff       	sbrs	r18, 6
    12ae:	03 c0       	rjmp	.+6      	; 0x12b6 <vfprintf+0x15a>
    12b0:	65 2d       	mov	r22, r5
    12b2:	70 e0       	ldi	r23, 0x00	; 0
    12b4:	02 c0       	rjmp	.+4      	; 0x12ba <vfprintf+0x15e>
    12b6:	6f ef       	ldi	r22, 0xFF	; 255
    12b8:	7f ef       	ldi	r23, 0xFF	; 255
    12ba:	c5 01       	movw	r24, r10
    12bc:	2c 87       	std	Y+12, r18	; 0x0c
    12be:	0e 94 9c 0a 	call	0x1538	; 0x1538 <strnlen_P>
    12c2:	2c 01       	movw	r4, r24
    12c4:	2c 85       	ldd	r18, Y+12	; 0x0c
    12c6:	20 68       	ori	r18, 0x80	; 128
    12c8:	22 2e       	mov	r2, r18
    12ca:	83 01       	movw	r16, r6
    12cc:	23 fc       	sbrc	r2, 3
    12ce:	1b c0       	rjmp	.+54     	; 0x1306 <vfprintf+0x1aa>
    12d0:	83 2d       	mov	r24, r3
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	48 16       	cp	r4, r24
    12d6:	59 06       	cpc	r5, r25
    12d8:	b0 f4       	brcc	.+44     	; 0x1306 <vfprintf+0x1aa>
    12da:	b7 01       	movw	r22, r14
    12dc:	80 e2       	ldi	r24, 0x20	; 32
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
    12e4:	3a 94       	dec	r3
    12e6:	f4 cf       	rjmp	.-24     	; 0x12d0 <vfprintf+0x174>
    12e8:	f5 01       	movw	r30, r10
    12ea:	27 fc       	sbrc	r2, 7
    12ec:	85 91       	lpm	r24, Z+
    12ee:	27 fe       	sbrs	r2, 7
    12f0:	81 91       	ld	r24, Z+
    12f2:	5f 01       	movw	r10, r30
    12f4:	b7 01       	movw	r22, r14
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
    12fc:	31 10       	cpse	r3, r1
    12fe:	3a 94       	dec	r3
    1300:	f1 e0       	ldi	r31, 0x01	; 1
    1302:	4f 1a       	sub	r4, r31
    1304:	51 08       	sbc	r5, r1
    1306:	41 14       	cp	r4, r1
    1308:	51 04       	cpc	r5, r1
    130a:	71 f7       	brne	.-36     	; 0x12e8 <vfprintf+0x18c>
    130c:	e5 c0       	rjmp	.+458    	; 0x14d8 <vfprintf+0x37c>
    130e:	84 36       	cpi	r24, 0x64	; 100
    1310:	11 f0       	breq	.+4      	; 0x1316 <vfprintf+0x1ba>
    1312:	89 36       	cpi	r24, 0x69	; 105
    1314:	39 f5       	brne	.+78     	; 0x1364 <vfprintf+0x208>
    1316:	f8 01       	movw	r30, r16
    1318:	27 ff       	sbrs	r18, 7
    131a:	07 c0       	rjmp	.+14     	; 0x132a <vfprintf+0x1ce>
    131c:	60 81       	ld	r22, Z
    131e:	71 81       	ldd	r23, Z+1	; 0x01
    1320:	82 81       	ldd	r24, Z+2	; 0x02
    1322:	93 81       	ldd	r25, Z+3	; 0x03
    1324:	0c 5f       	subi	r16, 0xFC	; 252
    1326:	1f 4f       	sbci	r17, 0xFF	; 255
    1328:	08 c0       	rjmp	.+16     	; 0x133a <vfprintf+0x1de>
    132a:	60 81       	ld	r22, Z
    132c:	71 81       	ldd	r23, Z+1	; 0x01
    132e:	88 27       	eor	r24, r24
    1330:	77 fd       	sbrc	r23, 7
    1332:	80 95       	com	r24
    1334:	98 2f       	mov	r25, r24
    1336:	0e 5f       	subi	r16, 0xFE	; 254
    1338:	1f 4f       	sbci	r17, 0xFF	; 255
    133a:	2f 76       	andi	r18, 0x6F	; 111
    133c:	b2 2e       	mov	r11, r18
    133e:	97 ff       	sbrs	r25, 7
    1340:	09 c0       	rjmp	.+18     	; 0x1354 <vfprintf+0x1f8>
    1342:	90 95       	com	r25
    1344:	80 95       	com	r24
    1346:	70 95       	com	r23
    1348:	61 95       	neg	r22
    134a:	7f 4f       	sbci	r23, 0xFF	; 255
    134c:	8f 4f       	sbci	r24, 0xFF	; 255
    134e:	9f 4f       	sbci	r25, 0xFF	; 255
    1350:	20 68       	ori	r18, 0x80	; 128
    1352:	b2 2e       	mov	r11, r18
    1354:	2a e0       	ldi	r18, 0x0A	; 10
    1356:	30 e0       	ldi	r19, 0x00	; 0
    1358:	a4 01       	movw	r20, r8
    135a:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__ultoa_invert>
    135e:	a8 2e       	mov	r10, r24
    1360:	a8 18       	sub	r10, r8
    1362:	44 c0       	rjmp	.+136    	; 0x13ec <vfprintf+0x290>
    1364:	85 37       	cpi	r24, 0x75	; 117
    1366:	29 f4       	brne	.+10     	; 0x1372 <vfprintf+0x216>
    1368:	2f 7e       	andi	r18, 0xEF	; 239
    136a:	b2 2e       	mov	r11, r18
    136c:	2a e0       	ldi	r18, 0x0A	; 10
    136e:	30 e0       	ldi	r19, 0x00	; 0
    1370:	25 c0       	rjmp	.+74     	; 0x13bc <vfprintf+0x260>
    1372:	f2 2f       	mov	r31, r18
    1374:	f9 7f       	andi	r31, 0xF9	; 249
    1376:	bf 2e       	mov	r11, r31
    1378:	8f 36       	cpi	r24, 0x6F	; 111
    137a:	c1 f0       	breq	.+48     	; 0x13ac <vfprintf+0x250>
    137c:	18 f4       	brcc	.+6      	; 0x1384 <vfprintf+0x228>
    137e:	88 35       	cpi	r24, 0x58	; 88
    1380:	79 f0       	breq	.+30     	; 0x13a0 <vfprintf+0x244>
    1382:	b4 c0       	rjmp	.+360    	; 0x14ec <vfprintf+0x390>
    1384:	80 37       	cpi	r24, 0x70	; 112
    1386:	19 f0       	breq	.+6      	; 0x138e <vfprintf+0x232>
    1388:	88 37       	cpi	r24, 0x78	; 120
    138a:	21 f0       	breq	.+8      	; 0x1394 <vfprintf+0x238>
    138c:	af c0       	rjmp	.+350    	; 0x14ec <vfprintf+0x390>
    138e:	2f 2f       	mov	r18, r31
    1390:	20 61       	ori	r18, 0x10	; 16
    1392:	b2 2e       	mov	r11, r18
    1394:	b4 fe       	sbrs	r11, 4
    1396:	0d c0       	rjmp	.+26     	; 0x13b2 <vfprintf+0x256>
    1398:	8b 2d       	mov	r24, r11
    139a:	84 60       	ori	r24, 0x04	; 4
    139c:	b8 2e       	mov	r11, r24
    139e:	09 c0       	rjmp	.+18     	; 0x13b2 <vfprintf+0x256>
    13a0:	24 ff       	sbrs	r18, 4
    13a2:	0a c0       	rjmp	.+20     	; 0x13b8 <vfprintf+0x25c>
    13a4:	9f 2f       	mov	r25, r31
    13a6:	96 60       	ori	r25, 0x06	; 6
    13a8:	b9 2e       	mov	r11, r25
    13aa:	06 c0       	rjmp	.+12     	; 0x13b8 <vfprintf+0x25c>
    13ac:	28 e0       	ldi	r18, 0x08	; 8
    13ae:	30 e0       	ldi	r19, 0x00	; 0
    13b0:	05 c0       	rjmp	.+10     	; 0x13bc <vfprintf+0x260>
    13b2:	20 e1       	ldi	r18, 0x10	; 16
    13b4:	30 e0       	ldi	r19, 0x00	; 0
    13b6:	02 c0       	rjmp	.+4      	; 0x13bc <vfprintf+0x260>
    13b8:	20 e1       	ldi	r18, 0x10	; 16
    13ba:	32 e0       	ldi	r19, 0x02	; 2
    13bc:	f8 01       	movw	r30, r16
    13be:	b7 fe       	sbrs	r11, 7
    13c0:	07 c0       	rjmp	.+14     	; 0x13d0 <vfprintf+0x274>
    13c2:	60 81       	ld	r22, Z
    13c4:	71 81       	ldd	r23, Z+1	; 0x01
    13c6:	82 81       	ldd	r24, Z+2	; 0x02
    13c8:	93 81       	ldd	r25, Z+3	; 0x03
    13ca:	0c 5f       	subi	r16, 0xFC	; 252
    13cc:	1f 4f       	sbci	r17, 0xFF	; 255
    13ce:	06 c0       	rjmp	.+12     	; 0x13dc <vfprintf+0x280>
    13d0:	60 81       	ld	r22, Z
    13d2:	71 81       	ldd	r23, Z+1	; 0x01
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	0e 5f       	subi	r16, 0xFE	; 254
    13da:	1f 4f       	sbci	r17, 0xFF	; 255
    13dc:	a4 01       	movw	r20, r8
    13de:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__ultoa_invert>
    13e2:	a8 2e       	mov	r10, r24
    13e4:	a8 18       	sub	r10, r8
    13e6:	fb 2d       	mov	r31, r11
    13e8:	ff 77       	andi	r31, 0x7F	; 127
    13ea:	bf 2e       	mov	r11, r31
    13ec:	b6 fe       	sbrs	r11, 6
    13ee:	0b c0       	rjmp	.+22     	; 0x1406 <vfprintf+0x2aa>
    13f0:	2b 2d       	mov	r18, r11
    13f2:	2e 7f       	andi	r18, 0xFE	; 254
    13f4:	a5 14       	cp	r10, r5
    13f6:	50 f4       	brcc	.+20     	; 0x140c <vfprintf+0x2b0>
    13f8:	b4 fe       	sbrs	r11, 4
    13fa:	0a c0       	rjmp	.+20     	; 0x1410 <vfprintf+0x2b4>
    13fc:	b2 fc       	sbrc	r11, 2
    13fe:	08 c0       	rjmp	.+16     	; 0x1410 <vfprintf+0x2b4>
    1400:	2b 2d       	mov	r18, r11
    1402:	2e 7e       	andi	r18, 0xEE	; 238
    1404:	05 c0       	rjmp	.+10     	; 0x1410 <vfprintf+0x2b4>
    1406:	7a 2c       	mov	r7, r10
    1408:	2b 2d       	mov	r18, r11
    140a:	03 c0       	rjmp	.+6      	; 0x1412 <vfprintf+0x2b6>
    140c:	7a 2c       	mov	r7, r10
    140e:	01 c0       	rjmp	.+2      	; 0x1412 <vfprintf+0x2b6>
    1410:	75 2c       	mov	r7, r5
    1412:	24 ff       	sbrs	r18, 4
    1414:	0d c0       	rjmp	.+26     	; 0x1430 <vfprintf+0x2d4>
    1416:	fe 01       	movw	r30, r28
    1418:	ea 0d       	add	r30, r10
    141a:	f1 1d       	adc	r31, r1
    141c:	80 81       	ld	r24, Z
    141e:	80 33       	cpi	r24, 0x30	; 48
    1420:	11 f4       	brne	.+4      	; 0x1426 <vfprintf+0x2ca>
    1422:	29 7e       	andi	r18, 0xE9	; 233
    1424:	09 c0       	rjmp	.+18     	; 0x1438 <vfprintf+0x2dc>
    1426:	22 ff       	sbrs	r18, 2
    1428:	06 c0       	rjmp	.+12     	; 0x1436 <vfprintf+0x2da>
    142a:	73 94       	inc	r7
    142c:	73 94       	inc	r7
    142e:	04 c0       	rjmp	.+8      	; 0x1438 <vfprintf+0x2dc>
    1430:	82 2f       	mov	r24, r18
    1432:	86 78       	andi	r24, 0x86	; 134
    1434:	09 f0       	breq	.+2      	; 0x1438 <vfprintf+0x2dc>
    1436:	73 94       	inc	r7
    1438:	23 fd       	sbrc	r18, 3
    143a:	13 c0       	rjmp	.+38     	; 0x1462 <vfprintf+0x306>
    143c:	20 ff       	sbrs	r18, 0
    143e:	06 c0       	rjmp	.+12     	; 0x144c <vfprintf+0x2f0>
    1440:	5a 2c       	mov	r5, r10
    1442:	73 14       	cp	r7, r3
    1444:	18 f4       	brcc	.+6      	; 0x144c <vfprintf+0x2f0>
    1446:	53 0c       	add	r5, r3
    1448:	57 18       	sub	r5, r7
    144a:	73 2c       	mov	r7, r3
    144c:	73 14       	cp	r7, r3
    144e:	68 f4       	brcc	.+26     	; 0x146a <vfprintf+0x30e>
    1450:	b7 01       	movw	r22, r14
    1452:	80 e2       	ldi	r24, 0x20	; 32
    1454:	90 e0       	ldi	r25, 0x00	; 0
    1456:	2c 87       	std	Y+12, r18	; 0x0c
    1458:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
    145c:	73 94       	inc	r7
    145e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1460:	f5 cf       	rjmp	.-22     	; 0x144c <vfprintf+0x2f0>
    1462:	73 14       	cp	r7, r3
    1464:	10 f4       	brcc	.+4      	; 0x146a <vfprintf+0x30e>
    1466:	37 18       	sub	r3, r7
    1468:	01 c0       	rjmp	.+2      	; 0x146c <vfprintf+0x310>
    146a:	31 2c       	mov	r3, r1
    146c:	24 ff       	sbrs	r18, 4
    146e:	12 c0       	rjmp	.+36     	; 0x1494 <vfprintf+0x338>
    1470:	b7 01       	movw	r22, r14
    1472:	80 e3       	ldi	r24, 0x30	; 48
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	2c 87       	std	Y+12, r18	; 0x0c
    1478:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
    147c:	2c 85       	ldd	r18, Y+12	; 0x0c
    147e:	22 ff       	sbrs	r18, 2
    1480:	17 c0       	rjmp	.+46     	; 0x14b0 <vfprintf+0x354>
    1482:	21 ff       	sbrs	r18, 1
    1484:	03 c0       	rjmp	.+6      	; 0x148c <vfprintf+0x330>
    1486:	88 e5       	ldi	r24, 0x58	; 88
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	02 c0       	rjmp	.+4      	; 0x1490 <vfprintf+0x334>
    148c:	88 e7       	ldi	r24, 0x78	; 120
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	b7 01       	movw	r22, r14
    1492:	0c c0       	rjmp	.+24     	; 0x14ac <vfprintf+0x350>
    1494:	82 2f       	mov	r24, r18
    1496:	86 78       	andi	r24, 0x86	; 134
    1498:	59 f0       	breq	.+22     	; 0x14b0 <vfprintf+0x354>
    149a:	21 fd       	sbrc	r18, 1
    149c:	02 c0       	rjmp	.+4      	; 0x14a2 <vfprintf+0x346>
    149e:	80 e2       	ldi	r24, 0x20	; 32
    14a0:	01 c0       	rjmp	.+2      	; 0x14a4 <vfprintf+0x348>
    14a2:	8b e2       	ldi	r24, 0x2B	; 43
    14a4:	27 fd       	sbrc	r18, 7
    14a6:	8d e2       	ldi	r24, 0x2D	; 45
    14a8:	b7 01       	movw	r22, r14
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
    14b0:	a5 14       	cp	r10, r5
    14b2:	38 f4       	brcc	.+14     	; 0x14c2 <vfprintf+0x366>
    14b4:	b7 01       	movw	r22, r14
    14b6:	80 e3       	ldi	r24, 0x30	; 48
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
    14be:	5a 94       	dec	r5
    14c0:	f7 cf       	rjmp	.-18     	; 0x14b0 <vfprintf+0x354>
    14c2:	aa 94       	dec	r10
    14c4:	f4 01       	movw	r30, r8
    14c6:	ea 0d       	add	r30, r10
    14c8:	f1 1d       	adc	r31, r1
    14ca:	80 81       	ld	r24, Z
    14cc:	b7 01       	movw	r22, r14
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
    14d4:	a1 10       	cpse	r10, r1
    14d6:	f5 cf       	rjmp	.-22     	; 0x14c2 <vfprintf+0x366>
    14d8:	33 20       	and	r3, r3
    14da:	09 f4       	brne	.+2      	; 0x14de <vfprintf+0x382>
    14dc:	51 ce       	rjmp	.-862    	; 0x1180 <vfprintf+0x24>
    14de:	b7 01       	movw	r22, r14
    14e0:	80 e2       	ldi	r24, 0x20	; 32
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
    14e8:	3a 94       	dec	r3
    14ea:	f6 cf       	rjmp	.-20     	; 0x14d8 <vfprintf+0x37c>
    14ec:	f7 01       	movw	r30, r14
    14ee:	86 81       	ldd	r24, Z+6	; 0x06
    14f0:	97 81       	ldd	r25, Z+7	; 0x07
    14f2:	02 c0       	rjmp	.+4      	; 0x14f8 <vfprintf+0x39c>
    14f4:	8f ef       	ldi	r24, 0xFF	; 255
    14f6:	9f ef       	ldi	r25, 0xFF	; 255
    14f8:	2c 96       	adiw	r28, 0x0c	; 12
    14fa:	e2 e1       	ldi	r30, 0x12	; 18
    14fc:	0c 94 65 0b 	jmp	0x16ca	; 0x16ca <__epilogue_restores__>

00001500 <calloc>:
    1500:	0f 93       	push	r16
    1502:	1f 93       	push	r17
    1504:	cf 93       	push	r28
    1506:	df 93       	push	r29
    1508:	86 9f       	mul	r24, r22
    150a:	80 01       	movw	r16, r0
    150c:	87 9f       	mul	r24, r23
    150e:	10 0d       	add	r17, r0
    1510:	96 9f       	mul	r25, r22
    1512:	10 0d       	add	r17, r0
    1514:	11 24       	eor	r1, r1
    1516:	c8 01       	movw	r24, r16
    1518:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <malloc>
    151c:	ec 01       	movw	r28, r24
    151e:	00 97       	sbiw	r24, 0x00	; 0
    1520:	29 f0       	breq	.+10     	; 0x152c <calloc+0x2c>
    1522:	a8 01       	movw	r20, r16
    1524:	60 e0       	ldi	r22, 0x00	; 0
    1526:	70 e0       	ldi	r23, 0x00	; 0
    1528:	0e 94 a7 0a 	call	0x154e	; 0x154e <memset>
    152c:	ce 01       	movw	r24, r28
    152e:	df 91       	pop	r29
    1530:	cf 91       	pop	r28
    1532:	1f 91       	pop	r17
    1534:	0f 91       	pop	r16
    1536:	08 95       	ret

00001538 <strnlen_P>:
    1538:	fc 01       	movw	r30, r24
    153a:	05 90       	lpm	r0, Z+
    153c:	61 50       	subi	r22, 0x01	; 1
    153e:	70 40       	sbci	r23, 0x00	; 0
    1540:	01 10       	cpse	r0, r1
    1542:	d8 f7       	brcc	.-10     	; 0x153a <strnlen_P+0x2>
    1544:	80 95       	com	r24
    1546:	90 95       	com	r25
    1548:	8e 0f       	add	r24, r30
    154a:	9f 1f       	adc	r25, r31
    154c:	08 95       	ret

0000154e <memset>:
    154e:	dc 01       	movw	r26, r24
    1550:	01 c0       	rjmp	.+2      	; 0x1554 <memset+0x6>
    1552:	6d 93       	st	X+, r22
    1554:	41 50       	subi	r20, 0x01	; 1
    1556:	50 40       	sbci	r21, 0x00	; 0
    1558:	e0 f7       	brcc	.-8      	; 0x1552 <memset+0x4>
    155a:	08 95       	ret

0000155c <strnlen>:
    155c:	fc 01       	movw	r30, r24
    155e:	61 50       	subi	r22, 0x01	; 1
    1560:	70 40       	sbci	r23, 0x00	; 0
    1562:	01 90       	ld	r0, Z+
    1564:	01 10       	cpse	r0, r1
    1566:	d8 f7       	brcc	.-10     	; 0x155e <strnlen+0x2>
    1568:	80 95       	com	r24
    156a:	90 95       	com	r25
    156c:	8e 0f       	add	r24, r30
    156e:	9f 1f       	adc	r25, r31
    1570:	08 95       	ret

00001572 <fputc>:
    1572:	0f 93       	push	r16
    1574:	1f 93       	push	r17
    1576:	cf 93       	push	r28
    1578:	df 93       	push	r29
    157a:	18 2f       	mov	r17, r24
    157c:	09 2f       	mov	r16, r25
    157e:	eb 01       	movw	r28, r22
    1580:	8b 81       	ldd	r24, Y+3	; 0x03
    1582:	81 fd       	sbrc	r24, 1
    1584:	03 c0       	rjmp	.+6      	; 0x158c <fputc+0x1a>
    1586:	8f ef       	ldi	r24, 0xFF	; 255
    1588:	9f ef       	ldi	r25, 0xFF	; 255
    158a:	20 c0       	rjmp	.+64     	; 0x15cc <fputc+0x5a>
    158c:	82 ff       	sbrs	r24, 2
    158e:	10 c0       	rjmp	.+32     	; 0x15b0 <fputc+0x3e>
    1590:	4e 81       	ldd	r20, Y+6	; 0x06
    1592:	5f 81       	ldd	r21, Y+7	; 0x07
    1594:	2c 81       	ldd	r18, Y+4	; 0x04
    1596:	3d 81       	ldd	r19, Y+5	; 0x05
    1598:	42 17       	cp	r20, r18
    159a:	53 07       	cpc	r21, r19
    159c:	7c f4       	brge	.+30     	; 0x15bc <fputc+0x4a>
    159e:	e8 81       	ld	r30, Y
    15a0:	f9 81       	ldd	r31, Y+1	; 0x01
    15a2:	9f 01       	movw	r18, r30
    15a4:	2f 5f       	subi	r18, 0xFF	; 255
    15a6:	3f 4f       	sbci	r19, 0xFF	; 255
    15a8:	39 83       	std	Y+1, r19	; 0x01
    15aa:	28 83       	st	Y, r18
    15ac:	10 83       	st	Z, r17
    15ae:	06 c0       	rjmp	.+12     	; 0x15bc <fputc+0x4a>
    15b0:	e8 85       	ldd	r30, Y+8	; 0x08
    15b2:	f9 85       	ldd	r31, Y+9	; 0x09
    15b4:	81 2f       	mov	r24, r17
    15b6:	09 95       	icall
    15b8:	89 2b       	or	r24, r25
    15ba:	29 f7       	brne	.-54     	; 0x1586 <fputc+0x14>
    15bc:	2e 81       	ldd	r18, Y+6	; 0x06
    15be:	3f 81       	ldd	r19, Y+7	; 0x07
    15c0:	2f 5f       	subi	r18, 0xFF	; 255
    15c2:	3f 4f       	sbci	r19, 0xFF	; 255
    15c4:	3f 83       	std	Y+7, r19	; 0x07
    15c6:	2e 83       	std	Y+6, r18	; 0x06
    15c8:	81 2f       	mov	r24, r17
    15ca:	90 2f       	mov	r25, r16
    15cc:	df 91       	pop	r29
    15ce:	cf 91       	pop	r28
    15d0:	1f 91       	pop	r17
    15d2:	0f 91       	pop	r16
    15d4:	08 95       	ret

000015d6 <__ultoa_invert>:
    15d6:	fa 01       	movw	r30, r20
    15d8:	aa 27       	eor	r26, r26
    15da:	28 30       	cpi	r18, 0x08	; 8
    15dc:	51 f1       	breq	.+84     	; 0x1632 <__ultoa_invert+0x5c>
    15de:	20 31       	cpi	r18, 0x10	; 16
    15e0:	81 f1       	breq	.+96     	; 0x1642 <__ultoa_invert+0x6c>
    15e2:	e8 94       	clt
    15e4:	6f 93       	push	r22
    15e6:	6e 7f       	andi	r22, 0xFE	; 254
    15e8:	6e 5f       	subi	r22, 0xFE	; 254
    15ea:	7f 4f       	sbci	r23, 0xFF	; 255
    15ec:	8f 4f       	sbci	r24, 0xFF	; 255
    15ee:	9f 4f       	sbci	r25, 0xFF	; 255
    15f0:	af 4f       	sbci	r26, 0xFF	; 255
    15f2:	b1 e0       	ldi	r27, 0x01	; 1
    15f4:	3e d0       	rcall	.+124    	; 0x1672 <__ultoa_invert+0x9c>
    15f6:	b4 e0       	ldi	r27, 0x04	; 4
    15f8:	3c d0       	rcall	.+120    	; 0x1672 <__ultoa_invert+0x9c>
    15fa:	67 0f       	add	r22, r23
    15fc:	78 1f       	adc	r23, r24
    15fe:	89 1f       	adc	r24, r25
    1600:	9a 1f       	adc	r25, r26
    1602:	a1 1d       	adc	r26, r1
    1604:	68 0f       	add	r22, r24
    1606:	79 1f       	adc	r23, r25
    1608:	8a 1f       	adc	r24, r26
    160a:	91 1d       	adc	r25, r1
    160c:	a1 1d       	adc	r26, r1
    160e:	6a 0f       	add	r22, r26
    1610:	71 1d       	adc	r23, r1
    1612:	81 1d       	adc	r24, r1
    1614:	91 1d       	adc	r25, r1
    1616:	a1 1d       	adc	r26, r1
    1618:	20 d0       	rcall	.+64     	; 0x165a <__ultoa_invert+0x84>
    161a:	09 f4       	brne	.+2      	; 0x161e <__ultoa_invert+0x48>
    161c:	68 94       	set
    161e:	3f 91       	pop	r19
    1620:	2a e0       	ldi	r18, 0x0A	; 10
    1622:	26 9f       	mul	r18, r22
    1624:	11 24       	eor	r1, r1
    1626:	30 19       	sub	r19, r0
    1628:	30 5d       	subi	r19, 0xD0	; 208
    162a:	31 93       	st	Z+, r19
    162c:	de f6       	brtc	.-74     	; 0x15e4 <__ultoa_invert+0xe>
    162e:	cf 01       	movw	r24, r30
    1630:	08 95       	ret
    1632:	46 2f       	mov	r20, r22
    1634:	47 70       	andi	r20, 0x07	; 7
    1636:	40 5d       	subi	r20, 0xD0	; 208
    1638:	41 93       	st	Z+, r20
    163a:	b3 e0       	ldi	r27, 0x03	; 3
    163c:	0f d0       	rcall	.+30     	; 0x165c <__ultoa_invert+0x86>
    163e:	c9 f7       	brne	.-14     	; 0x1632 <__ultoa_invert+0x5c>
    1640:	f6 cf       	rjmp	.-20     	; 0x162e <__ultoa_invert+0x58>
    1642:	46 2f       	mov	r20, r22
    1644:	4f 70       	andi	r20, 0x0F	; 15
    1646:	40 5d       	subi	r20, 0xD0	; 208
    1648:	4a 33       	cpi	r20, 0x3A	; 58
    164a:	18 f0       	brcs	.+6      	; 0x1652 <__ultoa_invert+0x7c>
    164c:	49 5d       	subi	r20, 0xD9	; 217
    164e:	31 fd       	sbrc	r19, 1
    1650:	40 52       	subi	r20, 0x20	; 32
    1652:	41 93       	st	Z+, r20
    1654:	02 d0       	rcall	.+4      	; 0x165a <__ultoa_invert+0x84>
    1656:	a9 f7       	brne	.-22     	; 0x1642 <__ultoa_invert+0x6c>
    1658:	ea cf       	rjmp	.-44     	; 0x162e <__ultoa_invert+0x58>
    165a:	b4 e0       	ldi	r27, 0x04	; 4
    165c:	a6 95       	lsr	r26
    165e:	97 95       	ror	r25
    1660:	87 95       	ror	r24
    1662:	77 95       	ror	r23
    1664:	67 95       	ror	r22
    1666:	ba 95       	dec	r27
    1668:	c9 f7       	brne	.-14     	; 0x165c <__ultoa_invert+0x86>
    166a:	00 97       	sbiw	r24, 0x00	; 0
    166c:	61 05       	cpc	r22, r1
    166e:	71 05       	cpc	r23, r1
    1670:	08 95       	ret
    1672:	9b 01       	movw	r18, r22
    1674:	ac 01       	movw	r20, r24
    1676:	0a 2e       	mov	r0, r26
    1678:	06 94       	lsr	r0
    167a:	57 95       	ror	r21
    167c:	47 95       	ror	r20
    167e:	37 95       	ror	r19
    1680:	27 95       	ror	r18
    1682:	ba 95       	dec	r27
    1684:	c9 f7       	brne	.-14     	; 0x1678 <__ultoa_invert+0xa2>
    1686:	62 0f       	add	r22, r18
    1688:	73 1f       	adc	r23, r19
    168a:	84 1f       	adc	r24, r20
    168c:	95 1f       	adc	r25, r21
    168e:	a0 1d       	adc	r26, r0
    1690:	08 95       	ret

00001692 <__prologue_saves__>:
    1692:	2f 92       	push	r2
    1694:	3f 92       	push	r3
    1696:	4f 92       	push	r4
    1698:	5f 92       	push	r5
    169a:	6f 92       	push	r6
    169c:	7f 92       	push	r7
    169e:	8f 92       	push	r8
    16a0:	9f 92       	push	r9
    16a2:	af 92       	push	r10
    16a4:	bf 92       	push	r11
    16a6:	cf 92       	push	r12
    16a8:	df 92       	push	r13
    16aa:	ef 92       	push	r14
    16ac:	ff 92       	push	r15
    16ae:	0f 93       	push	r16
    16b0:	1f 93       	push	r17
    16b2:	cf 93       	push	r28
    16b4:	df 93       	push	r29
    16b6:	cd b7       	in	r28, 0x3d	; 61
    16b8:	de b7       	in	r29, 0x3e	; 62
    16ba:	ca 1b       	sub	r28, r26
    16bc:	db 0b       	sbc	r29, r27
    16be:	0f b6       	in	r0, 0x3f	; 63
    16c0:	f8 94       	cli
    16c2:	de bf       	out	0x3e, r29	; 62
    16c4:	0f be       	out	0x3f, r0	; 63
    16c6:	cd bf       	out	0x3d, r28	; 61
    16c8:	09 94       	ijmp

000016ca <__epilogue_restores__>:
    16ca:	2a 88       	ldd	r2, Y+18	; 0x12
    16cc:	39 88       	ldd	r3, Y+17	; 0x11
    16ce:	48 88       	ldd	r4, Y+16	; 0x10
    16d0:	5f 84       	ldd	r5, Y+15	; 0x0f
    16d2:	6e 84       	ldd	r6, Y+14	; 0x0e
    16d4:	7d 84       	ldd	r7, Y+13	; 0x0d
    16d6:	8c 84       	ldd	r8, Y+12	; 0x0c
    16d8:	9b 84       	ldd	r9, Y+11	; 0x0b
    16da:	aa 84       	ldd	r10, Y+10	; 0x0a
    16dc:	b9 84       	ldd	r11, Y+9	; 0x09
    16de:	c8 84       	ldd	r12, Y+8	; 0x08
    16e0:	df 80       	ldd	r13, Y+7	; 0x07
    16e2:	ee 80       	ldd	r14, Y+6	; 0x06
    16e4:	fd 80       	ldd	r15, Y+5	; 0x05
    16e6:	0c 81       	ldd	r16, Y+4	; 0x04
    16e8:	1b 81       	ldd	r17, Y+3	; 0x03
    16ea:	aa 81       	ldd	r26, Y+2	; 0x02
    16ec:	b9 81       	ldd	r27, Y+1	; 0x01
    16ee:	ce 0f       	add	r28, r30
    16f0:	d1 1d       	adc	r29, r1
    16f2:	0f b6       	in	r0, 0x3f	; 63
    16f4:	f8 94       	cli
    16f6:	de bf       	out	0x3e, r29	; 62
    16f8:	0f be       	out	0x3f, r0	; 63
    16fa:	cd bf       	out	0x3d, r28	; 61
    16fc:	ed 01       	movw	r28, r26
    16fe:	08 95       	ret

00001700 <_exit>:
    1700:	f8 94       	cli

00001702 <__stop_program>:
    1702:	ff cf       	rjmp	.-2      	; 0x1702 <__stop_program>
